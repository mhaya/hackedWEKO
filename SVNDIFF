Index: action/edit/adminadmit/Adminadmit.class.php
===================================================================
--- action/edit/adminadmit/Adminadmit.class.php	(revision 664)
+++ action/edit/adminadmit/Adminadmit.class.php	(working copy)
@@ -1709,7 +1709,7 @@
                 }
             }
 			// Add external author ID prefix 2010/11/11 A.Suzuki --end--
-			
+
             // Add URL rewrite 2011/11/15 T.Koyasu -start-
             $use_url_rewrite = $this->Session->getParameter('use_url_rewrite');
             // chage url rewrite radio button -> resetting .htaccess
@@ -2115,7 +2115,7 @@
                 // make pattern for preg_match
                 $replaced_path = preg_quote($path, "/");
                 $pattern = "/RewriteBase +" .$replaced_path ."/";
-                
+
                 // file change or not
                 $url_rewrite_flg = false;
                 $flg_pattern = "/RewriteEngine +On/";
Index: action/main/sword/SwordUpdate.class.php
===================================================================
--- action/main/sword/SwordUpdate.class.php	(revision 664)
+++ action/main/sword/SwordUpdate.class.php	(working copy)
@@ -642,7 +642,7 @@
             // responce body
             $response = "<?xml version=\"1.0\" encoding=\"utf-8\"?>" . "\n";
             $response.= "<sword:error xmlns=\"". htmlspecialchars_self("http://www.w3.org/2005/Atom").
-                        "\" xmlns:sword=\""    . htmlspecialchars_self("http://purl.org/net/sword/") .
+                        "\" xmlns:sword=\""    . htmlspecialchars_self("http://purl.org/net/sword/terms/") .
                         "\" xmlns:arxiv=\""    . htmlspecialchars_self("http://arxiv.org/schemas/atom") .
                         "\" href=\""           . htmlspecialchars_self("http://example.org/errors/BadManifest"). "\">" . "\n";
             // title
Index: action/main/sword/SwordUtility.class.php
===================================================================
--- action/main/sword/SwordUtility.class.php	(revision 664)
+++ action/main/sword/SwordUtility.class.php	(working copy)
@@ -127,7 +127,8 @@
 		// V1.2 => V1.3 : <sword:level> removed...
 //	    $root['level']           = '1';								// Server Level	
 		// V1.2 => V1.3 : <sword:version> added.(mandately)
-	    $root['version']         = 2.0;								// Server Version
+		// V2.0 : The SWORD server MUST specify the sword:version element with a value of 2.0
+	    $root['version']         = '2.0';								// Server Version
 	    // V1.2 => V1.3 : <sword:maxUploadSize> added.(option)
 	    $root['maxUploadSize']   = intval($upload_max_capacity_group)/1024;	// maxUploadSize (KB)	
 		
Index: action/main/sword/servicedocument/Servicedocument.class.php
===================================================================
--- action/main/sword/servicedocument/Servicedocument.class.php	(revision 664)
+++ action/main/sword/servicedocument/Servicedocument.class.php	(working copy)
@@ -124,7 +124,7 @@
         //   Full level 1 compliance REQUIRES implementation of the full set of extension elements and compliance with APP [ATOMPUB] as indicated by the SWORD profile of APP specified in this document.
         //  sword:verbose (true or false): Verbose Supported
         //  sword:noOp (true or false)   : no-Op Supported
-        $str .="<service xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sword=\"http://purl.org/net/sword/\">" . "\n";
+        $str .="<service xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sword=\"http://purl.org/net/sword/terms/\">" . "\n";
         // V1.2 => V1.3 : <sword:level> removed.
 //      $str .="  <sword:level>" . $workspace['workspace']['level']  ."</sword:level>\n";
         // V1.2 => V1.3 : <sword:version> added.
Index: files/sword/utils.php
===================================================================
--- files/sword/utils.php	(revision 664)
+++ files/sword/utils.php	(working copy)
@@ -360,6 +360,7 @@
         $filename = "deposit";
         $token = split('[;]', $deposition);
         foreach($token as $value) {
+            $value = trim($value);
             $filename = split('[=]', $value);
             if(!strcmp($filename[0],'filename')) {
                 $filename = $filename[1];
Index: oaipmh/format/Lido.class.php
===================================================================
--- oaipmh/format/Lido.class.php	(revision 664)
+++ oaipmh/format/Lido.class.php	(working copy)
@@ -129,7 +129,10 @@
         {
             return '';
         }
-        
+
+
+        $this->fixOutputFormat();
+
         // convert DOMDocument to XML string
         $xml = $this->domDocument->saveXML();
         
@@ -1156,5 +1159,228 @@
             }
         }
     }
+
+    /**
+     *
+     * LODO Schemaの妥当性検証パスするための暫定対応
+     *
+     **/
+    private function fixOutputFormat(){
+        $this->domDocument->normalizeDocument();
+
+        // sequence暫定対応(lido:descriptiveMetadata)
+        $descmeta = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_DESCRIPTIVE_METADATA);
+        if($descmeta->length===1){
+            $descmeta = $descmeta->item(0);
+
+            $obj_cls_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_CLASSIFICATION_WRAP)->item(0);
+            $obj_ident_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_IDENTIFICATION_WRAP)->item(0);
+            $event_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_WRAP)->item(0);
+$obj_rel_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_RELATION_WRAP)->item(0);
+
+            $descmeta->removeChild($obj_cls_wrap);
+            $descmeta->removeChild($obj_ident_wrap);
+            $descmeta->removeChild($event_wrap);
+            $descmeta->removeChild($obj_rel_wrap);
+
+            $descmeta->appendChild($obj_cls_wrap);
+            $descmeta->appendChild($obj_ident_wrap);
+            $descmeta->appendChild($event_wrap);
+            $descmeta->appendChild($obj_rel_wrap);
+        }
+
+        // sequence暫定対応(lido:objectIdentificationWrap)
+        $obj_ident_wrap = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_IDENTIFICATION_WRAP);
+        if($obj_ident_wrap->length ===1 ){
+            $obj_ident_wrap = $obj_ident_wrap->item(0);
+
+            $title_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_TITLE_WRAP)->item(0);
+            $repo_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_REPOSITORY_WRAP)->item(0);
+            $obj_desc_wrap =  $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_DESCRIPTION_WRAP)->item(0);
+            $obj_mesure_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_MEASUREMENTS_WRAP)->item(0);
+            /*
+            $obj_ident_wrap->removeChild($title_wrap);
+            $obj_ident_wrap->removeChild($repo_wrap);
+            $obj_ident_wrap->removeChild($obj_desc_wrap);
+            $obj_ident_wrap->removeChild($obj_mesure_wrap);
+            */
+            $obj_ident_wrap->appendChild($title_wrap);
+            $obj_ident_wrap->appendChild($repo_wrap);
+            $obj_ident_wrap->appendChild($obj_desc_wrap);
+            $obj_ident_wrap->appendChild($obj_mesure_wrap);
+        }
+
+        // sequence暫定対応(lido:objectWorkType)
+        $obj_work_type = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_WORK_TYPE);
+        foreach($obj_work_type as $node){
+            //$id = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_CONCEPT_ID);
+            $term = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_TERM);
+            if($term->length >0 ){
+                foreach($term as $node2){
+                    //       $node->removeChild($node2);
+                    $node->appendChild($node2);
+                }
+            }
+        }
+
+
+        //eventID 0..*
+        //eventType 
+        //roleInEvent 0..*
+        //eventName 0..*
+        //eventActor 0..*
+        //culture 0..*
+        //eventDate 0..*
+        //periodName 0..*
+        //eventPlace 0..*
+        //eventMethod 0..*
+        //eventMaterialsTech 0..*
+        //thingPresent 0..*
+        //relatedEventSet 0..*
+        //eventDescriptionSet 0..*
+        $eventTag = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT);
+        if($eventTag->length === 1){
+            $tmp = $eventTag->item(0);
+            //            $event_id = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_ID);
+            $event_type = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_TYPE);
+            $event_actorTag = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_ACTOR);
+            $event_date = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_DATE);
+            $period_name = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_PERIOD_NAME);
+            $event_place = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_PLACE); 
+            $event_materialstech = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_MATERIALS_TECH);
+            
+            /*
+            foreach($event_id as $node) {
+                $tmp->appendChild($node);
+            }
+            */
+            // lido:event_type は lido:eventでは必須
+            if($event_type->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_TYPE);
+                $tmp->appendChild($node);
+            }
+            foreach($event_type as $node) {
+                $tmp->appendChild($node);
+            }           
+            foreach($event_actorTag as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_date as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($period_name as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_place as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_materialstech as $node) {
+                $tmp->appendChild($node);
+            }
+        }
+        
+        // RecordWrap
+        $record_wrap = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_WRAP);
+        if($record_wrap->length === 1 ){
+            $tmp = $record_wrap->item(0);
+            // recordID 1..*            
+            $rec_id = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_ID);
+            // recordType            
+            $rec_type = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_TYPE);
+            // recordSource 1..*
+            $rec_src = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_SOURCE);
+            // recordRights 0..*
+            //$rec_right = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_);
+
+            // recordInfoSet 0..*
+            $rec_infoset = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_INFO_SET);
+
+            if($rec_id->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_ID);
+                $tmp->appendChild($node);
+            }
+
+            if($rec_type->length === 0){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_TYPE);
+                $tmp->appendChild($node);
+            }
+
+            if($rec_src->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_SOURCE);
+                $tmp->appendChild($node);
+            }
+            
+            $newDoc = new DOMDocument();
+            $root = $newDoc->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_WRAP);
+            $newDoc->appendChild($root);
+            foreach($rec_id as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            foreach($rec_type as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            foreach($rec_src as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            
+            foreach($rec_infoset as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            $this->deleteChildren($record_wrap->item(0));
+            $newNode = $this->domDocument->importNode($root,true);
+            $record_wrap->item(0)->parentNode->replaceChild($newNode,$record_wrap->item(0));
+            
+            
+        }
+
+        //resourceSet
+        //resourceID 0..1
+        //resourceRepresentation 0..*
+        //resourceType 0..1
+        //resourceRelType 0..*
+        //resourcePerspective 0..*
+        //resourceDescription 0..*
+        //resourceDateTaken 0..1
+        //resourceSource 0..*
+        //rightsResource 0..*
+        $resourceSet = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_SET);
+        foreach($resourceSet as $node){
+            $res_rep = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_REPRESENTATION);
+            $res_desc = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_DESCRIPTION);
+            $res_src = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_SOURCE);
+            $res_right = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RIGHT_RESOURCE);
+            
+            foreach($res_rep as $n) {
+                $node->appendChild($n);
+            }
+            foreach($res_desc as $n){
+                $node->appendChild($n);
+            }
+            foreach($res_src as $n){
+                $node->appendChild($n);
+            }
+            foreach($res_right as $n){
+                $node->appendChild($n);
+            }
+        }
+        
+        
+        
+    }
+
+    private function deleteNode($node) { 
+        $this->deleteChildren($node); 
+        $parent = $node->parentNode; 
+        $oldnode = $parent->removeChild($node); 
+    } 
+
+    private function deleteChildren($node) {
+        while (isset($node->firstChild)) { 
+            $this->deleteChildren($node->firstChild); 
+            $node->removeChild($node->firstChild); 
+        } 
+    } 
+
+    
 }
 ?>
\ No newline at end of file
Index: opensearch/Opensearch.class.php
===================================================================
--- opensearch/Opensearch.class.php	(revision 664)
+++ opensearch/Opensearch.class.php	(working copy)
@@ -159,7 +159,8 @@
             case RepositorySearchRequestParameter::FORMAT_ATOM:
                 // output ATOM
                 require_once WEBAPP_DIR.'/modules/repository/opensearch/format/Atom.class.php';
-                $outputClass = new Repository_OpenSearch_Atom($this->Session, $this->Db);
+                $blockid = $this->RepositoryAction->getBlockPageId();
+                $outputClass = new Repository_OpenSearch_Atom($this->Session, $this->Db,$blockid);
                 $searchResult = $this->search();
                 $requestParam = $this->getRequestParameter();
                 $requestParam[self::REQUEST_LOG_TERM] = $this->log_term;
@@ -215,6 +216,7 @@
                     $block_info = $this->RepositoryAction->getBlockPageId();
                     $redirectUrl .= "&page_id=". $block_info["page_id"].
                                     "&block_id=". $block_info["block_id"];
+
                 }
                 break;
         }
Index: opensearch/format/Atom.class.php
===================================================================
--- opensearch/format/Atom.class.php	(revision 664)
+++ opensearch/format/Atom.class.php	(working copy)
@@ -23,13 +23,16 @@
     const XMLNS_PRISM       = "http://prismstandard.org/namespaces/basic/2.0/";
     const XMLNS_OPEN_SEARCH = "http://a9.com/-/spec/opensearch/1.1/";
     const XMLNS_WEKO_LOG    = "/wekolog/";
-    
+
+
+    private $blockid = array();
     /**
      * コンストラクタ
      */
-    public function __construct($session, $db)
+    public function __construct($session, $db,$blockid)
     {
         parent::__construct($session, $db);
+        $this->blockid = $blockid;
     }
     
     /**
@@ -183,6 +186,7 @@
         {
             $itemData = array();
             $itemData = $this->getOutputData($request, $searchResult[$ii]["item_id"], $searchResult[$ii]["item_no"]);
+
             if(strlen($request[self::REQUEST_LOG_TERM]) > 0)
             {
                 // set log result
@@ -228,7 +232,7 @@
             
             // mapping info
             $xml .= '       <prism:aggregationType>'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_MAPPING_INFO]).'</prism:aggregationType>'.self::LF;
-            
+
             // item type name
             $xml .= '       <dc:type>'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_ITEM_TYPE_NAME]).'</dc:type>'.self::LF;
             
@@ -242,6 +246,17 @@
             for($jj=0; $jj<count($itemData[self::DATA_FILE_URI]); $jj++)
             {
                 $xml .= '       <dc:identifier>'.$this->RepositoryAction->forXmlChange("file_id:".$itemData[self::DATA_FILE_URI][$jj]).'</dc:identifier>'.self::LF;
+                //enclosure file link
+                //リダイレクト後のURLを作成する
+                $url = $itemData[self::DATA_FILE_URI][$jj];
+                $url = str_replace("/?","/index.php?",$url);
+                $url = str_replace("action=repository_uri","action=pages_view_main&active_action=repository_action_common_download",$url);
+                $url = str_replace("file_id","attribute_id",$url);
+                $url .= '&item_no='.$searchResult[0]['item_no'];
+                $url .= '&page_id='.$this->blockid['page_id'].'&block_id='.$this->blockid['block_id'];
+                
+                $xml .= '       <link rel="enclosure" title="'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_FILE_NAME][$jj]).'" type="'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_MIME_TYPE][$jj]).'" href="'.$this->RepositoryAction->forXmlChange($url).'" />'.self::LF;
+                
             }
             
             // creator
Index: opensearch/format/FormatAbstract.class.php
===================================================================
--- opensearch/format/FormatAbstract.class.php	(revision 664)
+++ opensearch/format/FormatAbstract.class.php	(working copy)
@@ -31,6 +31,7 @@
     const DATA_ITEM_TYPE_NAME = "item_type_name";
     const DATA_MIME_TYPE = "mime_type";
     const DATA_FILE_URI = "file_uri";
+    const DATA_FILE_NAME = "file_name";
     const DATA_CREATOR = "creator";
     const DATA_PUBLISHER = "publisher";
     const DATA_INDEX_PATH = "index_path";
@@ -241,6 +242,7 @@
                         self::DATA_ITEM_TYPE_NAME => "",
                         self::DATA_MIME_TYPE => array(),
                         self::DATA_FILE_URI => array(),
+                        self::DATA_FILE_NAME => array(),
                         self::DATA_CREATOR => array(),
                         self::DATA_CREATOR_LANG => array(),
                         self::DATA_PUBLISHER => array(),
@@ -364,11 +366,13 @@
             
             for($jj=0; $jj<count($itemAttr[$ii]); $jj++)
             {
+               
                 /// set file information
                 if($inputType == RepositoryConst::ITEM_ATTR_TYPE_FILE)
                 {
+                   
                     // set file info
-                    if(strlen($itemData[self::DATA_MIME_TYPE]) > 0)
+                    if(is_array($itemData[self::DATA_MIME_TYPE]))
                     {
                         array_push($itemData[self::DATA_MIME_TYPE], $itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_MIME_TYPE]);
                         $fileUri = BASE_URL."/?action=repository_uri".
@@ -376,7 +380,11 @@
                                    "&file_id=".$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID].
                                    "&file_no=".$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO];
                         array_push($itemData[self::DATA_FILE_URI], $fileUri);
+                        
+                        array_push($itemData[self::DATA_FILE_NAME],$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NAME]);
+
                     }
+
                 }
                 
                 /// check value
Index: templates/default/repository_item_detail.html
===================================================================
--- templates/default/repository_item_detail.html	(revision 664)
+++ templates/default/repository_item_detail.html	(working copy)
@@ -1150,13 +1150,32 @@
 												<th class="th_detail_line_repos vt al w20 ws"><{$attr_type[i].attribute_name}></th>
 												<td class="td_detail_line_repos w80">
 													<{section name=j loop=$item_attr[i]}>
-														<a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+<!--														<a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
 															<{if $item_attr[i][j].attribute_value[1] != ""}>
 																<{$item_attr[i][j].attribute_value[1]}>
 															<{else}>
 																<{$item_attr[i][j].attribute_value[0]}>
 															<{/if}>
 														</a><br>
+-->
+<!-- using iframe/img tag 2012/09/20 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+	<iframe src="<{$item_attr[i][j].attribute_value[0]}>" height="700" width="100%" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+<!-- 
+	<img src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>" width=200px height=200px />
+-->
+	<img src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>" width=200px /><br/>
+<{else}>
+	<a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+	<{if $item_attr[i][j].attribute_value[1] != ""}>
+		<{$item_attr[i][j].attribute_value[1]}>
+	<{else}>
+		<{$item_attr[i][j].attribute_value[0]}>
+	<{/if}>
+        </a><br/>
+<{/if}>
+<!-- using iframe/img tag 2012/09/20 by mhaya end -->
 													<{/section}>
 												</td>
 											</tr>
Index: templates/default/repository_mobile_item_detail.html
===================================================================
--- templates/default/repository_mobile_item_detail.html	(revision 664)
+++ templates/default/repository_mobile_item_detail.html	(working copy)
@@ -627,6 +627,14 @@
                     </div>
                     <div style="text-align:left; padding-left:20px;">
                         <{if count($item_attr[i])==1}>
+<!-- using iframe/img tag 2012/09/20 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+	<iframe src="<{$item_attr[i][j].attribute_value[0]}>" height="700" width="100%" scrolling="auto">Sorry. This content use IFrame</iframe>
+
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+	<img src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>" width=200px height=200px />
+<{else}>
+
                              <a target="_blank" href="<{$item_attr[i][0].attribute_value[0]}>">
                                  <{if $item_attr[i][0].attribute_value[1] != ""}>
                                      <{$item_attr[i][0].attribute_value[1]}>
@@ -634,6 +642,8 @@
                                      <{$item_attr[i][0].attribute_value[0]}>
                                  <{/if}>
                              </a>
+<{/if}>
+<!-- using iframe/img tag 2012/09/20 by mhaya end -->
                         <{else}>
                             <table width="100%">
                                 <{section name=j loop=$item_attr[i]}>
@@ -642,6 +652,14 @@
                                             <{$smarty.section.j.index_next}>.
                                         </td>
                                         <td style="width:100%; padding-top: 5px;">
+<!-- using iframe/img tag 2012/09/20 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+	<iframe src="<{$item_attr[i][j].attribute_value[0]}>" height="700" width="100%" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+	<img src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>" width=200px height=200px />
+<{else}>
+
+
                                             <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
                                                 <{if $item_attr[i][j].attribute_value[1] != ""}>
                                                     <{$item_attr[i][j].attribute_value[1]}>
@@ -649,6 +667,9 @@
                                                     <{$item_attr[i][j].attribute_value[0]}>
                                                 <{/if}>
                                             </a>
+
+<{/if}>
+<!-- using iframe/img tag 2012/09/20 by mhaya end -->
                                         </td>
                                     </tr>
                                 <{/section}>
Index: templates/default/smartphone/repository_item_detail.html
===================================================================
--- templates/default/smartphone/repository_item_detail.html	(revision 664)
+++ templates/default/smartphone/repository_item_detail.html	(working copy)
@@ -895,6 +895,8 @@
                                                 <th class="th_detail_line_repos vt al w20 ws"><{$attr_type[i].attribute_name}></th>
                                                 <td class="td_detail_line_repos w80">
                                                     <{section name=j loop=$item_attr[i]}>
+<!-- using iframe/img tag 2012/09/20 by mhaya start -->
+<!-- 
                                                         <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
                                                             <{if $item_attr[i][j].attribute_value[1] != ""}>
                                                                 <{$item_attr[i][j].attribute_value[1]}>
@@ -902,6 +904,21 @@
                                                                 <{$item_attr[i][j].attribute_value[0]}>
                                                             <{/if}>
                                                         </a><br>
+-->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+	<iframe src="<{$item_attr[i][j].attribute_value[0]}>" height="700" width="100%" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+	<img src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>" width=200px height=200px />
+<{else}>
+	<a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+	<{if $item_attr[i][j].attribute_value[1] != ""}>
+		<{$item_attr[i][j].attribute_value[1]}>
+	<{else}>
+		<{$item_attr[i][j].attribute_value[0]}>
+	<{/if}>
+	</a><br>
+<{/if}>
+<!-- using iframe/img tag 2012/09/20 by mhaya end -->
                                                     <{/section}>
                                                 </td>
                                             </tr>
Index: view/edit/admin/Admin.class.php
===================================================================
--- view/edit/admin/Admin.class.php	(revision 664)
+++ view/edit/admin/Admin.class.php	(working copy)
@@ -570,7 +570,7 @@
             }
             // search string 'OAI-PMH'
             $search_result = strpos($resBody, "OAI-PMH");
-            
+
             if(is_numeric($search_result) && $search_result > 0) {
                 // url rewrite is used
                 $show_base_url = BASE_URL ."/oai";
