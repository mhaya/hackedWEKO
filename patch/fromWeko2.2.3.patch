diff -uprN repository/action/common/background/sitelicensemail/dicon.ini hackedWEKO/repository/action/common/background/sitelicensemail/dicon.ini
--- repository/action/common/background/sitelicensemail/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/common/background/sitelicensemail/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/action/common/download/dicon.ini hackedWEKO/repository/action/common/download/dicon.ini
--- repository/action/common/download/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/common/download/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/common/ranking/dicon.ini hackedWEKO/repository/action/common/ranking/dicon.ini
--- repository/action/common/ranking/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/common/ranking/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,3 @@
+[DIContainer]
+uploadsView = "uploads.view"
+mobileAction = "mobile.action"
diff -uprN repository/action/common/usagestatistics/dicon.ini hackedWEKO/repository/action/common/usagestatistics/dicon.ini
--- repository/action/common/usagestatistics/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/common/usagestatistics/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,3 @@
+[DIContainer]
+uploadsView = "uploads.view"
+mobileAction = "mobile.action"
diff -uprN repository/action/edit/admineditrow/dicon.ini hackedWEKO/repository/action/edit/admineditrow/dicon.ini
--- repository/action/edit/admineditrow/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/admineditrow/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsAction = "uploads.action"
\ No newline at end of file
diff -uprN repository/action/edit/import/confirm/dicon.ini hackedWEKO/repository/action/edit/import/confirm/dicon.ini
--- repository/action/edit/import/confirm/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/import/confirm/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/action/edit/importauthority/download/dicon.ini hackedWEKO/repository/action/edit/importauthority/download/dicon.ini
--- repository/action/edit/importauthority/download/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/importauthority/download/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/edit/importauthority/upload/dicon.ini hackedWEKO/repository/action/edit/importauthority/upload/dicon.ini
--- repository/action/edit/importauthority/upload/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/importauthority/upload/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsAction = "uploads.action"
\ No newline at end of file
diff -uprN repository/action/edit/itemtype/export/dicon.ini hackedWEKO/repository/action/edit/itemtype/export/dicon.ini
--- repository/action/edit/itemtype/export/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/itemtype/export/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/edit/log/exclusion/dicon.ini hackedWEKO/repository/action/edit/log/exclusion/dicon.ini
--- repository/action/edit/log/exclusion/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/log/exclusion/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/edit/log/result/dicon.ini hackedWEKO/repository/action/edit/log/result/dicon.ini
--- repository/action/edit/log/result/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/log/result/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/edit/review/dicon.ini hackedWEKO/repository/action/edit/review/dicon.ini
--- repository/action/edit/review/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/edit/review/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/action/main/export/detaildownload/dicon.ini hackedWEKO/repository/action/main/export/detaildownload/dicon.ini
--- repository/action/main/export/detaildownload/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/export/detaildownload/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/main/export/filedownload/dicon.ini hackedWEKO/repository/action/main/export/filedownload/dicon.ini
--- repository/action/main/export/filedownload/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/export/filedownload/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/main/export/listdownload/dicon.ini hackedWEKO/repository/action/main/export/listdownload/dicon.ini
--- repository/action/main/export/listdownload/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/export/listdownload/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
diff -uprN repository/action/main/item/adddb/Adddb.class.php hackedWEKO/repository/action/main/item/adddb/Adddb.class.php
--- repository/action/main/item/adddb/Adddb.class.php	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/item/adddb/Adddb.class.php	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,796 @@
+<?php
+// --------------------------------------------------------------------
+//
+// $Id: Adddb.class.php 39778 2014-08-08 07:19:36Z tatsuya_koyasu $
+//
+// Copyright (c) 2007 - 2008, National Institute of Informatics, 
+// Research and Development Center for Scientific Information Resources
+//
+// This program is licensed under a Creative Commons BSD Licence
+// http://creativecommons.org/licenses/BSD/
+//
+// --------------------------------------------------------------------
+
+/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
+
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryAction.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/IDServer.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/ItemRegister.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryPdfCover.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositorySearchTableProcessing.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryCheckFileTypeUtility.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryHandleManager.class.php';
+/**
+ * repositoryモジュール アイテム登録アイテムDB登録アクション
+ *
+ * @package     NetCommons
+ * @author      S.Kawasaki(IVIS)
+ * @copyright   2006-2008 NetCommons Project
+ * @license     http://www.netcommons.org/license.txt  NetCommons License
+ * @project     NetCommons Project, supported by National Institute of Informatics
+ * @access      public
+ */
+//class Repository_Action_Main_Item_Adddb
+class Repository_Action_Main_Item_Adddb extends RepositoryAction
+{
+    // 使用コンポーネントを受け取るため
+    var $Session = null;
+    var $Db = null;
+    var $mailMain = null;
+    
+    /**
+     * [[機能説明]]
+     *
+     * @access  public
+     */
+    function execute()
+    {
+        // Add registered info save action 2009/02/13 Y.Nakao --start--
+        $istest = false;                // テスト用フラグ
+        $user_error_msg = '';       // GUI表示エラーメッセージ
+        try {
+            //アクション初期化処理
+            $result = $this->initAction();
+            if ( $result === false ) {
+                $exception = new RepositoryException( ERR_MSG_xxx-xxx1, xxx-xxx1 ); //主メッセージとログIDを指定して例外を作成
+                $DetailMsg = null;                              //詳細メッセージ文字列作成
+                sprintf( $DetailMsg, ERR_DETAIL_xxx-xxx1);
+                $exception->setDetailMsg( $DetailMsg );         //詳細メッセージ設定
+                $this->failTrans();                             //トランザクション失敗を設定(ROLLBACK)
+                throw $exception;
+            }
+
+            // ------------------------------------------------------------------
+            // 準備処理, セッション情報の取得
+            // ------------------------------------------------------------------
+            // セッション情報取得
+            $item_type_all = $this->Session->getParameter("item_type_all"); // 1.アイテムタイプ,  アイテムタイプのレコードをそのまま保存したものである。
+            $item_attr_type = $this->Session->getParameter("item_attr_type");       // 2.アイテム属性タイプ (Nレコード, Order順) : ""[N][''], アイテム属性タイプの必要部分を連想配列で保持したものである。
+            $item_num_cand = $this->Session->getParameter("item_num_cand");         // 3.アイテム属性選択肢数 (N) : "item_num_cand"[N], 選択肢のない属性タイプは0を設定
+            $option_data = $this->Session->getParameter("option_data");             // 4.アイテム属性選択肢 (N): "option_data"[N][M], N属性タイプごとの選択肢。Mはアイテム属性選択肢数に対応。0～                
+            // ユーザ入力値＆変数
+            $item_num_attr = $this->Session->getParameter("item_num_attr");         // 5.アイテム属性数 (N): "item_num_attr"[N], N属性タイプごとの属性数-。複数可な属性タイプのみ>1の値をとる。
+            $item_attr_session = $this->Session->getParameter("item_attr");             // 6.アイテム属性 (N) : "item_attr"[N][L], N属性タイプごとの属性。Lはアイテム属性数に対応。1～        
+            $base_attr = $this->Session->getParameter("base_attr");                 // 7.アイテム基本属性(今のところタイトルと言語のユーザー入力値)
+            $license_master = $this->Session->getParameter("license_master");       // ライセンスマスタ
+            $indice = $this->Session->getParameter("indice");                       // X.関連インデックス
+            $link = $this->Session->getParameter("link");                           // X.リンクリスト
+            $edit_flag = $this->Session->getParameter("edit_flag");                 // X.処理モード(0:新規作成, 1:既存編集)
+            $edit_flag = $this->Session->getParameter("edit_flag");                 // X.処理モード(0:新規作成, 1:既存編集)
+            $delete_file_list = $this->Session->getParameter("delete_file_list");   // X.DB登録済み削除ファイルリスト : delete_file_list (既存編集時のみ)
+            $item_pub_date = $this->Session->getParameter('item_pub_date');         // X.アイテム公開日
+            $item_keyword = $this->Session->getParameter('item_keyword');           // X.アイテムキーワード
+            $item_keyword_english = $this->Session->getParameter('item_keyword_english');           // X.アイテムキーワード(英)
+            $contributorUserId = $this->Session->getParameter("contributorUserId"); // Contributor user_id
+            
+            // 登録情報
+            $user_id = $this->Session->getParameter("_user_id");    // ユーザID
+            $edit_start_date = $this->Session->getParameter("edit_start_date");
+            $error_msg = array();
+            
+            // ------------------------------------------------------------------
+            // 準備処理, アイテムID, NO決定
+            // ------------------------------------------------------------------
+            $item_id = intval($this->Session->getParameter("edit_item_id"));
+            $item_no = intval($this->Session->getParameter("edit_item_no"));
+            
+            // アイテム管理パラメータによるアイテム公開処理追加 2008/08/08 --start--
+            // ------------------------------------------------------------------
+            // 準備処理, アイテム管理パラメータ取得
+            // 査読対象が登録された場合メールを送信するかどうかのパラメータ取得追加 2009/09/16 
+            // ------------------------------------------------------------------
+            // 査読・承認を行うか否か
+            $query = "SELECT `param_value` ".
+                     "FROM `". DATABASE_PREFIX ."repository_parameter` ".
+                     "WHERE `param_name` = 'review_flg';";
+            $ret = $this->Db->execute($query);
+            if ($ret === false) {
+                array_push($error_msg, $this->Db->ErrorMsg());
+                // roll back
+                $this->failTrans();
+                return 'error';
+            }
+            $review_flg = $ret[0]['param_value'];
+            // 承認済みアイテムを自動公開するか否か
+            $query = "SELECT `param_value` ".
+                     "FROM `". DATABASE_PREFIX ."repository_parameter` ".
+                     "WHERE `param_name` = 'item_auto_public';";
+            $ret = $this->Db->execute($query);
+            if ($ret === false) {
+                array_push($error_msg, $this->Db->ErrorMsg());
+                // roll back
+                $this->failTrans();
+                return 'error';
+            }
+            $shown_flg = $ret[0]['param_value'];
+            // アイテム管理パラメータによるアイテム公開処理追加 2008/08/08 --start--
+            
+            // Add review mail setting 2009/09/24 Y.Nakao --start--
+            // 新規査読アイテム登録メール送信処理
+            // 査読・承認を行うか否か
+            $query = "SELECT `param_value` ".
+                     "FROM `". DATABASE_PREFIX ."repository_parameter` ".
+                     "WHERE `param_name` = 'review_mail_flg';";
+            $ret = $this->Db->execute($query);
+            if ($ret === false) {
+                array_push($error_msg, $this->Db->ErrorMsg());
+                // roll back
+                $this->failTrans();
+                return 'error';
+            }
+            $review_mail_flg = $ret[0]['param_value'];
+            // Add review mail setting 2009/09/24 Y.Nakao --end--
+            
+            // Bug fix check new or edit Y.Nakao 2010/03/03 --end--
+            
+            if($this->Session->getParameter('item_entry_flg') == 'true'){
+                // Add new prefix 2013/12/24 T.Ichiakwa --start--
+                $repositoryHandleManager = new RepositoryHandleManager($this->Session, $this->dbAccess, $this->TransStartDate);
+                $prefix_id = $repositoryHandleManager->getPrefix(RepositoryHandleManager::ID_Y_HANDLE);
+                $uri = $repositoryHandleManager->getSubstanceUri($item_id, $item_no);
+                $detail_uri = BASE_URL."/?action=repository_uri&item_id=".$item_id;
+                // Add new prefix 2013/12/24 T.Ichiakwa --end--
+                if(strlen($uri) == 0){
+                    // when uri is null, maybe this is new item
+                    // check log exist
+                    $query = "SELECT count(*) FROM ". DATABASE_PREFIX ."repository_log ".
+                             "WHERE operation_id = '1' AND ".
+                             "item_id = '". $item_id ."' AND ".
+                             "item_no = '". $item_no ."'; ";
+                    $result = $this->Db->execute($query);
+                    if ($result === false) {
+                        $msg = $this->Db->ErrorMsg();
+                        array_push($error_msg, $msg);
+                        // roll back
+                        $this->failTrans();
+                        return 'error';
+                    }
+                    if(count($result) == 0 || $result[0]['count(*)'] == 0){
+                        // ------------------------------------------------------------------
+                        // insert item entry log
+                        // ------------------------------------------------------------------
+                        // Add log common action Y.Nakao 2010/03/05 --start--
+                        $this->entryLog(1, $item_id, $item_no, "", "", "");
+                        // Add log common action Y.Nakao 2010/03/05 --end--
+                    }
+                }
+
+                // Check shown_status A.Suzuki 2010/06/18 --start--
+                $query = "SELECT shown_status ".
+                         "FROM ".DATABASE_PREFIX."repository_item ".
+                         "WHERE item_id = ? ".
+                         "AND item_no = ?;";
+                $params = array();
+                $params[] = $item_id;   // item_id
+                $params[] = $item_no;   // item_no
+                $result = $this->Db->execute($query, $params);
+                if ($result === false) {
+                    $msg = $this->Db->ErrorMsg();
+                    array_push($error_msg, $msg);
+                    $this->Session->setParameter("error_msg", $error_msg);
+                    // roll back
+                    $this->failTrans();
+                    return 'error';
+                }
+                $old_shown_status = $result[0]["shown_status"];
+                // Check shown_status A.Suzuki 2010/06/18 --end--
+                
+                // アイテムの査読、公開状態を変更する
+                $query = "UPDATE ". DATABASE_PREFIX ."repository_item ".
+                         "SET uri = ?, ".
+                         "review_status = ?, ".
+                         "review_date = ?, ".
+                         "shown_status = ?, ".
+                         "shown_date = ?, ".
+                         "reject_status = ?, ".
+                         "reject_date = ?, ".
+                         "reject_reason = ?, ".
+                         "mod_user_id = ?, ".
+                         "mod_date = ? ";
+                if($contributorUserId != $user_id)
+                {
+                    $query .= ", ins_user_id = ? ";
+                }
+                $query .= "WHERE item_id = ? AND ".
+                          "item_no = ?; ";
+                $params = array();
+                $params[] = $detail_uri;
+                ////////// 2008/03/31 追加分, 査読／公開状態を初期設定にする
+                // アイテム管理パラメータによるアイテム公開処理追加 2008/08/08 --start--
+                if($review_flg == 1){
+                    // 査読を行う(承認しない)
+                    $params[] = "0";                        // "review_status"
+                    $params[] = "";                     // review_date
+                    $params[] = "0";                    // shown_status
+                } else {
+                    // 査読を行わない(承認する)
+                    $params[] = "1";                        // "review_status"
+                    $params[] = $this->TransStartDate;  // review_date
+                    $params[] = $shown_flg;     // shown_status
+                }
+                // when aut public, shown_date is not change 2008/10/08 Y.Nakao --start-- 
+                $params[] = $this->generateDateStr($item_pub_date['year'], $item_pub_date['month'], $item_pub_date['day']); // "shown_date"
+                $params[] = "0";                                                // reject_status
+                $params[] = "";                                             // reject_date
+                $params[] = "";                                             // reject_reason
+                $params[] = $user_id;                                   // mod_user_id
+                $params[] = $edit_start_date;                           // mod_date
+                if($contributorUserId != $user_id)
+                {
+                    $params[] = $contributorUserId;
+                }
+                //////////
+                $params[] = $item_id;                                   // item_id
+                $params[] = $item_no;                                   // item_no
+                //UPDATE実行
+                $result = $this->Db->execute($query, $params);              
+                if ($result === false) {
+                    $msg = $this->Db->ErrorMsg();
+                    array_push($error_msg, $msg);
+                    $this->Session->setParameter("error_msg", $error_msg);
+                    // roll back
+                    $this->failTrans();
+                    return 'error';
+                }
+                
+                // Add PDF Cover page 2012/06/15 A.Suzuki --start--
+                $pdfCoverCreateFlag = false;
+                $cover_error_flg = "";
+                $cover_error = "";
+                $indexIds = array();
+                foreach($indice as $indexData)
+                {
+                    array_push($indexIds, $indexData[RepositoryConst::DBCOL_REPOSITORY_INDEX_INDEX_ID]);
+                }
+                $pdfCoverCreateFlag = $this->checkIndexCreateCover($indexIds);
+                // Add PDF Cover page 2012/06/15 A.Suzuki --end--
+                
+                // Add PDF flash 2010/02/04 A.Suzuki --start--
+                $ItemRegister = new ItemRegister($this->Session, $this->Db);
+                $ItemRegister->setInsUserId($contributorUserId);
+                $flash_error_flg = "";
+                for($ii=0; $ii<count($item_attr_type); $ii++) {
+                    for($jj=0; $jj<$item_num_attr[$ii]; $jj++) {
+                        // アップロード済みファイルのライセンス設定
+                        if( ($item_attr_type[$ii]['input_type']=='file' || 
+                            $item_attr_type[$ii]['input_type']=='file_price') 
+                             && isset($item_attr_session[$ii][$jj]["upload"]))
+                        {
+                            // Add PDF Cover page 2012/06/15 A.Suzuki --start--
+                            $coverCreatedFlag = false;
+                            if(strtolower($item_attr_session[$ii][$jj]["upload"]["extension"])=="pdf" && $pdfCoverCreateFlag)
+                            {
+                                $pdfCover = new RepositoryPdfCover(
+                                                    $this->Session,
+                                                    $this->Db,
+                                                    $this->TransStartDate,
+                                                    $user_id,
+                                                    $item_attr_session[$ii][$jj]["item_id"],
+                                                    $item_attr_session[$ii][$jj]["item_no"],
+                                                    $item_attr_session[$ii][$jj]["attribute_id"],
+                                                    $item_attr_session[$ii][$jj]["file_no"]
+                                                );
+                                if($pdfCover->execute())
+                                {
+                                    // Delete this file's flash
+                                    $this->removeDirectory(
+                                        $this->getFlashFolder(
+                                                $item_attr_session[$ii][$jj]["item_id"],
+                                                $item_attr_session[$ii][$jj]["attribute_id"],
+                                                $item_attr_session[$ii][$jj]["file_no"]
+                                            )
+                                        );
+                                }
+                                else
+                                {
+                                    $cover_error_flg = "true";
+                                    $cover_error = $pdfCover->getErrorMsg();
+                                    //if(strlen($cover_error) > 0 && strlen($pdfCover->getErrorMsg()) > 0)
+                                    //{
+                                    //    $cover_error .= "\n";
+                                    //}
+                                    //$cover_error .= $pdfCover->getErrorMsg();
+                                }
+                            }
+                            // Add PDF Cover page 2012/06/15 A.Suzuki --end--
+                            
+                            // check flash save directory exists
+                            $flashDir = $this->getFlashFolder(  $item_attr_session[$ii][$jj]["item_id"],
+                                                                $item_attr_session[$ii][$jj]["attribute_id"],
+                                                                $item_attr_session[$ii][$jj]["file_no"]);
+                            // check flash file exists
+                            // すでに該当するフラッシュファイルがある場合は作成しない。
+                            if( $item_attr_session[$ii][$jj]['display_type'] == 2 &&
+                                (strlen($flashDir) == 0 || 
+                                    (!(file_exists($flashDir)) || 
+                                        (
+                                            !(file_exists($flashDir.'/weko.swf')) && 
+                                            !(file_exists($flashDir.'/weko1.swf')) && 
+                                            // Mod multimedia support 2012/10/09 T.Koyasu -start-
+                                            // if exists multimedia file, is not execute pdf convert to flash
+                                            !(file_exists($flashDir.'/weko.flv'))
+                                            // Mod multimedia support 2012/10/09 T.Koyasu -end-
+                                        )
+                                    )
+                                )
+                            ){
+                                if($this->isMultimediaFile(
+                                        $item_attr_session[$ii][$jj]["upload"]["mimetype"],
+                                        strtolower($item_attr_session[$ii][$jj]["upload"]["extension"])))
+                                {
+                                    if(strtolower($item_attr_session[$ii][$jj]["upload"]["extension"])=="swf" ||
+                                       strtolower($item_attr_session[$ii][$jj]["upload"]["extension"])=="flv")
+                                    {
+                                        // swf, flv のファイルはそのままコピー
+                                        // check flash save directory exists
+                                        $flashDir = $this->makeFlashFolder( $item_attr_session[$ii][$jj]["item_id"],
+                                                                            $item_attr_session[$ii][$jj]["attribute_id"],
+                                                                            $item_attr_session[$ii][$jj]["file_no"]);
+                                        if(strlen($flashDir) > 0){
+                                            $flashContentsPath = $flashDir."/weko.".strtolower($item_attr_session[$ii][$jj]["upload"]["extension"]);
+                                            
+                                            // コピー元ファイル取得
+                                            $fileContentsPath = $this->getFileSavePath("file");
+                                            if(strlen($fileContentsPath) == 0){
+                                                // default directory
+                                                $fileContentsPath = BASE_DIR.'/webapp/uploads/repository/files';
+                                            }
+                                            $fileContentsPath .= "/".$item_attr_session[$ii][$jj]["item_id"];
+                                            $fileContentsPath .= "_".$item_attr_session[$ii][$jj]["attribute_id"];
+                                            $fileContentsPath .= "_".$item_attr_session[$ii][$jj]["file_no"];
+                                            $fileContentsPath .= ".".$item_attr_session[$ii][$jj]['upload']['extension'];
+                                            if( file_exists($fileContentsPath) ){
+                                                // file copy
+                                                copy($fileContentsPath, $flashContentsPath);
+                                            } else {
+                                                // Not found file
+                                                $item_attr_session[$ii][$jj]['display_type'] = 0;
+                                                $result = $ItemRegister->updateFileLicense($item_attr_session[$ii][$jj], $error);
+                                            }
+                                        }
+                                    }
+                                    else
+                                    {
+                                        // マルチメディアファイルを flv へ変換
+                                        // 変換元ファイル取得
+                                        $fileContentsPath = $this->getFileSavePath("file");
+                                        if(strlen($fileContentsPath) == 0){
+                                        // default directory
+                                            $fileContentsPath = BASE_DIR.'/webapp/uploads/repository/files';
+                                        }
+                                        $fileContentsPath .= "/".$item_attr_session[$ii][$jj]["item_id"];
+                                        $fileContentsPath .= "_".$item_attr_session[$ii][$jj]["attribute_id"];
+                                        $fileContentsPath .= "_".$item_attr_session[$ii][$jj]["file_no"];
+                                        $fileContentsPath .= ".".$item_attr_session[$ii][$jj]['upload']['extension'];
+                                        $result = $ItemRegister->convertFileToFlv($item_attr_session[$ii][$jj], $error, $fileContentsPath);
+                                        if($result == false)
+                                        {
+                                            // Convert failed
+                                            $item_attr_session[$ii][$jj]['display_type'] = 0;
+                                            $result = $ItemRegister->updateFileLicense($item_attr_session[$ii][$jj], $error);
+                                        }
+                                    }
+                                }
+                                else if(!RepositoryCheckFileTypeUtility::isImageFile(
+                                        $item_attr_session[$ii][$jj]["upload"]["mimetype"],
+                                        strtolower($item_attr_session[$ii][$jj]["upload"]["extension"])))
+                                {
+                                    if(strlen($prefix_id) > 0){
+                                        // IDサーバと連携している
+                                        // PDFのフラッシュ化処理
+                                        $flash_error = "";
+                                        $url = BASE_URL . "/?action=repository_uri&item_id=".$item_id;
+                                        $id_server = new IDServer($this->Session, $this->Db);
+                                        $result = $id_server->convertToFlash($item_attr_session[$ii][$jj], $url, $flash_error);
+                                        if($result === "true"){
+                                            // フラッシュ化成功
+                                            //$item_attr_session[$ii][$jj]['display_type'] = 2;
+                                        } else {
+                                            // フラッシュ化失敗
+                                            $item_attr_session[$ii][$jj]['display_type'] = 0;
+                                            $result = $ItemRegister->updateFileLicense($item_attr_session[$ii][$jj], $error);
+                                            $flash_error_flg = "true";
+                                            $flash_error = "\"".$item_attr_session[$ii][$jj]['upload']['file_name']."\"";
+                                        }
+                                    } else {
+                                        // IDサーバと連携していないためフラッシュ作成不可
+                                        $item_attr_session[$ii][$jj]['display_type'] = 0;
+                                        $result = $ItemRegister->updateFileLicense($item_attr_session[$ii][$jj], $error);
+                                        $flash_error_flg = "true";
+                                        $flash_error = "\"".$item_attr_session[$ii][$jj]['upload']['file_name']."\"";
+                                    }
+                                }
+                            }
+                        }
+                    }
+                }
+                // Add PDF flash 2010/02/04 A.Suzuki --end--
+                
+                // Add Contributor(Posted agency) A.Suzuki 2011/12/13 --start--
+                $ItemRegister->updateInsertUserIdForContributor(
+                        intval($this->Session->getParameter("edit_item_id")),
+                        $this->Session->getParameter(RepositoryConst::SESSION_PARAM_CONTRIBUTOR_USER_ID));
+                // Add Contributor(Posted agency) A.Suzuki 2011/12/13 --end--
+                
+                // update search table S.Suzuki 2013/11/29 --start--
+                $repositorySearchTableProcessing = new RepositorySearchTableProcessing($this->Session, $this->Db);
+                
+                $repositorySearchTableProcessing->updateSearchTableForItem($item_id, $item_no);
+                // update search table S.Suzuki 2013/11/29 --end--
+                
+                // Add count contents and add whatsnew 2009/02/17 A.Suzuki --start--
+                $whatsnew_flag = false;
+                for($ii=0; $ii<count($indice); $ii++) {
+                    // 査読を行わない
+                    if($review_flg == 0){
+                        // 自動公開する
+                        if($shown_flg == 1 && $old_shown_status != 1){
+                            // 登録先インデックスの公開状態を取得
+                            // Add tree access control list 2012/02/29 T.Koyasu -start-
+                            // get index to regist is not set access control
+                            $query = "SELECT public_state ".
+                                     "FROM ".DATABASE_PREFIX."repository_index ".
+                                     "WHERE index_id = ? ".
+                                     "AND is_delete = 0 ".
+                                     "AND exclusive_acl_role = ? ". 
+                                     "AND exclusive_acl_group = ? ; ";
+                            $param = array();
+                            $param[] = $indice[$ii]['index_id'];
+                            $param[] = '|-1';
+                            $param[] = '';
+                            // Add tree access control list 2012/02/29 T.Koyasu -end-
+                            $result = $this->Db->execute($query, $param);
+                            if($result === false){
+                                $msg = $this->Db->ErrorMsg();
+                                array_push($error_msg, $msg);
+                                $this->Session->setParameter("error_msg", $error_msg);
+                                $this->failTrans(); // rollback
+                                return 'error';
+                            }
+                            
+                            // インデックスが公開中であるか
+                            if(count($result) == 1 && $result[0]['public_state'] == "1"){
+                                // 親インデックスが公開されているか
+                                if($this->checkParentPublicState($indice[$ii]['index_id'])){
+                                    // 所属する公開中インデックスのコンテンツ数を増やす
+                                    $whatsnew_flag = true;
+                                    $result = $this->addContents($indice[$ii]['index_id']);
+                                    if($result === false){
+                                        $msg = $this->Db->ErrorMsg();
+                                        array_push($error_msg, $msg);
+                                        $this->Session->setParameter("error_msg", $error_msg);
+                                        $this->failTrans(); // rollback
+                                        return 'error';
+                                    }
+                                    // Add private_contents count K.Matsuo 2013/05/07 --start--
+                                    // 編集中に非公開コンテンツ数を増やしているので公開コンテンツの場合非公開コンテンツ数を減らす
+                                    $result = $this->deletePrivateContents($indice[$ii]['index_id']);
+                                    if($result === false){
+                                        $msg = $this->Db->ErrorMsg();
+                                        array_push($error_msg, $msg);
+                                        $this->Session->setParameter("error_msg", $error_msg);
+                                        $this->failTrans(); // rollback
+                                        return 'error';
+                                    }
+                                    // Add private_contents count K.Matsuo 2013/05/07 --end--
+                                }
+                            }
+                        }
+                    }
+                }
+                
+                // 新着情報に追加
+                if($whatsnew_flag){
+                    $result = $this->addWhatsnew($item_id, $item_no);
+                    if($result === false){
+                        $msg = $this->Db->ErrorMsg();
+                        array_push($error_msg, $msg);
+                        $this->Session->setParameter("error_msg", $error_msg);
+                        $this->failTrans(); // rollback
+                        return 'error';
+                    }
+                }
+                // Add count contents and add whatsnew 2009/02/17 A.Suzuki --end--
+                
+                // Add review mail setting 2009/09/24 Y.Nakao --start--
+                // 新規査読アイテム登録メール送信処理
+                if($review_flg == 1){
+                    // 査読を行う
+                    if($review_mail_flg == 1){
+                        // 言語リソース取得
+                        $smartyAssign = $this->Session->getParameter("smartyAssign");
+                        // send review mail
+                        // 査読通知メールを送信する
+                        // 件名
+                        // set subject
+                        $subj = $smartyAssign->getLang("repository_mail_review_subject");
+                        $this->mailMain->setSubject($subj);
+                        
+                        // page_idおよびblock_idを取得
+                        $block_info = $this->getBlockPageId();
+                        // メール本文をリソースから読み込む
+                        // set Mail body
+                        $body = '';
+                        $body .= $smartyAssign->getLang("repository_mail_review_body")."\n\n";
+                        $body .= $smartyAssign->getLang("repository_mail_review_contents")."\n";
+                        $body .= $smartyAssign->getLang("repository_mail_review_title");
+                        if($this->Session->getParameter("_lang") == "japanese"){
+                            if(strlen($base_attr['title']) > 0){
+                                $body .= $base_attr['title'];
+                            } else if(strlen($base_attr['title_english']) > 0){
+                                $body .= $base_attr['title_english'];
+                            } else {
+                                $body .= "no title";
+                            }
+                        } else {
+                            if(strlen($base_attr['title_english']) > 0){
+                                $body .= $base_attr['title_english'];
+                            } else if(strlen($base_attr['title']) > 0){
+                                $body .= $base_attr['title'];
+                            } else {
+                                $body .= "no title";
+                            }
+                        }
+                        
+                        $body .= "\n";
+                        $body .= $smartyAssign->getLang("repository_mail_review_detailurl").$detail_uri."\n";
+                        $body .= "\n";
+                        $body .= $smartyAssign->getLang("repository_mail_review_reviewurl")."\n";
+                        $body .= BASE_URL;
+                        if(substr(BASE_URL,-1,1) != "/"){
+                            $body .= "/";
+                        }
+                        $body .= "?active_action=repository_view_edit_review&page_id=".$block_info["page_id"]."&block_id=".$block_info["block_id"];
+                        $body .= "\n\n".$smartyAssign->getLang("repository_mail_review_close");
+                        $this->mailMain->setBody($body);
+                        // ---------------------------------------------
+                        // 送信メール情報取得
+                        //   送信者のメールアドレス
+                        //   送り主の名前
+                        //   送信先ユーザを取得
+                        // create mail body
+                        //   get send from user mail address
+                        //   get send from user name
+                        //   get send to user
+                        // ---------------------------------------------
+                        $users = array();
+                        $this->getReviewMailInfo($users);
+                        // ---------------------------------------------
+                        // 送信先を設定
+                        // set send to user
+                        // ---------------------------------------------
+                        // 送信ユーザを設定
+                        // $usersの中身
+                        // $users["email"] : 送信先メールアドレス
+                        // $user["handle"] : ハンドルネーム
+                        //                   なければ空白が自動設定される
+                        // $user["type"]   : type (html(email) or text(mobile_email))
+                        //                   なければhtmlが自動設定される
+                        // $user["lang_dirname"] : 言語
+                        //                         なければ現在の選択言語が自動設定される
+                        $this->mailMain->setToUsers($users);
+                        
+                        // ---------------------------------------------
+                        // メール送信
+                        // send confirm mail
+                        // ---------------------------------------------
+                        if(count($users) > 0){
+                            // 送信者がいる場合は送信
+                            $return = $this->mailMain->send();
+                        }
+                         
+                        // 言語リソース開放
+                        $this->Session->removeParameter("smartyAssign");
+                        
+                    }
+                }
+                // Add review mail setting 2009/09/24 Y.Nakao --end--
+            }
+            $this->Session->removeParameter('item_entry_flg');
+            
+            // Add new supple item regist 2009/09/01 A.Suzuki --start--
+            // このアイテムのWEKOIDを取得
+            if($this->Session->getParameter("add_supple_flag") == "true"){
+                // Bug Fix WEKO-2014-063 2014/08/07 T.Koyasu --start--
+                if(!isset($repositoryHandleManager))
+                {
+                    $repositoryHandleManager = new RepositoryHandleManager($this->Session, $this->Db, $this->TransStartDate);
+                }
+                $weko_id = $repositoryHandleManager->getSuffix($item_id, $item_no, RepositoryHandleManager::ID_Y_HANDLE);
+                if(strlen($weko_id) == 0)
+                {
+                    $this->Session->setParameter("add_supple_flag", "false");
+                }
+                // Bug Fix WEKO-2014-063 2014/08/07 T.Koyasu --end--
+            }
+            // Add new supple item regist 2009/09/01 A.Suzuki --end--
+            // Add detail search 2013/11/21 K.Matsuo --start--
+            $searchTableProcessing = new RepositorySearchTableProcessing($this->Session, $this->Db);
+            $searchTableProcessing->updateSearchTableForItem($item_id, $item_no);
+            // Add detail search 2013/11/21 K.Matsuo --end--
+            //セッションの初期化
+            $this->Session->removeParameter("edit_flag");
+            $this->Session->removeParameter("edit_item_id");
+            $this->Session->removeParameter("edit_item_no");
+            $this->Session->removeParameter("edit_start_date");
+            $this->Session->removeParameter("delete_file_list");
+            $this->Session->removeParameter('item_pub_date');
+            $this->Session->removeParameter('item_keyword');
+            $this->Session->removeParameter('item_keyword_english');
+            $this->Session->removeParameter("item_type_all");
+            $this->Session->removeParameter("item_attr_type");
+            $this->Session->removeParameter("item_num_cand");
+            $this->Session->removeParameter("option_data");
+            $this->Session->removeParameter("isfile");
+            $this->Session->removeParameter("item_num_attr");
+            $this->Session->removeParameter("item_attr");
+            $this->Session->removeParameter("base_attr");
+            $this->Session->removeParameter("indice");
+            $this->Session->removeParameter("link");
+            $this->Session->removeParameter("link_search");
+            $this->Session->removeParameter("link_searchkeyword");
+            $this->Session->removeParameter("link_searchtype");
+            $this->Session->removeParameter("open_node_index_id_link");
+            $this->Session->removeParameter("open_node_index_id_index");
+            $this->Session->removeParameter("license_master");
+            $this->Session->removeParameter("error_msg");
+            $this->Session->removeParameter("warning");
+            
+            // Add e-person 2013/11/20 R.Matsuura --start--
+            $this->Session->removeParameter("feedback_mailaddress_str");
+            $this->Session->removeParameter("feedback_mailaddress_author_str");
+            $this->Session->removeParameter("feedback_mailaddress_array");
+            $this->Session->removeParameter("feedback_mailaddress_author_array");
+            // Add e-person 2013/11/20 R.Matsuura --end--
+            
+            $this->Session->removeParameter("all_group"); // 2008/08/12
+            $this->Session->removeParameter("user_group"); // 2008/08/12
+            
+            // change index tree 2008/12/03 Y.Nakao --start--
+            $this->Session->removeParameter("view_open_node_index_id_insert_item");
+            $this->Session->removeParameter("view_open_node_index_id_item_link");
+            // change index tree 2008/12/03 Y.Nakao --end--
+            // Add Contributor(Posted agency) A.Suzuki 2011/12/13 --start--
+            $this->Session->removeParameter(RepositoryConst::SESSION_PARAM_ORG_CONTRIBUTOR_USER_ID);
+            $this->Session->removeParameter(RepositoryConst::SESSION_PARAM_CONTRIBUTOR_USER_ID);
+            $this->Session->removeParameter(RepositoryConst::SESSION_PARAM_ITEM_CONTRIBUTOR);
+            $this->Session->removeParameter(RepositoryConst::SESSION_PARAM_CONTRIBUTOR_ERROR_MSG);
+            // Add Contributor(Posted agency) A.Suzuki 2011/12/13 --end--
+            
+            $this->Session->removeParameter("edit_jalc_flag");
+            
+            // end action
+            $result = $this->exitAction(); //COMMIT
+            if ( $result == false ){
+                $this->failTrans(); // rollback
+                return 'error';
+            }
+            
+            if($cover_error_flg === "true" || $flash_error_flg === "true"){
+                // 詳細画面を表示させるための設定
+                $this->Session->setParameter("item_id_for_detail", $this->Session->getParameter("edit_item_id"));
+                $this->Session->setParameter("item_no_for_detail", $this->Session->getParameter("edit_item_no"));
+                $this->Session->setParameter("search_flg","true");
+                $this->Session->setParameter("workflow_flg", "false");
+                $this->Session->setParameter("serach_screen", "1");
+                $this->Session->setParameter("redirect_flg", "detail");
+                $this->Session->setParameter("redirect_item_id", $item_id);
+                
+                // Add PDF cover page 2012/06/15 A.Suzuki --start--
+                // PDF Cover create failed flag
+                if($cover_error_flg == "true"){
+                    $this->Session->setParameter("cover_error", $cover_error);
+                }
+                // Add PDF cover page 2012/06/15 A.Suzuki --end--
+                
+                // Flash変換失敗を示すフラグ
+                if($flash_error_flg == "true"){
+                    $this->Session->setParameter("flash_error", $flash_error);
+                }
+                
+                // Session情報開放
+                $this->Session->removeParameter("edit_flag");
+                $this->Session->removeParameter("edit_item_id");
+                $this->Session->removeParameter("edit_item_no");
+                $this->Session->removeParameter("return_screen");
+                $this->Session->removeParameter("add_supple_flag");
+                $this->Session->removeParameter("item_id_for_detail");
+                $this->Session->removeParameter("item_no_for_detail");
+            } else {
+                if($this->Session->getParameter("return_screen") != null){
+                    // 詳細画面を表示させるための設定
+                    $this->Session->setParameter("item_id_for_detail", $this->Session->getParameter("edit_item_id"));
+                    $this->Session->setParameter("item_no_for_detail", $this->Session->getParameter("edit_item_no"));
+                    $this->Session->setParameter("search_flg","true");
+                    // Session情報開放
+                    $this->Session->removeParameter("edit_flag");
+                    $this->Session->removeParameter("edit_item_id");
+                    $this->Session->removeParameter("edit_item_no");
+                    if($this->Session->getParameter("return_screen") === "1"){
+                        $this->Session->removeParameter("return_screen");
+                        // ワークフロー画面でないことを示すフラグ
+                        $this->Session->setParameter("workflow_flg", "false");
+                        // 画面右に詳細表示を表示させるフラグ
+                        $this->Session->setParameter("serach_screen", "1");
+                        $this->Session->setParameter("redirect_flg", "detail");
+                        $this->Session->setParameter("redirect_item_id", $item_id);
+    
+                    } else if($this->Session->getParameter("return_screen") === "2"){
+                        $this->Session->removeParameter("return_screen");
+                        // ワークフロー画面であることを示すフラグ
+                        $this->Session->setParameter("workflow_flg", "true");
+                        $this->Session->setParameter("redirect_flg", "workflow");
+                    }
+                } else {
+                    $this->Session->removeParameter("edit_flag");
+                    $this->Session->removeParameter("edit_item_id");
+                    $this->Session->removeParameter("edit_item_no");
+                    $this->Session->removeParameter("error_msg");
+                    $this->Session->setParameter("redirect_flg", "selecttype");
+                }
+                
+                // Add new supple item regist 2009/09/01 A.Suzuki --start--
+                if($this->Session->getParameter("add_supple_flag") == "true"){
+                    $this->Session->setParameter("supple_weko_id", $weko_id);
+                    $this->Session->setParameter("redirect_flg", "supple");
+                    $this->Session->removeParameter("item_id_for_detail");
+                    $this->Session->removeParameter("item_no_for_detail");
+                    $this->Session->removeParameter("search_flg","true");
+                }
+                // Add new supple item regist 2009/09/01 A.Suzuki --end--
+            }
+            
+            return 'redirect';
+            // アイテム修正時のページ遷移改善対応 2008/06/27 Y.Nakao --end--
+        } catch ( RepositoryException $Exception) {
+            //エラーログ出力
+            $this->logFile(
+                "SampleAction",                 //クラス名
+                "execute",                      //メソッド名
+                $Exception->getCode(),          //ログID
+                $Exception->getMessage(),       //主メッセージ
+                $Exception->getDetailMsg() );   //詳細メッセージ           
+            //アクション終了処理
+            $this->exitAction();                   //トランザクションが失敗していればROLLBACKされる        
+            //異常終了
+            $this->Session->setParameter("error_msg", $user_error_msg);
+            return "error";
+        }
+    }
+    
+    /**
+     * [[機能説明]]
+     *　年月日のデータ(int)を日付文字列にして返す
+     */
+    function generateDateStr($year, $month, $day){
+        $str_year = strval($year);
+        $str_month = strval($month);
+        $str_day = strval($day);
+        // 0付加
+        if(intval($month)<10){ $str_month = '0' . $str_month; }
+        if(intval($day)<10){ $str_day = '0' . $str_day; }
+        // 結合
+        return $str_year . '-' . $str_month . '-' . $str_day . ' ' . '00:00:00.000';
+    }
+}
+?>
diff -uprN repository/action/main/item/adddb/dicon.ini hackedWEKO/repository/action/main/item/adddb/dicon.ini
--- repository/action/main/item/adddb/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/item/adddb/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/action/main/item/adddb/maple.ini hackedWEKO/repository/action/main/item/adddb/maple.ini
--- repository/action/main/item/adddb/maple.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/item/adddb/maple.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,21 @@
+;直アクセス防止のためRequestCheckにはGETを指定しないこと
+[RequestCheck]
+request = POST
+
+[ValidateDef]
+authcheck = "1,_auth_id>=REPOSITORY_ITEM_REGIST_AUTH:lang._invalid_auth"
+
+[DIContainer]
+filename = "dicon.ini"
+
+[Action]
+Session = "ref:Session"
+Db = "ref:DbObject"
+mailMain = "ref:mailMain"
+
+[View]
+success = "action:repository_view_main_item_selecttype"
+error = "action:repository_view_main_item_confirm"
+detail = "action:repository_view_main_item_detail"
+workflow = "action:repository_view_main_workflow"
+redirect = "action:repository_view_common_redirect"
\ No newline at end of file
diff -uprN repository/action/main/item/supple/dicon.ini hackedWEKO/repository/action/main/item/supple/dicon.ini
--- repository/action/main/item/supple/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/action/main/item/supple/dicon.ini	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/action/main/sword/SwordUpdate.class.php hackedWEKO/repository/action/main/sword/SwordUpdate.class.php
--- repository/action/main/sword/SwordUpdate.class.php	2015-10-10 21:33:17.000000000 +0900
+++ hackedWEKO/repository/action/main/sword/SwordUpdate.class.php	2015-11-13 17:26:56.000000000 +0900
@@ -2546,7 +2546,9 @@ class SwordUpdate extends RepositoryActi
         // XML
         // -------------------------
         $ret_xml = '<?xml version="1.0" encoding="UTF-8" ?>'."\n";
-        $ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
+        // change sword ns 20151113 mhaya
+        //$ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
+        $ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/terms/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
         $ret_xml .= '<title>ERROR</title>'."\n";
         $ret_xml .= '<version>2.0</version>'."\n";
         $ret_xml .= '<updated>2013-08-20JST16:46:0432400</updated>'."\n";
@@ -2590,7 +2592,9 @@ class SwordUpdate extends RepositoryActi
         // XML
         // -------------------------
         $ret_xml = '<?xml version="1.0" encoding="UTF-8" ?>'."\n";
-        $ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/">'."\n";
+        // change sword ns 20151113 mhaya
+        //$ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/">'."\n";
+        $ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/terms/">'."\n";
         $ret_xml .= '<title>Repository Review</title>'."\n";
         $ret_xml .= '<version>2.0</version>'."\n";
         $ret_xml .= '<id>'.$item_id.'-'.$item_id.'</id>'."\n";
diff -uprN repository/action/main/sword/SwordUtility.class.php hackedWEKO/repository/action/main/sword/SwordUtility.class.php
--- repository/action/main/sword/SwordUtility.class.php	2013-08-20 16:31:46.000000000 +0900
+++ hackedWEKO/repository/action/main/sword/SwordUtility.class.php	2015-11-13 17:26:56.000000000 +0900
@@ -127,7 +127,9 @@ class SwordUtility extends RepositoryAct
 		// V1.2 => V1.3 : <sword:level> removed...
 //	    $root['level']           = '1';								// Server Level	
 		// V1.2 => V1.3 : <sword:version> added.(mandately)
-	    $root['version']         = 2.0;								// Server Version
+        // change 2.0 > '2.0' 2015/11/13 mhaya
+        // V2.0 : The SWORD server MUST specify the sword:version element with a value of 2.0
+	    $root['version']         = '2.0';								// Server Version
 	    // V1.2 => V1.3 : <sword:maxUploadSize> added.(option)
 	    $root['maxUploadSize']   = intval($upload_max_capacity_group)/1024;	// maxUploadSize (KB)	
 		
diff -uprN repository/action/main/sword/import/Import.class.php hackedWEKO/repository/action/main/sword/import/Import.class.php
--- repository/action/main/sword/import/Import.class.php	2015-10-10 17:13:31.000000000 +0900
+++ hackedWEKO/repository/action/main/sword/import/Import.class.php	2015-11-13 17:26:56.000000000 +0900
@@ -902,7 +902,9 @@ class Repository_Action_Main_Sword_Impor
         // XML
         // -------------------------
         $ret_xml = '<?xml version="1.0" encoding="UTF-8" ?>'."\n";
-        $ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
+        // change sword ns 20151113 mhaya
+        //$ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
+        $ret_xml .= '<sword:error xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/terms/" xmlns:arxiv="http://arxiv.org/schemas/atom" href="http://example.org/errors/BadManifest">'."\n";
         $ret_xml .= '<title>ERROR</title>'."\n";
         $ret_xml .= '<version>2.0</version>'."\n";
         $ret_xml .= '<updated>2013-08-20JST16:46:0432400</updated>'."\n";
@@ -949,7 +951,9 @@ class Repository_Action_Main_Sword_Impor
         // XML
         // -------------------------
         $ret_xml = '<?xml version="1.0" encoding="UTF-8" ?>'."\n";
-        $ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/">'."\n";
+        // change sword ns 20151113 mhaya
+        //$ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/">'."\n";
+        $ret_xml .= '<entry xmlns="http://www.w3.org/2005/Atom" xmlns:sword="http://purl.org/net/sword/terms/">'."\n";
         $ret_xml .= '<title>Repository Review</title>'."\n";
         $ret_xml .= '<version>2.0</version>'."\n";
         $ret_xml .= '<id>'.$start_item_id.'-'.$end_item_id.'</id>'."\n";
diff -uprN repository/action/main/sword/servicedocument/Servicedocument.class.php hackedWEKO/repository/action/main/sword/servicedocument/Servicedocument.class.php
--- repository/action/main/sword/servicedocument/Servicedocument.class.php	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/action/main/sword/servicedocument/Servicedocument.class.php	2015-11-13 17:26:56.000000000 +0900
@@ -124,7 +124,9 @@ class Repository_Action_Main_Sword_Servi
         //   Full level 1 compliance REQUIRES implementation of the full set of extension elements and compliance with APP [ATOMPUB] as indicated by the SWORD profile of APP specified in this document.
         //  sword:verbose (true or false): Verbose Supported
         //  sword:noOp (true or false)   : no-Op Supported
-        $str .="<service xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sword=\"http://purl.org/net/sword/\">" . "\n";
+        // change sword ns 20151113 mhaya
+        //$str .="<service xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sword=\"http://purl.org/net/sword/\">" . "\n";
+        $str .="<service xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sword=\"http://purl.org/net/sword/terms/\">" . "\n";
         // V1.2 => V1.3 : <sword:level> removed.
 //      $str .="  <sword:level>" . $workspace['workspace']['level']  ."</sword:level>\n";
         // V1.2 => V1.3 : <sword:version> added.
diff -uprN repository/action/main/update/Update.class.php hackedWEKO/repository/action/main/update/Update.class.php
--- repository/action/main/update/Update.class.php	2015-09-30 18:33:47.000000000 +0900
+++ hackedWEKO/repository/action/main/update/Update.class.php	2016-07-16 02:11:32.000000000 +0900
@@ -3487,9 +3487,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
                     // Add private_contents to repository_index
                     $query = "ALTER TABLE ".DATABASE_PREFIX."repository_index ".
@@ -3498,9 +3503,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        //  Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
 
                     // set edit tree
@@ -3529,9 +3539,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query, $params);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate entry Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate entry')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        //  Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
                     }
                     $query = "INSERT INTO ". DATABASE_PREFIX. "repository_parameter ".
                              "(param_name, param_value, explanation, ins_user_id, mod_user_id, ".
@@ -3546,9 +3561,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query, $params);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate entry Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate entry')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
                     }
 
                     $query = "INSERT INTO ". DATABASE_PREFIX. "repository_parameter ".
@@ -3564,9 +3584,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query, $params);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate entry Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate entry')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        //  Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
                     }
                     // Add privatetree Parameter 2013/04/04 K.Matsuo --end--
 
@@ -3578,6 +3603,7 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query, $params);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
+                        echo $errMsg."<br/>";
                         // Rollback
                         $this->failTrans();
                         throw $exception;
@@ -3595,9 +3621,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
                     // Add harvest public parameter 2013/07/03 K.Matsuo --end--
                     // Add itemtype multi language 2013/07/22 K.Matsuo --start--
@@ -3618,9 +3649,14 @@ class Repository_Action_Main_Update exte
                     $result = $this->Db->execute($query);
                     if($result === false){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                         // Fix ignore Table already exists Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'already exists')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Table already exists Error mhaya 2016/07/15 --end--
                     }
                     // Add itemtype multi language 2013/07/22 K.Matsuo --end--
                     // Add LOM Mapping Name Change 2013/08/22 K.Matsuo --start--
@@ -3646,6 +3682,8 @@ class Repository_Action_Main_Update exte
                         $result = $this->Db->execute($query, $params);
                         if($result === false)
                         {
+                            $errMsg = $this->Db->ErrorMsg();
+                            echo $errMsg."<br/>";
                             // Rollback
                             $this->failTrans();
                             throw $exception;
@@ -3677,13 +3715,14 @@ class Repository_Action_Main_Update exte
                         $result = $this->Db->execute($query, $params);
                         if($result === false)
                         {
+                            $errMsg = $this->Db->ErrorMsg();
+                            echo $errMsg."<br/>";
                             // Rollback
                             $this->failTrans();
                             throw $exception;
                         }
                     }
                     // Add LOM Mapping Name Change 2013/08/22 K.Matsuo --end--
-
                     // Add harvest parameter 2013/08/14 K.Matsuo --start--
                     $query = "ALTER TABLE ".DATABASE_PREFIX."repository_harvesting ".
                              "ADD from_date VARCHAR(20) default NULL ".
@@ -3691,9 +3730,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                            // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                            echo $errMsg."<br/>";
+                            if(strpos($errMsg,'Duplicate column name')===false){
+                                // Rollback
+                                $this->failTrans();
+                                throw $exception;
+                            }
+                            // Fix ignore Duplicate column name Error mhaya 2016/07/15
                     }
                     $query = "ALTER TABLE ".DATABASE_PREFIX."repository_harvesting ".
                              "ADD until_date VARCHAR(20) default NULL ".
@@ -3701,9 +3745,14 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                                // Rollback
+                                $this->failTrans();
+                                throw $exception;
+                        }
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
                     $query = "ALTER TABLE ".DATABASE_PREFIX."repository_harvesting ".
                              "ADD set_param TEXT ".
@@ -3711,19 +3760,30 @@ class Repository_Action_Main_Update exte
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
+
                     $query = "ALTER TABLE ".DATABASE_PREFIX."repository_harvesting ".
                              "ADD execution_date VARCHAR(20) default NULL ".
                              "AFTER automatic_sorting;";
                     $retRef = $this->Db->execute($query);
                     if($retRef === false || count($retRef)!=1){
                         $errMsg = $this->Db->ErrorMsg();
-                        // Rollback
-                        $this->failTrans();
-                        throw $exception;
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15
+                        echo $errMsg."<br/>";
+                        if(strpos($errMsg,'Duplicate column name')===false){
+                            // Rollback
+                            $this->failTrans();
+                            throw $exception;
+                        }
+                        // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
                     }
                     // Add harvest parameter 2013/08/14 K.Matsuo --end--
 
@@ -3751,13 +3811,14 @@ class Repository_Action_Main_Update exte
                     $result = $this->Db->execute($query, $params);
                     if($result === false)
                     {
+                        $errMsg = $this->Db->ErrorMsg();
+                        echo $errMsg."<br/>";
                         // Rollback
                         $this->failTrans();
                         throw $exception;
                     }
                     // Add 学位名を選択肢から自由入力に変更 2013/8/20 A.jin --end--
-
-
+                    
                     // Add set LOM Multi-Language 2013/08/22 K.Matsuo --start--
                     $this->setLOMMultiLang($user_id);
                     // Add set LOM Multi-Language 2013/08/22 K.Matsuo --end--
@@ -4040,9 +4101,15 @@ class Repository_Action_Main_Update exte
         $result = $this->Db->execute($query, $params);
         if($result === false)
         {
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            // Add ignore Duplicate entry error 2016/07/15 mhaya
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,"Duplicate entry")===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Add ignore Duplicate entry error 2016/07/15 mhaya --end--
         }
         $englishArray =
             array('1' => 'URI' , '2' => 'ISSN' , '3' => 'NCID' , '4' => 'Bibliographic information' , '5' => 'Author version flag' ,
@@ -4062,7 +4129,6 @@ class Repository_Action_Main_Update exte
                   '71' => 'isformatof: is format of' , '72' => 'hasformat: has format' , '73' => 'isbasisfor: is basis for' , '74' => 'isbasedon: is based on' , '75' => 'Relation' ,
                   '76' => 'Annotation-Entity' , '77' => 'Annotation-Date' , '78' => 'Annotation-Description' , '79' => 'Purpose' , '80' => 'Taxon Path-Source' , '81' => 'Taxon Path-Taxon' ,
                   '82' => 'Classification-Description' , '83' => 'Classification-keyword' , '84' => 'Authority Identifier' , '85' => 'Content Identifier' , '86' => 'Modified content' );
-
         $query = "INSERT INTO ". DATABASE_PREFIX ."repository_item_type_name_multilanguage VALUE ";
         $params = array();
         $addComma = false;
@@ -4088,9 +4154,15 @@ class Repository_Action_Main_Update exte
         $result = $this->Db->execute($query, $params);
         if($result === false)
         {
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            // Add ignore Duplicate entry error 2016/07/15 mhaya
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,"Duplicate entry")===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Add ignore Duplicate entry error 2016/07/15 mhaya --end--
         }
 
         $chineseArray =
@@ -4131,9 +4203,15 @@ class Repository_Action_Main_Update exte
         $result = $this->Db->execute($query, $params);
         if($result === false)
         {
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            // Add ignore Duplicate entry error 2016/07/15 mhaya
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,"Duplicate entry")===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Add ignore Duplicate entry error 2016/07/15 mhaya --end--
         }
     }
     // Add set LOM Multi-Language 2013/08/22 K.Matsuo --end--
@@ -4191,10 +4269,16 @@ class Repository_Action_Main_Update exte
             $result = $this->Db->execute($query, $params);
             if($result === false)
             {
-                $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
-                // Rollback
-                $this->failTrans();
-                throw $exception;
+                // Fix ignore Duplicate entry Error mhaya 2016/07/15
+                $errMsg = $this->Db->ErrorMsg();
+                echo $errMsg."<br/>";
+                if(strpos($errMsg,'Duplicate entry')===false){
+                    $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
+                    // Rollback
+                    $this->failTrans();
+                    throw $exception;
+                }
+                // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
             }
         }
 
@@ -4241,13 +4325,18 @@ class Repository_Action_Main_Update exte
             $result = $this->Db->execute($query, $params);
             if($result === false)
             {
-                $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
-                // Rollback
-                $this->failTrans();
-                throw $exception;
+                // Fix ignore Duplicate entry Error mhaya 2016/07/15
+                $errMsg = $this->Db->ErrorMsg();
+                echo $errMsg."<br/>";
+                if(strpos($errMsg,'Duplicate entry')===false){
+                    $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
+                    // Rollback
+                    $this->failTrans();
+                    throw $exception;
+                }
+                // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
             }
         }
-        
         // Add if default itemtype is not changed, changes metadata junii2 mapping T.Koyasu -start-
         $query = "UPDATE ". DATABASE_PREFIX. "repository_item_attr_type ". 
                 " SET junii2_mapping = ?". 
@@ -4467,12 +4556,16 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $retRef = $this->Db->execute($query, $params);
         if($retRef === false || count($retRef)!=1){
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate entry')===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
         }
-
     }
     // Add Private Tree index composition K.Matsuo 2013/10/01 --end--
     // Add File maintenance specification change K.Matsuo 2013/10/02 --start--
@@ -4489,10 +4582,15 @@ class Repository_Action_Main_Update exte
 
         $retRef = $this->Db->execute($query);
         if($retRef === false || count($retRef)!=1){
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate column name')===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
         }
         // 既存のデータのデータのshow_orderはfile_noと同じ
         // show_order of the data of the existing data is the same as file_no.
@@ -4500,6 +4598,8 @@ class Repository_Action_Main_Update exte
                 " SET show_order = file_no; ";
         $retRef = $this->Db->execute($query);
         if($retRef === false){
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
             $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
             // Rollback
             $this->failTrans();
@@ -4513,10 +4613,15 @@ class Repository_Action_Main_Update exte
 
         $retRef = $this->Db->execute($query);
         if($retRef === false || count($retRef)!=1){
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate column name')===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
         }
         // 既存のデータのデータのshow_orderはfile_noと同じ
         // show_order of the data of the existing data is the same as file_no.
@@ -4524,12 +4629,17 @@ class Repository_Action_Main_Update exte
                 " SET show_order = file_no; ";
         $retRef = $this->Db->execute($query);
         if($retRef === false){
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate column name')===false){
             $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
             // Rollback
             $this->failTrans();
             throw $exception;
+            }
+            // Fix ignore Duplicate column name Error mhaya 2016/07/15 --end--
         }
-
     }
     // Add File maintenance specification change K.Matsuo 2013/10/02 --end--
 
@@ -4560,10 +4670,16 @@ class Repository_Action_Main_Update exte
 
         $retRef = $this->Db->execute($query, $params);
         if($retRef === false || count($retRef)!=1){
-            $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15
+            $errMsg = $this->Db->ErrorMsg();
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate entry')===false){
+                $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
         }
     }
     // add set reference URL to repository_parameter 2013/10/10 S.Suzuki --end--
@@ -4586,12 +4702,17 @@ class Repository_Action_Main_Update exte
                              " VALUES (0, 'e_mail_address', 0, 0, '1', '1', '0', '2008-03-12 00:00:00.000', '2008-03-12 00:00:00.000', '', 0);";
         $result = $this->Db->execute($query);
         if($result === false){
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Duplicate entry')===false){
+                $exception = new RepositoryException( "ERR_MSG_xxx-xxx1", "xxx-xxx1" );
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Duplicate entry Error mhaya 2016/07/15 --end--
         }
-        
         // get E-Mail Address from name_authority table and insert into external_author_id_suffix table
         $query = "INSERT INTO ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_EXTERNAL_AUTHOR_ID_SUFFIX.
                  " ( author_id, prefix_id, suffix, ins_user_id, mod_user_id, del_user_id, ins_date, mod_date, del_date, is_delete) ".
@@ -4600,16 +4721,21 @@ class Repository_Action_Main_Update exte
                  "WHERE e_mail_address != ? AND e_mail_address IS NOT NULL GROUP BY author_id ;";
         $params = array();
         $params[] = "";
-        $result = $this->dbAccess->executeQuery($query, $params);
+        $result = $this->Db->execute($query, $params);
         
         // delete 'e_mail_address' column from name_authority table
         $query = "ALTER TABLE ". DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_NAME_AUTHORITY." DROP e_mail_address;";
         $result = $this->Db->execute($query);
         if($result === false){
+            // Fix ignore Can't DROP Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,'Can\'t DROP')===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore Can't DROP Error mhaya 2016/07/15 --end--
         }
 
         // create 'repository_send_feedbackmail_author_id' table
@@ -4623,10 +4749,15 @@ class Repository_Action_Main_Update exte
         $params = array();
         $retRef = $this->Db->execute($query, $params);
         if($retRef === false || count($retRef)!=1){
+            // Fix ignore already exists Error mhaya 2016/07/15
             $errMsg = $this->Db->ErrorMsg();
-            // Rollback
-            $this->failTrans();
-            throw $exception;
+            echo $errMsg."<br/>";
+            if(strpos($errMsg,' already exists')===false){
+                // Rollback
+                $this->failTrans();
+                throw $exception;
+            }
+            // Fix ignore already exists Error mhaya 2016/07/15 --end--
         }
 
         // version up to 2.0.9
@@ -4643,7 +4774,7 @@ class Repository_Action_Main_Update exte
     {
         // search mroonga
         $query = "SHOW ENGINES";
-        $engines = $this->dbAccess->executeQuery($query);
+        $engines = $this->Db->execute($query);
         $isMroongaExist = false;
         for($cnt = 0; $cnt < count($engines); $cnt++)
         {
@@ -4659,15 +4790,15 @@ class Repository_Action_Main_Update exte
                 " `item_no` int(11) NOT NULL default 0, ".
                 " PRIMARY KEY  (`item_id`,`item_no`) ".
                 " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
-
+        $this->Db->execute($query);
+        
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_lock ( ".
                 " `process_name` varchar(60) NOT NULL default '', ".
                 " `status` int NOT NULL default 0, ".
                 " `comment` text NOT NULL, ".
                 " PRIMARY KEY  (`process_name`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_search_item_setup ( ".
                 " `type_id` int NOT NULL default 0, ".
@@ -4677,7 +4808,7 @@ class Repository_Action_Main_Update exte
                 " `junii2_mapping` text NOT NULL, ".
                 " PRIMARY KEY  (`type_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_search_sort ( ".
                 " `item_id` int NOT NULL default 0, ".
@@ -4703,7 +4834,7 @@ class Repository_Action_Main_Update exte
                 " INDEX `revdate_itemid` (`review_date`, `item_id`), ".
                 " INDEX `bibdate_itemid` (`biblio_date`, `item_id`) ".
                 " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         $tableNameArray = array(
                                 "repository_search_allmetadata",
@@ -4786,7 +4917,7 @@ class Repository_Action_Main_Update exte
         {
             $query .= " ) ENGINE=MyISAM; ";
         }
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
 
     /**
@@ -4804,7 +4935,7 @@ class Repository_Action_Main_Update exte
                 " PRIMARY KEY  (`item_id`,`item_no`,`data_no`), ".
                 " INDEX `metadata` (`metadata`) ".
                 " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
 
     /**
@@ -4821,7 +4952,7 @@ class Repository_Action_Main_Update exte
 
         // delete fulltext_data table
         $query = "DROP TABLE IF EXISTS ". DATABASE_PREFIX. "repository_fulltext_data ;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         // version up to 2.0.10
         $this->versionUp('2.0.10');
@@ -4859,7 +4990,7 @@ class Repository_Action_Main_Update exte
                  "(22, 'repository_detail_search_show_name_degreename', 0, 0, 'degreename'), ".
                  "(23, 'repository_detail_search_show_name_grantor', 0, 0, 'grantor'), ".
                  "(24, 'repository_detail_search_show_name_index', 1, 1, ''); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         return true;
     }
 
@@ -4873,11 +5004,11 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_INDEX. " ".
                  "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_INDEX_OWNER_USER_ID. " (".
                  RepositoryConst::DBCOL_REPOSITORY_INDEX_OWNER_USER_ID. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_INDEX. " ".
                  "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_INDEX_PUB_DATE. " (".
                  RepositoryConst::DBCOL_REPOSITORY_INDEX_PUB_DATE. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         // create new table
         $query = "CREATE TABLE ". DATABASE_PREFIX. "repository_index_browsing_authority ( ".
@@ -4897,7 +5028,7 @@ class Repository_Action_Main_Update exte
                  "PRIMARY KEY  (`index_id`), ".
                  "INDEX `index_browsing_authority` (`index_id`, `exclusive_acl_role_id`, `exclusive_acl_room_auth`) ".
                  " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "CREATE TABLE ". DATABASE_PREFIX. "repository_index_browsing_groups ( ".
                  "`index_id` int NOT NULL default 0, ".
                  "`exclusive_acl_group_id` int NOT NULL default 0, ".
@@ -4910,7 +5041,7 @@ class Repository_Action_Main_Update exte
                  "`is_delete` INT(1), ".
                  "PRIMARY KEY  (`index_id`, `exclusive_acl_group_id`) ".
                  " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         $this->recursiveProcessingFlgList[self::KEY_REPOSITORY_INDEX_MANAGER] = true;
 
@@ -4938,7 +5069,7 @@ class Repository_Action_Main_Update exte
                  "`is_delete` INT(1), ".
                  "PRIMARY KEY  (`id`) ".
                  " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "CREATE TABLE ". DATABASE_PREFIX. "repository_suffix ( ".
                  "`item_id` int NOT NULL default 0, ".
                  "`item_no` int NOT NULL default 0, ".
@@ -4953,7 +5084,7 @@ class Repository_Action_Main_Update exte
                  "`is_delete` INT(1), ".
                  "PRIMARY KEY  (`item_id`, `item_no`, `id`) ".
                  " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         $user_id = $this->Session->getParameter("_user_id");
         $date = $this->TransStartDate;
@@ -4982,24 +5113,24 @@ class Repository_Action_Main_Update exte
         $params[] = $user_id;
         $params[] = $date;
         $params[] = $date;
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         
         $query = "SELECT param_value".
                  " FROM ". DATABASE_PREFIX. "repository_parameter".
                  " WHERE param_name = 'prefixID'".
                  " AND is_delete = 0 ;";
-        $YHandlePrefixParam = $this->dbAccess->executeQuery($query);
+        $YHandlePrefixParam = $this->Db->execute($query);
         $prefix = $YHandlePrefixParam[0]["param_value"];
         
         $query = "UPDATE ". DATABASE_PREFIX. "repository_prefix".
                  " SET prefix_id = '". $YHandlePrefixParam[0]["param_value"]."'".
                  " WHERE id = 10 ;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         //JaLC DOI設定値をインデックスに追加する処理
         $query = "ALTER TABLE ". DATABASE_PREFIX ."repository_index ".
                  "ADD `jalc_doi` INT NOT NULL default 0 AFTER `harvest_public_state`;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         $query = "INSERT INTO ". DATABASE_PREFIX. "repository_suffix".
                  " (item_id, item_no, id, suffix, ins_user_id, mod_user_id, del_user_id, ins_date, mod_date, del_date, is_delete) ".
@@ -5014,16 +5145,16 @@ class Repository_Action_Main_Update exte
         $params[] = $user_id;
         $params[] = $date;
         $params[] = $date;
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         
         $query = "UPDATE ". DATABASE_PREFIX. "repository_item".
                  " SET uri=concat('". BASE_URL. "/?action=repository_uri&item_id=', item_id)".
                  "  WHERE uri LIKE 'http://id.nii.ac.jp/". $prefix. "/%';";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         $query = "DELETE FROM ". DATABASE_PREFIX. "repository_parameter".
                  " WHERE param_name = 'prefixID' AND explanation = 'prefixID' ;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // version up to 2.0.12
         $this->versionUp('2.0.12');
@@ -5215,7 +5346,7 @@ class Repository_Action_Main_Update exte
         $params[] = $process_name;
         $params[] = $status;
         $params[] = "";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         return true;
     }
     
@@ -5260,12 +5391,12 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ". DATABASE_PREFIX. "repository_index ".
                  "ADD biblio_flag INT(1) NOT NULL DEFAULT 0 ".
                  "AFTER owner_user_id; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
 
         $query = "ALTER TABLE ". DATABASE_PREFIX. "repository_index ".
                  "ADD online_issn VARCHAR(9) DEFAULT '' ".
                  "AFTER biblio_flag; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         return true;
     }
     
@@ -5282,7 +5413,7 @@ class Repository_Action_Main_Update exte
                   " `mail_address` TEXT NOT NULL, ".
                   " PRIMARY KEY(`no`) ".
                   ") ENGINE=innodb;";
-         $result = $this->dbAccess->executeQuery($query);
+         $result = $this->Db->execute($query);
      }
      
     /**
@@ -5304,7 +5435,7 @@ class Repository_Action_Main_Update exte
                   " `is_delete` INT(1), ".
                   " PRIMARY KEY(`issn`) ".
                   ") ENGINE=innodb;";
-         $result = $this->dbAccess->executeQuery($query);
+         $result = $this->Db->execute($query);
      }
 
     private function remakeIndexForAcceleration()
@@ -5312,35 +5443,35 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_INDEX. " ".
                 "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_INDEX_SELECT_INDEX_LIST_DISPLAY. " (".
                 RepositoryConst::DBCOL_REPOSITORY_INDEX_SELECT_INDEX_LIST_DISPLAY. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_INDEX. " ".
                 "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_INDEX_PARENT_INDEX_ID. " (".
                 RepositoryConst::DBCOL_REPOSITORY_INDEX_PARENT_INDEX_ID. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_INDEX. " ".
                 "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_INDEX_CREATE_COVER_FLAG. " (".
                 RepositoryConst::DBCOL_REPOSITORY_INDEX_CREATE_COVER_FLAG. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_ITEM. " ".
                 "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_ITEM_TITLE. " (".
                 RepositoryConst::DBCOL_REPOSITORY_ITEM_TITLE. "(10), ".RepositoryConst::DBCOL_REPOSITORY_ITEM_TITLE_ENGLISH. "(10)); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_ITEM. " ".
                 "ADD INDEX ". RepositoryConst::DBCOL_COMMON_IS_DELETE. " (".
                 RepositoryConst::DBCOL_COMMON_IS_DELETE. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         $query = "ALTER TABLE ".DATABASE_PREFIX. "repository_index_browsing_authority ".
                 "DROP INDEX `index_browsing_authority` ; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. "repository_index_browsing_authority ".
                 "ADD INDEX `index_browsing_authority` (".
                 "`exclusive_acl_role_id`, `exclusive_acl_room_auth`, `public_state`, `pub_date`, `is_delete`); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ".DATABASE_PREFIX. "repository_index_browsing_authority ".
                 "ADD INDEX `index_public_state` (".
                 "`public_state`, `pub_date`, `is_delete`); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     // Add OpenDepo 2014/01/31 S.Arata --end--
     
@@ -5355,7 +5486,7 @@ class Repository_Action_Main_Update exte
                   "WHERE param_name = ? ;";
          $params = array();
          $params[] = "site_license";
-         $retRef = $this->dbAccess->executeQuery($query, $params);
+         $retRef = $this->Db->execute($query, $params);
 
          // fix site license value
          $site_license = "";
@@ -5376,7 +5507,7 @@ class Repository_Action_Main_Update exte
              $params = array();
              $params[] = $site_license;
              $params[] = "site_license";
-             $this->dbAccess->executeQuery($query, $params);
+             $this->Db->execute($query, $params);
          }
      }
      
@@ -5388,12 +5519,12 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ". DATABASE_PREFIX. "repository_log ".
                  "ADD numeric_ip_address BIGINT NOT NULL DEFAULT -1 ".
                  "AFTER ip_address; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         // Add referer
         $query = "ALTER TABLE ". DATABASE_PREFIX. "repository_log ".
                  "ADD referer TEXT NOT NULL ".
                  "AFTER user_agent; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
      }
     // add biblio flag to index 2014/04/15 T.Ichikawa --end--
     
@@ -5422,7 +5553,7 @@ class Repository_Action_Main_Update exte
          $params[] = $this->Session->getParameter("_user_id");   // mod_user_id
          $params[] = $this->TransStartDate;  // ins_date
          $params[] = $this->TransStartDate;  // mod_date
-         $this->dbAccess->executeQuery($query, $params);
+         $this->Db->execute($query, $params);
      }
      
     /**
@@ -5455,7 +5586,7 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ".DATABASE_PREFIX."repository_item_attr_type ".
                  "ADD `lido_mapping` TEXT NOT NULL ".
                  "AFTER `lom_mapping` ;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     
     /**
@@ -5471,14 +5602,14 @@ class Repository_Action_Main_Update exte
         $params = array();
         $params[] = 0;  // is_delete
         $params[] = 20017;  // item_type_id
-        $retRef = $this->dbAccess->executeQuery($query, $params);
+        $retRef = $this->Db->execute($query, $params);
         
         if(count($retRef) == 0)
         {
             $query = "INSERT INTO ".DATABASE_PREFIX."repository_item_type ".
                      "VALUE".
                     "(20017, 'LIDO', 'LIDO', 'harvesting item type', 'Others', '', '', '', '', '1', '1', '0', '2008-03-18 00:00:00.000', '2008-03-18 00:00:00.000', '', 0);";
-            $retRef = $this->dbAccess->executeQuery($query);
+            $retRef = $this->Db->execute($query);
         }
         
         $query = "SELECT item_type_id ".
@@ -5487,7 +5618,7 @@ class Repository_Action_Main_Update exte
         $params = array();
         $params[] = 0;  // is_delete
         $params[] = 20017;  // item_type_id
-        $retRef = $this->dbAccess->executeQuery($query, $params);
+        $retRef = $this->Db->execute($query, $params);
         
         if(count($retRef) == 0)
         {
@@ -5570,7 +5701,7 @@ class Repository_Action_Main_Update exte
             $params[] = RepositoryConst::LIDO_TAG_ADMINISTRATIVE_METADATA.".".RepositoryConst::LIDO_TAG_RESOURCE_WRAP.".".RepositoryConst::LIDO_TAG_RESOURCE_SET.".".RepositoryConst::LIDO_TAG_RESOURCE_SOURCE.".".RepositoryConst::LIDO_TAG_LEGAL_BODY_NAME.".".RepositoryConst::LIDO_TAG_APPELLATION_VALUE;
             $params[] = RepositoryConst::LIDO_TAG_ADMINISTRATIVE_METADATA.".".RepositoryConst::LIDO_TAG_RESOURCE_WRAP.".".RepositoryConst::LIDO_TAG_RESOURCE_SET.".".RepositoryConst::LIDO_TAG_RIGHT_RESOURCE.".".RepositoryConst::LIDO_TAG_CREDIT_LINE;
             
-            $retRef = $this->dbAccess->executeQuery($query, $params);
+            $retRef = $this->Db->execute($query, $params);
         }
     }
     
@@ -5605,7 +5736,7 @@ class Repository_Action_Main_Update exte
         $params[] = $user_id;   // mod_user_id
         $params[] = $this->TransStartDate;  // ins_date
         $params[] = $this->TransStartDate;  // mod_date
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     
     /**
@@ -5629,12 +5760,12 @@ class Repository_Action_Main_Update exte
                  " `is_delete` INT(1), ".
                  " PRIMARY KEY(`item_id`, `item_no`, `word`) ".
                  ") ENGINE=MYISAM;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // create external searchword for search table
         // search mroonga
         $query = "SHOW ENGINES";
-        $engines = $this->dbAccess->executeQuery($query);
+        $engines = $this->Db->execute($query);
         $isMroongaExist = false;
         for($cnt = 0; $cnt < count($engines); $cnt++)
         {
@@ -5661,7 +5792,7 @@ class Repository_Action_Main_Update exte
                  " `is_delete` INT(1), ".
                  " PRIMARY KEY(`engine_id`) ".
                  ") ENGINE=MYISAM;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         // add default search engines
         $engine_data = array();
         $engine_data['YAHOO! JAPAN'] = array('domain' => 'search.yahoo.co.jp', 'search_word' => 'p', 'delimiter' => '/[+\\s]+/');
@@ -5689,7 +5820,7 @@ class Repository_Action_Main_Update exte
                  " `is_delete` INT(1), ".
                  " PRIMARY KEY(`stop_word`, `part_of_speech`) ".
                  ") ENGINE=MYISAM;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         // add default stop words
         // 日本語
         // 接続詞(順接, 逆説, 並列・追加, 対比・選択, 説明・補足, 転換)
@@ -5762,7 +5893,7 @@ class Repository_Action_Main_Update exte
             $params[] = $this->TransStartDate;  // mod_date
         }
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     
     /**
@@ -5799,7 +5930,7 @@ class Repository_Action_Main_Update exte
             $engine_id++;
         }
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     
     /**
@@ -5838,7 +5969,7 @@ class Repository_Action_Main_Update exte
                  " `is_delete` INT(1), ".
                  " PRIMARY KEY(`item_id`, `item_no`) ".
                  ") ENGINE=innodb;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     
     /**
@@ -5850,7 +5981,7 @@ class Repository_Action_Main_Update exte
         // create external search word table
         $query = "ALTER TABLE ". DATABASE_PREFIX ."repository_index ".
                  "DROP `jalc_doi` ; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     
     /**
@@ -6078,7 +6209,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     // Add Default Search Type 2014/12/03 K.Sugimoto --end--
     
@@ -6103,7 +6234,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     // Add Usage Statistics link display setting 2014/12/16 K.Matsushita --end--
 
@@ -6129,7 +6260,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     // Add ranking tab display setting 2014/12/19 K.Matsushita --end--
     
@@ -6155,7 +6286,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;
         $params[] = 0;
         
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     
     /**
@@ -6177,7 +6308,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`item_type_id`,`exclusive_base_auth_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // create exclusive room authority table
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_item_type_exclusive_room_auth ( ".
@@ -6192,7 +6323,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`item_type_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     
     /**
@@ -6254,7 +6385,7 @@ class Repository_Action_Main_Update exte
         $query = "SELECT * ".
                  "FROM ".DATABASE_PREFIX. "repository_license_master ";
         
-        $result = $this->dbAccess->executeQuery($query);
+        $result = $this->Db->execute($query);
         
         for ($ii = 0; $ii < count($result); $ii++) 
         {
@@ -6284,7 +6415,7 @@ class Repository_Action_Main_Update exte
             
             $params[] = $result[$ii]["license_id"];
             
-            $this->dbAccess->executeQuery($query, $params);
+            $this->Db->execute($query, $params);
         }
     }
     
@@ -6312,7 +6443,7 @@ class Repository_Action_Main_Update exte
                  "is_delete int(1) default NULL, ".
                  "PRIMARY KEY  (`robotlist_id`) ".
                  ") ENGINE=InnoDb DEFAULT CHARSET=utf8; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_robotlist_data (". 
                  "list_id int(10) NOT NULL AUTO_INCREMENT, ".
@@ -6328,7 +6459,7 @@ class Repository_Action_Main_Update exte
                  "is_delete int(1) default NULL, ".
                  "PRIMARY KEY  (`list_id`) ".
                  ") ENGINE=InnoDb DEFAULT CHARSET=utf8; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // Improve Log 2015/06/17 K.Sugimoto --start--
         $ipAddressCrawlerList = 'https://bitbucket.org/niijp/jairo-crawler-list/raw/master/JAIRO_Crawler-List_ip_blacklist.txt';
@@ -6361,7 +6492,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;                      // mod_date
         $params[] = "";                                         // del_date
         $params[] = 0;                                          // is_delete
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         
         $this->insertLockTable('Repository_Action_Common_Robotlist', 0);
         $this->insertLockTable('Repository_Action_Common_Background_Deleterobotlist', 0);
@@ -6388,7 +6519,7 @@ class Repository_Action_Main_Update exte
                      "`is_delete` INT(1),". 
                      "PRIMARY KEY(`log_no`)". 
                  ") ENGINE=MyISAM;";
-         $this->dbAccess->executeQuery($query);
+         $this->Db->execute($query);
         
         $this->insertLockTable('Repository_Action_Common_Background_Elapsedtime', 0);
         
@@ -6396,7 +6527,7 @@ class Repository_Action_Main_Update exte
         $query = "ALTER TABLE ".DATABASE_PREFIX. RepositoryConst::DBTABLE_REPOSITORY_LOG. " ".
                  "ADD INDEX ". RepositoryConst::DBCOL_REPOSITORY_LOG_RECORD_DATE. " (".
                  RepositoryConst::DBCOL_REPOSITORY_LOG_RECORD_DATE. "); ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         // Improve Log 2015/06/17 K.Sugimoto --end--
     }
     
@@ -6422,7 +6553,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`organization_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // create ip address table
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_sitelicense_ip_address ( ".
@@ -6439,14 +6570,14 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`organization_id`, `organization_no`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // insert data
         $query = "SELECT param_value FROM ". DATABASE_PREFIX. "repository_parameter ".
                  "WHERE param_name = ? ;";
         $params = array();
         $params[] = "site_license";
-        $result = $this->dbAccess->executeQuery($query, $params);
+        $result = $this->Db->execute($query, $params);
         if(strlen($result[0]["param_value"]) > 0) {
             // 機関毎に分割する
             $sitelicenses = explode("|", $result[0]["param_value"]);
@@ -6490,7 +6621,7 @@ class Repository_Action_Main_Update exte
                 $params[] = $this->TransStartDate;                      // mod_date
                 $params[] = "";                                         // del_date
                 $params[] = 0;                                          // is_delete
-                $this->dbAccess->executeQuery($query, $params);
+                $this->Db->execute($query, $params);
                 
                 // insert ip address
                 $query = "INSERT INTO ". DATABASE_PREFIX. "repository_sitelicense_ip_address ".
@@ -6508,7 +6639,7 @@ class Repository_Action_Main_Update exte
                 $params[] = $this->TransStartDate;                      // mod_date
                 $params[] = "";                                         // del_date
                 $params[] = 0;                                          // is_delete
-                $this->dbAccess->executeQuery($query, $params);
+                $this->Db->execute($query, $params);
             }
             
             // delete sitelicense data from parameter table
@@ -6516,22 +6647,22 @@ class Repository_Action_Main_Update exte
                      "WHERE param_name = ? ;";
             $params = array();
             $params[] = "site_license";
-            $this->dbAccess->executeQuery($query, $params);
+            $this->Db->execute($query, $params);
         }
         // サイトライセンスメール送信先テーブル
         // IPアドレス情報カラムを削除し、組織名カラムを追加する
         $query = "ALTER TABLE ". DATABASE_PREFIX ."repository_send_mail_sitelicense ".
                  "DROP `start_ip_address` ; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         $query = "ALTER TABLE ". DATABASE_PREFIX ."repository_send_mail_sitelicense ".
                  "DROP `finish_ip_address` ; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // ログテーブルにサイトライセンス機関情報保存用カラムを作成する
         $query = "ALTER TABLE ". DATABASE_PREFIX ."repository_log ".
                  "ADD `site_license_id` INT(11) default 0 ".
                  "AFTER `site_license` ;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
     }
     
@@ -6557,7 +6688,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
 
     /**
@@ -6582,7 +6713,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         
         // パラメータテーブルにYハンドルPrefixフラグレコードを追加
         $query = "INSERT INTO ". DATABASE_PREFIX. "repository_parameter ".
@@ -6600,7 +6731,7 @@ class Repository_Action_Main_Update exte
         $params[] = $this->TransStartDate;  // mod_date
         $params[] = 0; // is delete
         $query .= ";";
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
 
         // DOI付与フラグを取得
         $query = "SELECT param_name ".
@@ -6610,7 +6741,7 @@ class Repository_Action_Main_Update exte
         $params = array();
         $params[] = "edit_doi_flag_%";
         $params[] = 0;
-        $result = $this->dbAccess->executeQuery($query, $params);
+        $result = $this->Db->execute($query, $params);
 
         // パラメータテーブルからDOI付与フラグを削除
         $query = "DELETE FROM ".DATABASE_PREFIX."repository_parameter ".
@@ -6619,7 +6750,7 @@ class Repository_Action_Main_Update exte
         $params = array();
         $params[] = "edit_doi_flag_%";
         $params[] = 0;
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
         
         // DOI付与判定テーブルを作成
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_doi_flag ( ".
@@ -6638,7 +6769,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`doi_flag_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // DOI付与判定フラグを追加
         for($i = 0; $i < count($result); $i++)
@@ -6699,7 +6830,7 @@ class Repository_Action_Main_Update exte
 		        $params[] = $this->TransStartDate;  // mod_date
 		        $params[] = 0; // is delete
 		        $query .= ";";
-		        $this->dbAccess->executeQuery($query, $params);
+		        $this->Db->execute($query, $params);
 	        }
         }
     }
@@ -6725,7 +6856,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`log_no`,`advanced_search_id`) ".
                 " ) ENGINE=MyISAM; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // 集計対象詳細検索項目テーブルを作成
         $query = "CREATE TABLE ".DATABASE_PREFIX. "repository_target_search_item ( ".
@@ -6740,7 +6871,7 @@ class Repository_Action_Main_Update exte
                 " `is_delete` INT(1), ".
                 " PRIMARY KEY  (`search_item_id`) ".
                 " ) ENGINE=innodb; ";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
         
         // 既存キーワード検索ログ検索項目追加
         $this->recursiveProcessingFlgList[self::KEY_REPOSITORY_SEARCH_LOG] = true;
@@ -6769,7 +6900,7 @@ class Repository_Action_Main_Update exte
 	        $params[] = $this->TransStartDate;  // mod_date
 	        $params[] = 0; // is delete
 	        $query .= ";";
-	        $this->dbAccess->executeQuery($query, $params);
+	        $this->Db->execute($query, $params);
         }
         
         // ロックテーブルに既存検索ログ検索項目追加クラスを追加
@@ -6841,7 +6972,7 @@ class Repository_Action_Main_Update exte
             " `start_log_id` INT default 0, ".
             " PRIMARY KEY(`log_id`) ".
             ") ENGINE=MyISAM;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
 
     // Extend Search Keyword 2015/02/20 K.Sugimoto --start--
@@ -6865,7 +6996,7 @@ class Repository_Action_Main_Update exte
                  "WHERE word = ? ;";
         $params = array();
         $params[] = '';
-        $this->dbAccess->executeQuery($query, $params);
+        $this->Db->execute($query, $params);
     }
     // bug fix external searchword empty 2015/04/09 K.Sugimoto --end--
     
@@ -6928,7 +7059,7 @@ class Repository_Action_Main_Update exte
             "`status` INT(1), ".
             "PRIMARY KEY(`item_id`, `item_no`, `attribute_id`, `file_no`)".
             ") ENGINE=MyISAM;";
-        $this->dbAccess->executeQuery($query);
+        $this->Db->execute($query);
     }
     
     private function updateWekoVersion222To223()
diff -uprN repository/components/QueryGenerator.class.php hackedWEKO/repository/components/QueryGenerator.class.php
--- repository/components/QueryGenerator.class.php	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/components/QueryGenerator.class.php	2016-07-15 09:19:56.000000000 +0900
@@ -1633,4 +1633,4 @@ class Repository_Components_Querygenerat
         return false;
     }
 }
-?>
\ No newline at end of file
+?>
diff -uprN repository/components/RepositoryPdfCover.class.php hackedWEKO/repository/components/RepositoryPdfCover.class.php
--- repository/components/RepositoryPdfCover.class.php	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/components/RepositoryPdfCover.class.php	2015-11-13 17:24:50.000000000 +0900
@@ -0,0 +1,1742 @@
+<?php
+// --------------------------------------------------------------------
+//
+// $Id: RepositoryPdfCover.class.php 36229 2014-05-26 05:49:55Z satoshi_arata $
+//
+// Copyright (c) 2007 - 2008, National Institute of Informatics, 
+// Research and Development Center for Scientific Information Resources
+//
+// This program is licensed under a Creative Commons BSD Licence
+// http://creativecommons.org/licenses/BSD/
+//
+// --------------------------------------------------------------------
+/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
+require_once WEBAPP_DIR. '/modules/repository/files/fpdf/mc_table.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryAction.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryConst.class.php';
+
+/**
+ * Repository module create PDF cover class
+ *
+ * @package repository
+ * @access  public
+ */
+class RepositoryPdfCover extends PDF_MC_Table
+{
+    // -------------------------------------------------------
+    // Member
+    // -------------------------------------------------------
+    /**
+     * Session
+     *
+     * @var Session
+     * @access private
+     */
+    private $Session = null;
+    
+    /**
+     * Db
+     *
+     * @var Db
+     * @access private
+     */
+    private $Db = null;
+    
+    /**
+     * TransStartDate
+     *
+     * @var string
+     * @access private
+     */
+    private $TransStartDate = null;
+    
+    /**
+     * User ID
+     *
+     * @var string
+     * @access private
+     */
+    private $userId = "";
+    
+    /**
+     * RepositoryAction class instance
+     *
+     * @var RepositoryAction
+     * @access private
+     */
+    private $repositoryAction = null;
+    
+    /**
+     * Item ID
+     *
+     * @var int
+     * @access private
+     */
+    private $itemId = 0;
+    
+    /**
+     * Item No
+     *
+     * @var int
+     * @access private
+     */
+    private $itemNo = 0;
+    
+    /**
+     * Attribute ID
+     *
+     * @var int
+     * @access private
+     */
+    private $attributeId = 0;
+    
+    /**
+     * File No
+     *
+     * @var int
+     * @access private
+     */
+    private $fileNo = 0;
+    
+    /**
+     * Temporary directory path
+     *
+     * @var string
+     * @access private
+     */
+    private $tmpDir = "";
+    
+    /**
+     * PDFTK enable flag
+     *
+     * @var bool
+     * @access private
+     */
+    private $enablePdftk = "";
+    
+    /**
+     * PDFTK command path
+     *
+     * @var string
+     * @access private
+     */
+    private $cmdPathPdftk = "";
+    
+    /**
+     * ImageMagick enable flag
+     *
+     * @var bool
+     * @access private
+     */
+    private $enableImageMagick = "";
+    
+    /**
+     * ImageMagick command path
+     *
+     * @var string
+     * @access private
+     */
+    private $cmdPathImageMagick = "";
+    
+    /**
+     * Target file path
+     *
+     * @var string
+     * @access private
+     */
+    private $targetFilePath = "";
+    
+    /**
+     * Error message
+     *
+     * @var string
+     * @access private
+     */
+    private $errorMsg = "";
+    
+    // -------------------------------------------------------
+    // Const
+    // -------------------------------------------------------
+    const WEKO_UPLOAD_DIR = "/uploads/repository/";
+    const ENCODE_TO = "SJIS";   // "SJIS" or "Unicode"
+    const ENCODE_FROM = "UTF-8";
+    const FONT_NAME_MSMINCHO = "MSMincho";
+    const FONT_NAME_MSPMINCHO = "MSPMincho";
+    const FONT_NAME_MSGOTHIC = "MSGothic";
+    const FONT_NAME_MSPGOTHIC = "MSPGothic";
+    // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+    // add font for read doi on Mendeley Desktop
+    const FONT_ARIAL = "arial";
+    // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -end-
+    const FONT_FAMILY_MSMINCHO = "MSMincho";
+    const FONT_FAMILY_MSPMINCHO = "MSPMincho";
+    const FONT_FAMILY_MSGOTHIC = "MSGothic";
+    const FONT_FAMILY_MSPGOTHIC = "MSPGothic";
+    const FONTSIZE_HEADER = 9;
+    const FONTSIZE_FOOTER = 10;
+    const FONTSIZE_TITLE = 20;
+    const FONTSIZE_TITLE_SUB = 15;
+    const FONTSIZE_METADATA = 14;
+    // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+    const FONTSIZE_DOI = 10;
+    // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -end-
+    const MARGIN_TOP = 35.0;
+    const MARGIN_LEFT = 22.0;
+    const MARGIN_RIGHT = 22.0;
+    const MARGIN_TITLE_TOP = 5.0;
+    const MARGIN_TITLE_UNDER = 10.0;
+    const HEADER_TOP = 17.0;
+    const HEADER_HEIGHT = 15.0;
+    const FOOTER_TOP = -22.0;
+    const FOOTER_HEIGHT = 15.0;
+    const ALIGN_LEFT = 'L';
+    const ALIGN_CENTER = 'C';
+    const ALIGN_RIGHT = 'R';
+    const ALIGN_CENTERLEFT = 'CL';
+    const PDF_NAME_TARGET = "target.pdf";
+    const PDF_NAME_TMP_COVER = "tmpcover.pdf";
+    const PDF_NAME_COVER = "cover.pdf";
+    const PDF_NAME_COMBINED = "combined.pdf";
+    const PDF_NAME_ORG_TARGET = "org_target.pdf";
+    const BIBLIO_JTITLE_JP = "雑誌名";
+    const BIBLIO_VOLUME_JP = "巻";
+    const BIBLIO_ISSUE_JP = "号";
+    const BIBLIO_PAGE_JP = "ページ";
+    const BIBLIO_DATEOFISSUED_JP = "発行年";
+    const BIBLIO_JTITLE_EN = "journal or publication title";
+    const BIBLIO_VOLUME_EN = "volume";
+    const BIBLIO_ISSUE_EN = "number";
+    const BIBLIO_PAGE_EN = "page range";
+    const BIBLIO_DATEOFISSUED_EN = "year";
+    
+    // Error message
+    const ERR_CANNOT_CREATE = "Could not create PDF cover page.";
+    
+    // -------------------------------------------------------
+    // Constructor
+    // -------------------------------------------------------
+    /**
+     * Constructor
+     *
+     * @param Session $Session
+     * @param Db $Db
+     * @param string $TransStartDate
+     * @param int $itemId
+     * @param int $itemNo
+     * @param int $attributeId
+     * @param int $fileNo
+     * @return RepositoryPdfCover
+     * @access public
+     */
+    public function RepositoryPdfCover(
+        $Session, $Db, $TransStartDate, $userId="", $itemId=0, $itemNo=0, $attributeId=0, $fileNo=0)
+    {
+        // Set member
+        $this->Session = $Session;
+        $this->Db = $Db;
+        $this->TransStartDate = $TransStartDate;
+        $this->userId = $userId;
+        $this->itemId = $itemId;
+        $this->itemNo = $itemNo;
+        $this->attributeId = $attributeId;
+        $this->fileNo = $fileNo;
+        $this->setDefaltTmpDirPath();
+        
+        if(strlen($this->userId) == 0)
+        {
+            // Get now user's ID
+            $this->userId = $this->Session->getParameter("_user_id");
+        }
+        
+        // Create RepositoryAction class instance
+        $this->repositoryAction = new RepositoryAction();
+        $this->repositoryAction->Session = $Session;
+        $this->repositoryAction->Db = $Db;
+        $this->repositoryAction->TransStartDate = $TransStartDate;
+        
+        // Call original constructor
+        parent::FPDF();
+    }
+    
+    // -------------------------------------------------------
+    // Getter / Setter
+    // -------------------------------------------------------
+    /**
+     * Setter for userId
+     *
+     * @param int $userId
+     * @access public
+     */
+    public function setUserId($userId)
+    {
+        $this->userId = $userId;
+    }
+    
+    /**
+     * Setter for itemId
+     *
+     * @param int $itemId
+     * @access public
+     */
+    public function setItemId($itemId)
+    {
+        $this->itemId = intval($itemId);
+        
+        // Reset file path
+        $this->targetFilePath = "";
+    }
+    
+    /**
+     * Setter for itemNo
+     *
+     * @param int $itemNo
+     * @access public
+     */
+    public function setItemNo($itemNo)
+    {
+        $this->itemNo = intval($itemNo);
+        
+        // Reset file path
+        $this->targetFilePath = "";
+    }
+    
+    /**
+     * Setter for attributeId
+     *
+     * @param int $attributeId
+     * @access public
+     */
+    public function setAttributeId($attributeId)
+    {
+        $this->attributeId = intval($attributeId);
+        
+        // Reset file path
+        $this->targetFilePath = "";
+    }
+    
+    /**
+     * Setter for fileNo
+     *
+     * @param int $fileNo
+     * @access public
+     */
+    public function setFileNo($fileNo)
+    {
+        $this->fileNo = intval($fileNo);
+        
+        // Reset file path
+        $this->targetFilePath = "";
+    }
+    
+    /**
+     * Setter for tmpDir
+     *
+     * @param string $tmpDir
+     * @access public
+     */
+    public function setTmpDir($tmpDir)
+    {
+        $this->tmpDir = $tmpDir;
+    }
+    
+    /**
+     * Getter for errorMsg
+     *
+     * @return string
+     */
+    public function getErrorMsg()
+    {
+        return $this->errorMsg;
+    }
+    
+    // -------------------------------------------------------
+    // PUBLIC
+    // -------------------------------------------------------
+    /**
+     * Execute create PDF cover page
+     *
+     * @return bool
+     * @access public
+     */
+    public function execute()
+    {
+        $success = true;
+        
+        // Check PDFTK
+        if(!$this->chkCmdPdftk())
+        {
+            $success = false;
+        }
+        
+        // Make temporary directory
+        if($success && !$this->makeTmpDir())
+        {
+            $success = false;
+        }
+        
+        // Get target file path
+        if($success && strlen($this->getTargetPdfFilePath()) == 0)
+        {
+            $success = false;
+        }
+        
+        // Copy Target PDF to temporary directory
+        if($success && !copy($this->getTargetPdfFilePath(), $this->tmpDir.self::PDF_NAME_TARGET))
+        {
+            $success = false;
+        }
+        
+        // Make cover page
+        if($success && !$this->makeCoverPage())
+        {
+            $success = false;
+        }
+        
+        // Check existing cover page
+        $coverCreatedFlag = 0;
+        if($success && $this->chkExistCover($coverCreatedFlag))
+        {
+            // Divide PDF pages
+            if(!$this->dividePdf(
+                    $this->tmpDir.self::PDF_NAME_TARGET,
+                    $this->tmpDir.self::PDF_NAME_ORG_TARGET,
+                    sprintf(($coverCreatedFlag+1)."-end")))
+            {
+                $success = false;
+            }
+        }
+        
+        // Combine PDF pages
+        if($success && !$this->combinePdf())
+        {
+            $success = false;
+        }
+        
+        // Combined PDF replace to file directory
+        if($success && !copy($this->tmpDir.self::PDF_NAME_COMBINED, $this->getTargetPdfFilePath()))
+        {
+            $success = false;
+        }
+        
+        // Update cover created flag
+        if($success && !$this->updateCoverCreatedFlag())
+        {
+            $success = false;
+        }
+        
+        // Create PDF thumbnail
+        if($success)
+        {
+            $this->makeThumbnail();
+        }
+        
+        $this->removeTmpDir();
+        
+        if(!$success)
+        {
+            $this->errorMsg = self::ERR_CANNOT_CREATE;
+        }
+        
+        return $success;
+    }
+    
+    // -------------------------------------------------------
+    // PRIVATE
+    // -------------------------------------------------------
+    /**
+     * Set defaut temporary directory path
+     *
+     * @return bool
+     */
+    private function setDefaltTmpDirPath()
+    {
+        $query = "SELECT DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') AS now_date;";
+        $result = $this->Db->execute($query);
+        if($result === false || count($result) != 1){
+            return false;
+        }
+        $date = $result[0]['now_date'];
+        $this->tmpDir = WEBAPP_DIR.self::WEKO_UPLOAD_DIR."_".$date."/";
+        
+        return true;
+    }
+    
+    /**
+     * Make temporary directory
+     *
+     * @return bool
+     * @access private
+     */
+    private function makeTmpDir()
+    {
+        // Check directory path
+        if(strlen($this->tmpDir) == 0)
+        {
+            // Set directory path
+            if($this->setDefaltTmpDirPath())
+            {
+                return false;
+            }
+        }
+        
+        // Make directory
+        if(!file_exists($this->tmpDir))
+        {
+            if(!mkdir($this->tmpDir, 0777 ))
+            {
+                return false;
+            }
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Remove temporary directory
+     *
+     * @return bool
+     * @access private
+     */
+    private function removeTmpDir()
+    {
+        if(strlen($this->tmpDir) == 0)
+        {
+            return false;
+        }
+        
+        if (file_exists($this->tmpDir)) {
+            chmod ($this->tmpDir, 0777 );
+        }
+        if ($handle = opendir("$this->tmpDir")) {
+            while (false !== ($file = readdir($handle))) {
+                if ($file != "." && $file != "..") {
+                    if (is_dir("$this->tmpDir/$file")) {
+                        $this->removeDirectory("$this->tmpDir/$file");
+                        rmdir("$this->tmpDir/$file");
+                    } else {
+                        chmod ("$this->tmpDir/$file", 0777 );
+                        unlink("$this->tmpDir/$file");
+                    }
+                }
+            }
+            closedir($handle);
+            rmdir($this->tmpDir);
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Check PDFTK command
+     *
+     * @return bool
+     * @access private
+     */
+    private function chkCmdPdftk()
+    {
+        if(strlen($this->enablePdftk) != 0)
+        {
+            return $this->enablePdftk;
+        }
+        else
+        {
+            // Get PDFTK command path
+            $query = "SELECT param_value ".
+                     "FROM ".DATABASE_PREFIX."repository_parameter ".
+                     "WHERE param_name = 'path_pdftk';";
+            $ret = $this->Db->execute($query);
+            if ($ret === false) {
+                $this->enablePdftk = false;
+                return false;
+            }
+            $cmd_path = $ret[0]['param_value'];
+            if(strlen($cmd_path)==0)
+            {
+                $this->enablePdftk = false;
+                return false;
+            }
+            
+            if(file_exists($cmd_path."pdftk") || file_exists($cmd_path."pdftk.exe")){
+                $this->enablePdftk = true;
+                $this->cmdPathPdftk = $cmd_path."pdftk";
+                return true;
+            } else {
+                $this->enablePdftk = false;
+                return false;
+            }
+        }
+    }
+    
+    /**
+     * Check ImageMagick command
+     *
+     * @return bool
+     * @access private
+     */
+    private function chkCmdImageMagick()
+    {
+        if(strlen($this->enableImageMagick) != 0)
+        {
+            return $this->enableImageMagick;
+        }
+        else
+        {
+            // Get ImageMagick command path
+            $query = "SELECT param_value ".
+                     "FROM ".DATABASE_PREFIX."repository_parameter ".
+                     "WHERE param_name = 'path_ImageMagick';";
+            $ret = $this->Db->execute($query);
+            if ($ret === false) {
+                $this->enableImageMagick = false;
+                return false;
+            }
+            $cmd_path = $ret[0]['param_value'];
+            if(strlen($cmd_path)==0)
+            {
+                $this->enableImageMagick = false;
+                return false;
+            }
+            
+            if(file_exists($cmd_path."convert") || file_exists($cmd_path."convert.exe")){
+                $this->enableImageMagick = true;
+                $this->cmdPathImageMagick = $cmd_path."convert";
+                return true;
+            } else {
+                $this->enableImageMagick = false;
+                return false;
+            }
+        }
+    }
+    
+    /**
+     * Make cover page
+     *
+     * @return bool
+     * @access private
+     */
+    private function makeCoverPage()
+    {
+        // Get item data array
+        $itemData = $this->getItemData();
+        if(!isset($itemData))
+        {
+            return false;
+        }
+        
+        // Add font
+        if(strtolower(self::ENCODE_TO) == 'sjis')
+        {
+            $this->AddSJISFont(self::FONT_NAME_MSMINCHO, self::FONT_FAMILY_MSMINCHO);
+            $this->AddSJISFont(self::FONT_NAME_MSPMINCHO, self::FONT_FAMILY_MSPMINCHO);
+            $this->AddSJISFont(self::FONT_NAME_MSGOTHIC, self::FONT_FAMILY_MSGOTHIC);
+            $this->AddSJISFont(self::FONT_NAME_MSPGOTHIC, self::FONT_FAMILY_MSPGOTHIC);
+        }
+        else
+        {
+            $this->AddUniJISFont(self::FONT_NAME_MSMINCHO, self::FONT_FAMILY_MSMINCHO);
+            $this->AddUniJISFont(self::FONT_NAME_MSPMINCHO, self::FONT_FAMILY_MSPMINCHO);
+            $this->AddUniJISFont(self::FONT_NAME_MSGOTHIC, self::FONT_FAMILY_MSGOTHIC);
+            $this->AddUniJISFont(self::FONT_NAME_MSPGOTHIC, self::FONT_FAMILY_MSPGOTHIC);
+        }
+        
+        // Set Margin
+        $this->SetMargins(self::MARGIN_LEFT, self::MARGIN_TOP, self::MARGIN_RIGHT);
+        
+        // Add Page
+        $this->AddPage();
+        
+        // Item langage
+        $itemLang = $itemData["item"][0]["language"];
+        
+        // TITLE --start--
+        $itemTitle = "";
+        $itemTitleSub = "";
+        if($itemLang == "ja")
+        {
+            if(strlen($itemData["item"][0]["title"]) > 0)
+            {
+                $itemTitle = $itemData["item"][0]["title"];
+            }
+            if(strlen($itemTitle) > 0)
+            {
+                $itemTitleSub = $itemData["item"][0]["title_english"];
+            }
+            else
+            {
+                $itemTitle = $itemData["item"][0]["title_english"];
+            }
+        }
+        else
+        {
+            if(strlen($itemData["item"][0]["title_english"]) > 0)
+            {
+                $itemTitle = $itemData["item"][0]["title_english"];
+            }
+            if(strlen($itemTitle) == 0)
+            {
+                $itemTitle = $itemData["item"][0]["title"];
+            }
+        }
+        
+        $this->SetY(self::MARGIN_TOP+self::MARGIN_TITLE_TOP);
+        $this->SetFont(self::FONT_FAMILY_MSGOTHIC, 'B', self::FONTSIZE_TITLE);
+        $this->SetDrawColor(150, 150, 200);
+        $this->SetLineWidth(0.5);
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+        // remove title line
+        //$this->Line(self::MARGIN_LEFT, $this->GetY(), $this->w-self::MARGIN_RIGHT, $this->GetY());
+        $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($itemTitle), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_CENTERLEFT);
+        // remove sub title 2012/10/12 T.Koyasu -start-
+        //if(strlen($itemTitleSub) > 0)
+        //{
+        //    $this->SetFont(self::FONT_FAMILY_MSPGOTHIC, 'B', self::FONTSIZE_TITLE_SUB);
+        //    $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($itemTitleSub), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_CENTER);
+        //}
+        // remove sub title 2012/10/12 T.Koyasu -end-
+        //$this->Line(self::MARGIN_LEFT, $this->GetY(), $this->w-self::MARGIN_RIGHT, $this->GetY());
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+        $this->SetY($this->y+self::MARGIN_TITLE_UNDER);
+        // TITLE --end--
+        
+        // METADATA --start--
+        $this->SetFont(self::FONT_FAMILY_MSMINCHO, '', self::FONTSIZE_METADATA);
+        $this->SetDrawColor(0);
+        $this->SetLineWidth(0.2);
+        $rowWidth = $this->w-self::MARGIN_LEFT-self::MARGIN_RIGHT;
+        $this->SetWidths(array($rowWidth*0.3, $rowWidth*0.7));
+        $this->SetAligns(array(self::ALIGN_LEFT, self::ALIGN_LEFT));
+        $this->SetRowFillColor(array(array(200,200,250), array(255,255,255)));
+        
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+        // save string for add doi under metadata list table
+        $doiStr = "";
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -end-
+        
+        // Loop for metadata
+        $metadataList = array();
+        for($ii=0; $ii<count($itemData['item_attr_type']); $ii++)
+        {
+            $metadata = array();
+            
+            // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+            // check exists doi and $doiStr is void
+            if($itemData['item_attr_type'][$ii]['junii2_mapping'] == "doi" && strlen($doiStr) == 0){
+                if($itemData['item_attr_type'][$ii]['input_type'] == "thumbnail" || 
+                   $itemData['item_attr_type'][$ii]['input_type'] == "file" || 
+                   $itemData['item_attr_type'][$ii]['input_type'] == "file_price" || 
+                   $itemData['item_attr_type'][$ii]['input_type'] == "supple" || 
+                   $itemData['item_attr_type'][$ii]['input_type'] == "heading" || 
+                   $itemData['item_attr_type'][$ii]['input_type'] == "biblio_info"){
+                    continue;
+                }
+                else if($itemData['item_attr_type'][$ii]['input_type'] == "name")
+                {
+                    if(strtolower($itemData['item_attr_type'][$ii]['display_lang_type']) == "english")
+                    {
+                        $nameStr = $itemData['item_attr'][$ii][0]['name'];
+                        if(strlen($itemData['item_attr'][$ii][0]['family']) > 0)
+                        {
+                            if(strlen($nameStr) > 0)
+                            {
+                                $nameStr .= " ";
+                            }
+                            $nameStr .= $itemData['item_attr'][$ii][0]['family'];
+                        }
+                    }
+                    else
+                    {
+                        $nameStr = $itemData['item_attr'][$ii][0]['family'];
+                        if(strlen($itemData['item_attr'][$ii][0]['name']) > 0)
+                        {
+                            if(strlen($nameStr) > 0)
+                            {
+                                $nameStr .= " ";
+                            }
+                            $nameStr .= $itemData['item_attr'][$ii][0]['name'];
+                        }
+                    }
+                    
+                    if(strlen($nameStr) > 0)
+                    {
+                        $doiStr = $nameStr;
+                        continue;
+                    }
+                }
+                else if($itemData['item_attr_type'][$ii]['input_type'] == "link")
+                {
+                    if(strlen($itemData['item_attr'][$ii][0]['attribute_value']) > 0)
+                    {
+                        $links = explode("|", $itemData['item_attr'][$ii][0]['attribute_value'], 2);
+                        $linkStr = "";
+                        if(strlen($links[0]) > 0 && isset($links[1]) && strlen($links[1]) > 0)
+                        {
+                            $linkStr = $links[1]."(".$links[0].")";
+                        }
+                        else if(strlen(isset($links[1]) && strlen($links[1]) > 0))
+                        {
+                            $linkStr = $links[1];
+                        }
+                        else
+                        {
+                            $linkStr = $links[0];
+                        }
+                        
+                        if(strlen($linkStr) > 0)
+                        {
+                            $doiStr = $linkStr;
+                            continue;
+                        }
+                    }
+                }
+                else
+                {
+                    $doiStr = $itemData['item_attr'][$ii][0]['attribute_value'];
+                    continue;
+                }
+            }
+            // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -end-
+            
+            // Check option
+            if($itemData['item_attr_type'][$ii]['list_view_enable'] != "1")
+            {
+                continue;
+            }
+            
+            // Check mapping
+            if(strlen($itemData['item_attr_type'][$ii]['display_lang_type']) > 0)
+            {
+                if($itemLang == "ja")
+                {
+                    if(strtolower($itemData['item_attr_type'][$ii]['display_lang_type']) != "japanese")
+                    {
+                        continue;
+                    }
+                }
+                else
+                {
+                    if(strtolower($itemData['item_attr_type'][$ii]['display_lang_type']) != "english")
+                    {
+                        continue;
+                    }
+                }
+            }
+            
+            // Check metadata
+            if($itemData['item_attr_type'][$ii]['input_type'] == "thumbnail"
+                || $itemData['item_attr_type'][$ii]['input_type'] == "file"
+                || $itemData['item_attr_type'][$ii]['input_type'] == "file_price"
+                || $itemData['item_attr_type'][$ii]['input_type'] == "supple"
+                || $itemData['item_attr_type'][$ii]['input_type'] == "heading")
+            {
+                continue;
+            }
+            else if($itemData['item_attr_type'][$ii]['input_type'] == "name")
+            {
+                $metadata["name"] = $itemData['item_attr_type'][$ii]['attribute_name'];
+                $metadata["value"] = "";
+                for($jj=0; $jj<count($itemData['item_attr'][$ii]); $jj++)
+                {
+                    if(strtolower($itemData['item_attr_type'][$ii]['display_lang_type']) == "english")
+                    {
+                        $nameStr = $itemData['item_attr'][$ii][$jj]['name'];
+                        if(strlen($itemData['item_attr'][$ii][$jj]['family']) > 0)
+                        {
+                            if(strlen($nameStr) > 0)
+                            {
+                                $nameStr .= " ";
+                            }
+                            $nameStr .= $itemData['item_attr'][$ii][$jj]['family'];
+                        }
+                    }
+                    else
+                    {
+                        $nameStr = $itemData['item_attr'][$ii][$jj]['family'];
+                        if(strlen($itemData['item_attr'][$ii][$jj]['name']) > 0)
+                        {
+                            if(strlen($nameStr) > 0)
+                            {
+                                $nameStr .= " ";
+                            }
+                            $nameStr .= $itemData['item_attr'][$ii][$jj]['name'];
+                        }
+                    }
+                    
+                    if(strlen($nameStr) > 0)
+                    {
+                        if(strlen($metadata["value"]) > 0)
+                        {
+                            $metadata["value"] .= ", ";
+                        }
+                        $metadata["value"] .= $nameStr;
+                    }
+                }
+                if(strlen($metadata["value"]) > 0)
+                {
+                    array_push($metadataList, $metadata);
+                }
+            }
+            else if($itemData['item_attr_type'][$ii]['input_type'] == "biblio_info")
+            {
+                // jtitle
+                $jtitle = "";
+                if($itemLang == "ja")
+                {
+                    if(strlen($itemData['item_attr'][$ii][0]['biblio_name']) > 0)
+                    {
+                        $jtitle = $itemData['item_attr'][$ii][0]['biblio_name'];
+                    }
+                    if(strlen($jtitle) == 0)
+                    {
+                        $jtitle = $itemData['item_attr'][$ii][0]['biblio_name_english'];
+                    }
+                }
+                else
+                {
+                    if(strlen($itemData['item_attr'][$ii][0]['biblio_name_english']) > 0)
+                    {
+                        $jtitle = $itemData['item_attr'][$ii][0]['biblio_name_english'];
+                    }
+                    if(strlen($jtitle) == 0)
+                    {
+                        $jtitle = $itemData['item_attr'][$ii][0]['biblio_name'];
+                    }
+                }
+                if(strlen($jtitle) >0)
+                {
+                    if($itemLang == "ja")
+                    {
+                        $metadata["name"] = self::BIBLIO_JTITLE_JP;
+                    }
+                    else
+                    {
+                        $metadata["name"] = self::BIBLIO_JTITLE_EN;
+                    }
+                    $metadata["value"] = $jtitle;
+                    array_push($metadataList, $metadata);
+                }
+                
+                // volume
+                if(strlen($itemData['item_attr'][$ii][0]['volume']) >0)
+                {
+                    if($itemLang == "ja")
+                    {
+                        $metadata["name"] = self::BIBLIO_VOLUME_JP;
+                    }
+                    else
+                    {
+                        $metadata["name"] = self::BIBLIO_VOLUME_EN;
+                    }
+                    $metadata["value"] = $itemData['item_attr'][$ii][0]['volume'];
+                    array_push($metadataList, $metadata);
+                }
+                
+                // issue
+                if(strlen($itemData['item_attr'][$ii][0]['issue']) >0)
+                {
+                    if($itemLang == "ja")
+                    {
+                        $metadata["name"] = self::BIBLIO_ISSUE_JP;
+                    }
+                    else
+                    {
+                        $metadata["name"] = self::BIBLIO_ISSUE_EN;
+                    }
+                    $metadata["value"] = $itemData['item_attr'][$ii][0]['issue'];
+                    array_push($metadataList, $metadata);
+                }
+                
+                // pages
+                $pages = $itemData['item_attr'][$ii][0]['start_page'];
+                if(strlen($itemData['item_attr'][$ii][0]['end_page']) > 0)
+                {
+                    if(strlen($pages) > 0)
+                    {
+                        $pages .= "-";
+                    }
+                    $pages .= $itemData['item_attr'][$ii][0]['end_page'];
+                }
+                if(strlen($pages) >0)
+                {
+                    if($itemLang == "ja")
+                    {
+                        $metadata["name"] = self::BIBLIO_PAGE_JP;
+                    }
+                    else
+                    {
+                        $metadata["name"] = self::BIBLIO_PAGE_EN;
+                    }
+                    $metadata["value"] = $pages;
+                    array_push($metadataList, $metadata);
+                }
+                
+                // dateofissued
+                if(strlen($itemData['item_attr'][$ii][0]['date_of_issued']) >0)
+                {
+                    if($itemLang == "ja")
+                    {
+                        $metadata["name"] = self::BIBLIO_DATEOFISSUED_JP;
+                    }
+                    else
+                    {
+                        $metadata["name"] = self::BIBLIO_DATEOFISSUED_EN;
+                    }
+                    $metadata["value"] = $itemData['item_attr'][$ii][0]['date_of_issued'];
+                    array_push($metadataList, $metadata);
+                }
+            }
+            else if($itemData['item_attr_type'][$ii]['input_type'] == "link")
+            {
+                $metadata["name"] = $itemData['item_attr_type'][$ii]['attribute_name'];
+                $metadata["value"] = "";
+                for($jj=0; $jj<count($itemData['item_attr'][$ii]); $jj++)
+                {
+                    if(strlen($itemData['item_attr'][$ii][$jj]['attribute_value']) > 0)
+                    {
+                        $links = explode("|", $itemData['item_attr'][$ii][$jj]['attribute_value'], 2);
+                        $linkStr = "";
+                        if(strlen($links[0]) > 0 && isset($links[1]) && strlen($links[1]) > 0)
+                        {
+                            $linkStr = $links[1]."(".$links[0].")";
+                        }
+                        else if(strlen(isset($links[1]) && strlen($links[1]) > 0))
+                        {
+                            $linkStr = $links[1];
+                        }
+                        else
+                        {
+                            $linkStr = $links[0];
+                        }
+                        
+                        if(strlen($linkStr) > 0)
+                        {
+                            if(strlen($metadata["value"]) > 0)
+                            {
+                                $metadata["value"] .= "\n";
+                            }
+                            $metadata["value"] .= $linkStr;
+                        }
+                    }
+                }
+                if(strlen($metadata["value"]) > 0)
+                {
+                    array_push($metadataList, $metadata);
+                }
+            }
+            else
+            {
+                $metadata["name"] = $itemData['item_attr_type'][$ii]['attribute_name'];
+                $metadata["value"] = "";
+                for($jj=0; $jj<count($itemData['item_attr'][$ii]); $jj++)
+                {
+                    if(strlen($itemData['item_attr'][$ii][$jj]['attribute_value']) > 0)
+                    {
+                        if(strlen($metadata["value"]) > 0)
+                        {
+                            $metadata["value"] .= "\n";
+                        }
+                        $metadata["value"] .= $itemData['item_attr'][$ii][$jj]['attribute_value'];
+                    }
+                }
+                if(strlen($metadata["value"]) > 0)
+                {
+                    array_push($metadataList, $metadata);
+                }
+            }
+        }
+        
+        // Add PDF file URL
+        $url = $itemData["item"][0]["uri"];
+        array_push($metadataList, array("name" => "URL", "value" => $url));
+        
+        foreach($metadataList as $metadata)
+        {
+            $this->Row(
+                array(
+                    mb_convert_encoding($this->stripAccent($metadata["name"]), self::ENCODE_TO, self::ENCODE_FROM),
+                    mb_convert_encoding($this->stripAccent($metadata["value"]), self::ENCODE_TO, self::ENCODE_FROM)
+                )
+            );
+        }
+        // METADATA --end--
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -start-
+        $doiStr = mb_ereg_replace('[^\x00-\x7f]', "", $doiStr);
+        if(strlen($doiStr) > 0)
+        {
+            // set font=arial, fontsize=10
+            $this->SetFont(self::FONT_ARIAL, '', self::FONTSIZE_DOI);
+            // add doi string under metadata list table
+            
+            $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent("doi: ".$doiStr), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_RIGHT);
+        }
+        // Mod pdf cover page remove line and show doi 2012/10/10 T.Koyasu -end-
+        
+        $this->Output($this->tmpDir.self::PDF_NAME_COVER, 'F');
+        
+        return true;
+    }
+    
+    /**
+     * Check existing cover page
+     *
+     * @param int &$coverCreatedFlag
+     * @return bool false: Not exist / true: Existing
+     * @access private
+     */
+    private function chkExistCover(&$coverCreatedFlag)
+    {
+        $coverCreatedFlag = 0;
+        $query = "SELECT ".RepositoryConst::DBCOL_REPOSITORY_FILE_COVER_CREATED_FLAG." ".
+                 "FROM ".DATABASE_PREFIX.RepositoryConst::DBTABLE_REPOSITORY_FILE." ".
+                 "WHERE ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_NO." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO." = ? ".
+                 "AND ".RepositoryConst::DBCOL_COMMON_IS_DELETE." = ?;";
+        $params = array();
+        $params[] = $this->itemId;
+        $params[] = $this->itemNo;
+        $params[] = $this->attributeId;
+        $params[] = $this->fileNo;
+        $params[] = 0;
+        $result = $this->Db->execute($query, $params);
+        if($result === false){
+            return false;
+        }
+        if(count($result[0]) == 0)
+        {
+            return false;
+        }
+        $coverCreatedFlag = intval($result[0][RepositoryConst::DBCOL_REPOSITORY_FILE_COVER_CREATED_FLAG]);
+        if($coverCreatedFlag == 0)
+        {
+            return false;
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Divide PDF pages
+     *
+     * @param string $target
+     * @param string $tmpTarget
+     * @param string $range
+     * @return bool
+     * @access private
+     */
+    private function dividePdf($target, $tmpTarget, $range)
+    {
+        if(!$this->chkCmdPdftk())
+        {
+            return false;
+        }
+        
+        // #pdftk [target_path] cat [page_range] output [output_path]
+        if(!rename($target, $tmpTarget))
+        {
+            return false;
+        }
+        $cmd = "\"".$this->cmdPathPdftk."\" ".
+               "\"".$tmpTarget."\" ".
+               "cat ".$range." output ".
+               "\"".$target."\"";
+        exec(escapeshellcmd($cmd));
+        
+        if(!file_exists($target))
+        {
+            return false;
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Combine PDF pages
+     *
+     * @return bool
+     * @access private
+     */
+    private function combinePdf()
+    {
+        if(!$this->chkCmdPdftk())
+        {
+            return false;
+        }
+        
+        // #pdftk [cover_path] [target_path] cat output [output_path]
+        $cmd = "\"".$this->cmdPathPdftk."\" ".
+               "\"".$this->tmpDir.self::PDF_NAME_COVER."\" ".
+               "\"".$this->tmpDir.self::PDF_NAME_TARGET."\" ".
+               "cat output ".
+               "\"".$this->tmpDir.self::PDF_NAME_COMBINED."\"";
+        
+        exec(escapeshellcmd($cmd));
+        
+        if(!file_exists($this->tmpDir.self::PDF_NAME_COMBINED))
+        {
+            return false;
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Make PDF thumbnail
+     *
+     * @return bool
+     * @access private
+     */
+    private function makeThumbnail()
+    {
+        $isSuccess = false;
+        
+        // Check ImageMagick command
+        if(!$this->chkCmdImageMagick())
+        {
+            return $isSuccess;
+        }
+        
+        // PDF -> PNG
+        $cmd = "\"".$this->cmdPathImageMagick."\" ".
+               "-quality 100 ".
+               "\"".$this->tmpDir.self::PDF_NAME_COMBINED."\"[0] ".
+               "\"".$this->tmpDir.self::PDF_NAME_COMBINED.".png\"";
+        exec(escapeshellcmd($cmd));
+        
+        if(file_exists($this->tmpDir.self::PDF_NAME_COMBINED.".png"))
+        {
+            // Success
+            // Get image size
+            $imgSize = array();
+            $imgSize = getimagesize($this->tmpDir.self::PDF_NAME_COMBINED.".png");
+            $width = $imgsize[0];
+            $height = $imgsize[1];
+            if(unlink($this->tmpDir.self::PDF_NAME_COMBINED.".png"))
+            {
+                // Resize
+                if($height > $width)
+                {
+                    // Height is longer than width
+                    $cmd = "\"".$this->cmdPathImageMagick."\" ".
+                           "-quality 100 -density 200x200 -resize 200x ".
+                           "\"".$this->tmpDir.self::PDF_NAME_COMBINED."\"[0] ".
+                           "\"".$this->tmpDir.self::PDF_NAME_COMBINED.".png\"";
+                }
+                else
+                {
+                    // Width is longer than height
+                    $cmd = "\"".$this->cmdPathImageMagick."\" ".
+                           "-quality 100 -density 200x200 -resize x280 ".
+                           "\"".$this->tmpDir.self::PDF_NAME_COMBINED."\"[0] ".
+                           "\"".$this->tmpDir.self::PDF_NAME_COMBINED.".png\"";
+                }
+                exec(escapeshellcmd($cmd));
+                
+                if(file_exists($this->tmpDir.self::PDF_NAME_COMBINED.".png"))
+                {
+                    // Success
+                    $this->updateThumbnail($this->tmpDir.self::PDF_NAME_COMBINED.".png");
+                    $isSuccess = true;
+                }
+            }
+        }
+        
+        return $isSuccess;
+    }
+    
+    /**
+     * Update file thumbnail
+     *
+     * @param string $filePath
+     * @return bool
+     */
+    private function updateThumbnail($filePath)
+    {
+        $whereParams = RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_ID." = ".$this->itemId." ".
+                       "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_NO." = ".$this->itemNo." ".
+                       "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID." = ".$this->attributeId." ".
+                       "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO." = ".$this->fileNo;
+        $ret = $this->Db->updateBlobFile(
+                    RepositoryConst::DBTABLE_REPOSITORY_FILE,
+                    RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_PREV,
+                    $filePath,
+                    $whereParams,
+                    "LONGBLOB"
+                );
+        if ($ret === false) {
+            return false;
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Get item data
+     *
+     * @return array
+     * @access private
+     */
+    private function getItemData()
+    {
+        $resultList = null;
+        $errMsg = "";
+        $result = $this->repositoryAction->getItemData($this->itemId, $this->itemNo, $resultList, $errMsg, false, true);
+        if($result == false)
+        {
+            $resultList = null;
+        }
+        
+        return $resultList;
+    }
+    
+    /**
+     * Get target PDF file Path
+     *
+     * @return string
+     * @access private
+     */
+    private function getTargetPdfFilePath()
+    {
+        if(strlen($this->targetFilePath) == 0)
+        {
+            $filePath = "";
+            if(($this->itemId * $this->attributeId * $this->fileNo) > 0)
+            {
+                $fileName = $this->itemId."_".$this->attributeId."_".$this->fileNo.".pdf";
+                
+                $dirPath = $this->repositoryAction->getFileSavePath("file");
+                if(strlen($dirPath) == 0)
+                {
+                    // default directory
+                    $dirPath = BASE_DIR.'/webapp/uploads/repository/files/';
+                }
+                
+                if(substr($dirPath, -1, 1) != "/"){
+                    $dirPath .= "/";
+                }
+                
+                $this->targetFilePath = $dirPath.$fileName;
+            }
+        }
+        
+        return $this->targetFilePath;
+    }
+    
+    /**
+     * Update cover_created_flag
+     *
+     * @return bool
+     * @access private
+     */
+    private function updateCoverCreatedFlag()
+    {
+        $query = "UPDATE ".DATABASE_PREFIX.RepositoryConst::DBTABLE_REPOSITORY_FILE." ".
+                 "SET ".RepositoryConst::DBCOL_REPOSITORY_FILE_COVER_CREATED_FLAG." = ?, ".
+                 RepositoryConst::DBCOL_COMMON_MOD_USER_ID." = ?, ".
+                 RepositoryConst::DBCOL_COMMON_MOD_DATE." = ? ".
+                 "WHERE ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_NO." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO." = ?; ";
+        $params = array();
+        $params[] = intval($this->page);
+        $params[] = $this->userId;
+        $params[] = $this->TransStartDate;
+        $params[] = $this->itemId;
+        $params[] = $this->itemNo;
+        $params[] = $this->attributeId;
+        $params[] = $this->fileNo;
+        $result = $this->Db->execute($query, $params);
+        if($result === false)
+        {
+            return false;
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Strip accent string
+     *
+     * @param string $str
+     * @return string
+     * @access private
+     */
+    private function stripAccent($str)
+    {
+        $convStr = "";
+        
+        //$encStr = mb_convert_encoding($str, 'HTML-ENTITIES', 'UTF-8');
+        //$decStr = mb_convert_encoding($encStr, 'UTF-8', 'HTML-ENTITIES');
+        
+        
+        $chars = array(
+                // ----------------------------------
+                // Remove accent
+                // ----------------------------------
+                // Decompositions for Latin-1 Supplement
+                '&#192;' => '&#65;', '&#193;' => '&#65;',
+                '&#194;' => '&#65;', '&#195;' => '&#65;',
+                '&#196;' => '&#65;', '&#197;' => '&#65;',
+                '&#198;' => '&#65;&#69;', '&#199;' => '&#67;',
+                '&#200;' => '&#69;', '&#201;' => '&#69;',
+                '&#202;' => '&#69;', '&#203;' => '&#69;',
+                '&#204;' => '&#73;', '&#205;' => '&#73;',
+                '&#206;' => '&#73;', '&#207;' => '&#73;',
+                '&#208;' => '&#68;', '&#209;' => '&#78;',
+                '&#210;' => '&#79;', '&#211;' => '&#79;',
+                '&#212;' => '&#79;', '&#213;' => '&#79;',
+                '&#214;' => '&#79;',
+                '&#216;' => '&#79;', '&#217;' => '&#85;',
+                '&#218;' => '&#85;', '&#219;' => '&#85;',
+                '&#220;' => '&#85;', '&#221;' => '&#89;',
+                '&#222;' => '&#80;', '&#223;' => '&#115;',
+                '&#224;' => '&#97;', '&#225;' => '&#97;',
+                '&#226;' => '&#97;', '&#227;' => '&#97;',
+                '&#228;' => '&#97;', '&#229;' => '&#97;',
+                '&#230;' => '&#97;&#101;', '&#231;' => '&#99;',
+                '&#232;' => '&#101;', '&#233;' => '&#101;',
+                '&#234;' => '&#101;', '&#235;' => '&#101;',
+                '&#236;' => '&#105;', '&#237;' => '&#105;',
+                '&#238;' => '&#105;', '&#239;' => '&#105;',
+                '&#240;' => '&#100;', '&#241;' => '&#110;',
+                '&#242;' => '&#111;', '&#243;' => '&#111;',
+                '&#244;' => '&#111;', '&#245;' => '&#111;',
+                '&#246;' => '&#111;',
+                '&#248;' => '&#111;', '&#249;' => '&#117;',
+                '&#250;' => '&#117;', '&#251;' => '&#117;',
+                '&#252;' => '&#117;', '&#253;' => '&#121;',
+                '&#254;' => '&#112;', '&#255;' => '&#121;',
+                // Decompositions for Latin Extended-A
+                '&#256;' => '&#65;', '&#257;' => '&#97;',
+                '&#258;' => '&#65;', '&#259;' => '&#97;',
+                '&#260;' => '&#65;', '&#261;' => '&#97;',
+                '&#262;' => '&#67;', '&#263;' => '&#99;',
+                '&#264;' => '&#67;', '&#265;' => '&#99;',
+                '&#266;' => '&#67;', '&#267;' => '&#99;',
+                '&#268;' => '&#67;', '&#269;' => '&#99;',
+                '&#270;' => '&#68;', '&#271;' => '&#100;',
+                '&#272;' => '&#68;', '&#273;' => '&#100;',
+                '&#274;' => '&#69;', '&#275;' => '&#101;',
+                '&#276;' => '&#69;', '&#277;' => '&#101;',
+                '&#278;' => '&#69;', '&#279;' => '&#101;',
+                '&#280;' => '&#69;', '&#281;' => '&#101;',
+                '&#282;' => '&#69;', '&#283;' => '&#101;',
+                '&#284;' => '&#71;', '&#285;' => '&#103;',
+                '&#286;' => '&#71;', '&#287;' => '&#103;',
+                '&#288;' => '&#71;', '&#289;' => '&#103;',
+                '&#290;' => '&#71;', '&#291;' => '&#103;',
+                '&#292;' => '&#72;', '&#293;' => '&#104;',
+                '&#294;' => '&#72;', '&#295;' => '&#104;',
+                '&#296;' => '&#73;', '&#297;' => '&#105;',
+                '&#298;' => '&#73;', '&#299;' => '&#105;',
+                '&#300;' => '&#73;', '&#301;' => '&#105;',
+                '&#302;' => '&#73;', '&#303;' => '&#105;',
+                '&#304;' => '&#73;', '&#305;' => '&#105;',
+                '&#306;' => '&#73;&#74;', '&#307;' => '&#105;&#106;',
+                '&#308;' => '&#74;', '&#309;' => '&#106;',
+                '&#310;' => '&#75;', '&#311;' => '&#107;',
+                '&#312;' => '&#107;', '&#313;' => '&#76;',
+                '&#314;' => '&#108;', '&#315;' => '&#76;',
+                '&#316;' => '&#108;', '&#317;' => '&#76;',
+                '&#318;' => '&#108;', '&#319;' => '&#76;',
+                '&#320;' => '&#108;', '&#321;' => '&#76;',
+                '&#322;' => '&#108;', '&#323;' => '&#78;',
+                '&#324;' => '&#110;', '&#325;' => '&#78;',
+                '&#326;' => '&#110;', '&#327;' => '&#78;',
+                '&#328;' => '&#110;', '&#329;' => '&#78;',
+                '&#330;' => '&#110;', '&#331;' => '&#78;',
+                '&#332;' => '&#79;', '&#333;' => '&#111;',
+                '&#334;' => '&#79;', '&#335;' => '&#111;',
+                '&#336;' => '&#79;', '&#337;' => '&#111;',
+                '&#338;' => '&#79;&#69;', '&#339;' => '&#111;&#101;',
+                '&#340;' => '&#82;', '&#341;' => '&#114;',
+                '&#342;' => '&#82;', '&#343;' => '&#114;',
+                '&#344;' => '&#82;', '&#345;' => '&#114;',
+                '&#346;' => '&#83;', '&#347;' => '&#115;',
+                '&#348;' => '&#83;', '&#349;' => '&#115;',
+                '&#350;' => '&#83;', '&#351;' => '&#115;',
+                '&#352;' => '&#83;', '&#353;' => '&#115;',
+                '&#354;' => '&#84;', '&#355;' => '&#116;',
+                '&#356;' => '&#84;', '&#357;' => '&#116;',
+                '&#358;' => '&#84;', '&#359;' => '&#116;',
+                '&#360;' => '&#85;', '&#361;' => '&#117;',
+                '&#362;' => '&#85;', '&#363;' => '&#117;',
+                '&#364;' => '&#85;', '&#365;' => '&#117;',
+                '&#366;' => '&#85;', '&#367;' => '&#117;',
+                '&#368;' => '&#85;', '&#369;' => '&#117;',
+                '&#370;' => '&#85;', '&#371;' => '&#117;',
+                '&#372;' => '&#87;', '&#373;' => '&#119;',
+                '&#374;' => '&#89;', '&#375;' => '&#121;',
+                '&#376;' => '&#89;', '&#377;' => '&#90;',
+                '&#378;' => '&#122;', '&#379;' => '&#90;',
+                '&#380;' => '&#122;', '&#381;' => '&#90;',
+                '&#382;' => '&#122;', '&#383;' => '&#115;',
+                
+                // ----------------------------------
+                // Convert to other string
+                // ----------------------------------
+                '&#169;' => '&#40;&#67;&#41;',          // 著作権記号 -> (C)
+                '&#174;' => '&#40;&#82;&#41;',          // 登録商標記号 -> (R)
+                '&#8482;' => '&#40;&#84;&#77;&#41;',    // 商標記号 -> (TM)
+                '&#189;' => '&#49;&#47;&#50;',          // 2分の1 -> 1/2
+                '&#188;' => '&#49;&#47;&#52;',          // 4分の1 -> 1/4
+                '&#190;' => '&#51;&#47;&#52;',          // 4分の3 -> 3/4
+                '&#8721;' => '&#931;',                  // 数列の和 -> Σ(ギリシャ文字シグマ)
+                '&#8719;' => '&#928;',                  // 数列の積、直積 -> Π(ギリシャ文字パイ)
+                
+                // ----------------------------------
+                // Convert to half space
+                // ----------------------------------
+                '&#166;' => '&#32;',    // 破断縦線
+                '&#181;' => '&#32;',    // マイクロ記号
+                '&#164;' => '&#32;',    // 一般通貨記号
+                '&#128;' => '&#32;',    // ユーロ記号
+                '&#8596;' => '&#32;',   // 左右両向き矢印
+                '&#8657;' => '&#32;',   // 上向き二重矢印
+                '&#8659;' => '&#32;',   // 下向き二重矢印
+                '&#8656;' => '&#32;',   // 左向き二重矢印
+                '&#9824;' => '&#32;',   // スペードマーク
+                '&#9827;' => '&#32;',   // クラブマーク
+                '&#9829;' => '&#32;',   // ハートマーク
+                '&#9830;' => '&#32;',   // ダイヤマーク
+                '&#170;' => '&#32;',    // 女性序数標識
+                '&#186;' => '&#32;',    // 男性序数標識
+                '&#185;' => '&#32;',    // 上付き1
+                '&#178;' => '&#32;',    // 上付き2
+                '&#179;' => '&#32;',    // 上付き3
+                '&#183;' => '&#32;',    // 中点
+                '&#161;' => '&#32;',    // 逆さ感嘆符
+                '&#191;' => '&#32;',    // 逆さ疑問符
+                '&#171;' => '&#32;',    // 左二重角引用符
+                '&#187;' => '&#32;',    // 右二重角引用符
+                '&#8195;' => '&#32;',   // “m”幅空白
+                '&#8194;' => '&#32;',   // “n”幅空白
+                '&#8201;' => '&#32;',   // 狭い空白
+                '&#8212;' => '&#32;',   // “m”幅ダッシュ
+                '&#8211;' => '&#32;',   // “n”幅ダッシュ
+                '&#8226;' => '&#32;',   // 行頭文字
+                '&#9674;' => '&#32;',   // 菱形
+                '&#8776;' => '&#32;',   // ほぼ等しい
+                '&#8773;' => '&#32;',   // およそ等しい
+                '&#8805;' => '&#32;',   // 大なりまたは等しい
+                '&#8804;' => '&#32;',   // 小なりまたは等しい
+                '&#402;' => '&#32;',    // 関数記号
+                '&#8465;' => '&#32;',   // 虚数
+                '&#8476;' => '&#32;',   // 実数
+                '&#8472;' => '&#32;',   // ワイエルシュトラスのP
+                '&#8764;' => '&#32;',   // チルダ演算子
+                '&#982;' => '&#32;',    // パイ記号
+                '&#8709;' => '&#32;',   // 空集合
+                '&#8713;' => '&#32;',   // ～の要素ではない
+                '&#8836;' => '&#32;',   // 含まれない
+                '&#8901;' => '&#32;',   // 点演算子
+                '&#8727;' => '&#32;',   // アスタリスク演算子
+                '&#8853;' => '&#32;',   // 丸囲み加算(直和)
+                '&#8855;' => '&#32;',   // 丸囲み乗算(直積)
+                '&#8968;' => '&#32;',   // 左上限
+                '&#8970;' => '&#32;',   // 左下限
+                '&#8969;' => '&#32;',   // 右上限
+                '&#8971;' => '&#32;',   // 右下限
+                '&#184;' => '&#32;',    // セディラ(セディーユ)
+                '&#710;' => '&#32;',    // サーカムフレックス
+                '&#175;' => '&#32;',    // マクロン
+                '&#732;' => '&#32;'     // チルダ
+            );
+        
+        $convMap = array(0x0, 0xffff, 0, 0xffff);
+        $encStr = mb_encode_numericentity($str, $convMap, 'UTF-8');
+        $convEncStr = strtr($encStr, $chars);
+        $decStr = mb_decode_numericentity($convEncStr, $convMap, 'UTF-8');
+        
+        $convStr = $decStr;
+        
+        return $convStr;
+    }
+    
+    // -------------------------------------------------------
+    // OVERRIDE
+    // -------------------------------------------------------
+    /**
+     * Header setting
+     *
+     */
+    function Header()
+    {
+        $this->SetFont(self::FONT_FAMILY_MSMINCHO,'',self::FONTSIZE_HEADER);
+        $this->SetY(self::HEADER_TOP);
+        
+        // Header align
+        $headerAlign = self::ALIGN_RIGHT;
+        $result = $this->repositoryAction->getPdfCoverParamRecord(RepositoryConst::PDF_COVER_PARAM_NAME_HEADER_ALIGN);
+        switch($result[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_TEXT])
+        {
+            case RepositoryConst::PDF_COVER_HEADER_ALIGN_RIGHT:
+                $headerAlign = self::ALIGN_RIGHT;
+                break;
+            case RepositoryConst::PDF_COVER_HEADER_ALIGN_CENTER:
+                $headerAlign = self::ALIGN_CENTER;
+                break;
+            case RepositoryConst::PDF_COVER_HEADER_ALIGN_LEFT:
+                $headerAlign = self::ALIGN_LEFT;
+                break;
+            default:
+                $headerAlign = self::ALIGN_RIGHT;
+                break;
+        }
+        
+        // Header type
+        $headerType = $this->repositoryAction->getPdfCoverParamRecord(RepositoryConst::PDF_COVER_PARAM_NAME_HEADER_TYPE);
+        if($headerType[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_TEXT] == RepositoryConst::PDF_COVER_HEADER_TYPE_TEXT)
+        {
+            // Header type : text
+            $result = $this->repositoryAction->getPdfCoverParamRecord(RepositoryConst::PDF_COVER_PARAM_NAME_HEADER_TEXT);
+            $headerText = $result[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_TEXT];
+            $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($headerText), self::ENCODE_TO, self::ENCODE_FROM), 0, $headerAlign);
+        }
+        else if($headerType[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_TEXT] == RepositoryConst::PDF_COVER_HEADER_TYPE_IMAGE)
+        {
+            // Header type : image
+            $result = $this->repositoryAction->getPdfCoverParamRecord(RepositoryConst::PDF_COVER_PARAM_NAME_HEADER_IMAGE);
+            $imageBlob = $result[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_IMAGE];
+            $imageName = $result[RepositoryConst::DBCOL_REPOSITORY_PDF_COVER_PARAMETER_TEXT];
+            
+            if(strlen($imageBlob) > 0)
+            {
+                // Create physical file
+                $handle = fopen($this->tmpDir.$imageName, "w");
+                fwrite($handle, $imageBlob);
+                fclose($handle);
+                if(file_exists($this->tmpDir.$imageName))
+                {
+                    // Get Image size
+                    $a = getimagesize($this->tmpDir.$imageName);
+                    $w_px = $a[0]; // Unit: px
+                    $h_px = $a[1]; // Unit: px
+                    
+                    // Convert to FPDF unit
+                    $w_unit = $w_px*72/96/$this->k;
+                    $h_unit = $h_px*72/96/$this->k;
+                    
+                    // Resize
+                    $this->repositoryAction->resizeImage(
+                            $w_unit,
+                            $h_unit,
+                            $this->w-self::MARGIN_LEFT-self::MARGIN_RIGHT,
+                            self::HEADER_HEIGHT
+                        );
+                    if($headerAlign == self::ALIGN_RIGHT)
+                    {
+                        // right
+                        $this->SetX($this->w-self::MARGIN_RIGHT-$w_unit);
+                    }
+                    else if($headerAlign == self::ALIGN_CENTER)
+                    {
+                        // center
+                        $this->SetX($this->w/2 - $w_unit/2);
+                    }
+                    else if($headerAlign == self::ALIGN_LEFT)
+                    {
+                        // left
+                        $this->SetX(self::MARGIN_LEFT - $w_unit);
+                    }
+                    
+                    $this->Image($this->tmpDir.$imageName, $this->GetX(), $this->GetY(), $w_unit, $h_unit);
+                }
+            }
+        }
+        $this->SetY(self::MARGIN_TOP);
+        $this->SetX(self::MARGIN_LEFT);
+    }
+    
+    /**
+     * Footer setting
+     *
+     */
+    function Footer()
+    {
+        // Get license
+        $query = "SELECT ".RepositoryConst::DBCOL_REPOSITORY_FILE_LICENSE_ID.", ".
+                 "       ".RepositoryConst::DBCOL_REPOSITORY_FILE_LICENSE_NOTATION." ".
+                 "FROM ".DATABASE_PREFIX.RepositoryConst::DBTABLE_REPOSITORY_FILE." ".
+                 "WHERE ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ITEM_NO." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID." = ? ".
+                 "AND ".RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO." = ? ".
+                 "AND ".RepositoryConst::DBCOL_COMMON_IS_DELETE." = ?; ";
+        $params = array();
+        $params[] = $this->itemId;
+        $params[] = $this->itemNo;
+        $params[] = $this->attributeId;
+        $params[] = $this->fileNo;
+        $params[] = 0;
+        $result = $this->Db->execute($query, $params);
+        if($result === false || (isset($result) && count($result[0]) == 0)){
+            return false;
+        }
+        
+        $licenseId = $result[0][RepositoryConst::DBCOL_REPOSITORY_FILE_LICENSE_ID];
+        $notation = $result[0][RepositoryConst::DBCOL_REPOSITORY_FILE_LICENSE_NOTATION];
+        
+        if(strlen($notation) > 0)
+        {
+            // Set license to PDF
+            $this->SetY(self::FOOTER_TOP);
+            $this->SetFont(self::FONT_FAMILY_MSMINCHO, '', 9);
+            
+            if($licenseId == "0")
+            {
+                // Free
+                $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($notation), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_RIGHT);
+            }
+            else if(strlen($licenseId) > 0)
+            {
+                // Criative Commons
+                $query = "SELECT * ".
+                         "FROM ".DATABASE_PREFIX.RepositoryConst::DBTABLE_REPOSITORY_LICENSE_MASTER." ".
+                         "WHERE ".RepositoryConst::DBCOL_REPOSITORY_LICENSE_MASTAER_LICENSE_ID." = ?; ";
+                $params = array();
+                $params[] = $licenseId;
+                $result = $this->Db->execute($query, $params);
+                if($result === false || (isset($result) && count($result[0]) == 0)){
+                    return false;
+                }
+                $licenseImagePath = $result[0][RepositoryConst::DBCOL_REPOSITORY_LICENSE_MASTAER_IMG_URL];
+                $licenseTextUrl = $result[0][RepositoryConst::DBCOL_REPOSITORY_LICENSE_MASTAER_TEXT_URL];
+                if(strlen($licenseImagePath) > 0)
+                {
+                    // Get Image size
+                    $a = getimagesize($licenseImagePath);
+                    $w_px = $a[0]; // Unit: px
+                    $h_px = $a[1]; // Unit: px
+                    
+                    // Convert to FPDF unit
+                    $w_unit = $w_px*72/96/$this->k;
+                    $h_unit = $h_px*72/96/$this->k;
+                    
+                    // Resize
+                    $this->repositoryAction->resizeImage(
+                            $w_unit,
+                            $h_unit,
+                            $this->w-self::MARGIN_LEFT-self::MARGIN_RIGHT,
+                            self::FOOTER_HEIGHT
+                        );
+                    $this->SetX($this->w-self::MARGIN_RIGHT-$w_unit);
+                    $this->Image($licenseImagePath, $this->GetX(), $this->GetY(), $w_unit, $h_unit);
+                    $this->SetX(self::MARGIN_LEFT);
+                    $this->MultiCell($this->w-self::MARGIN_LEFT-self::MARGIN_RIGHT-$w_unit, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($notation), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_RIGHT);
+                    $this->SetX(self::MARGIN_LEFT);
+                    $this->MultiCell($this->w-self::MARGIN_LEFT-self::MARGIN_RIGHT-$w_unit, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($licenseTextUrl), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_RIGHT);
+                }
+                else
+                {
+                    $this->MultiCell(0, $this->FontSize+$this->cMargin, mb_convert_encoding($this->stripAccent($notation), self::ENCODE_TO, self::ENCODE_FROM), 0, self::ALIGN_RIGHT);
+                }
+            }
+        }
+        $this->SetY(self::MARGIN_TOP);
+        $this->SetX(self::MARGIN_LEFT);
+    }
+}
+
+?>
diff -uprN repository/config/define.inc.php hackedWEKO/repository/config/define.inc.php
--- repository/config/define.inc.php	2015-08-29 15:00:09.000000000 +0900
+++ hackedWEKO/repository/config/define.inc.php	2016-07-25 14:45:31.000000000 +0900
@@ -92,4 +92,8 @@ define("_REPOSITORY_JALC_DOI", false);
 define("_REPOSITORY_JALC_CROSSREF_DOI", false);
 define("_REPOSITORY_JALC_DATACITE_DOI", false);
 
+//------------repon.org設定----------
+// default value false
+define("_REPOSITORY_REPON_JUNII2_EXDESCRIPTION",true);
+define("_REPOSITORY_REPON_IIIF_SUPPORT",true);
 ?>
diff -uprN repository/files/css/blue/style.css hackedWEKO/repository/files/css/blue/style.css
--- repository/files/css/blue/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/blue/style.css	2015-11-24 13:37:50.000000000 +0900
@@ -2548,3 +2548,13 @@ img.draganddrop {
 .galleryViewLink a:active{
 	color: #FFEEFF;
 }
+
+// hackedWeko
+iframe.hackedWekoItem{
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
diff -uprN repository/files/css/default/style.css hackedWEKO/repository/files/css/default/style.css
--- repository/files/css/default/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/default/style.css	2015-11-24 13:37:30.000000000 +0900
@@ -2416,3 +2416,13 @@ img.draganddrop {
 .galleryViewLink a:active{
 	color: #FFEEFF;
 }
+
+// hackedWeko
+iframe.hackedWekoItem{
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
diff -uprN repository/files/css/green/style.css hackedWEKO/repository/files/css/green/style.css
--- repository/files/css/green/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/green/style.css	2015-11-24 13:38:14.000000000 +0900
@@ -2544,3 +2544,12 @@ img.draganddrop {
 	color: #FFEEFF;
 }
 
+// hackedWeko
+iframe.hackedWekoItem{
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
diff -uprN repository/files/css/orange/style.css hackedWEKO/repository/files/css/orange/style.css
--- repository/files/css/orange/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/orange/style.css	2015-11-24 13:38:35.000000000 +0900
@@ -2542,3 +2542,13 @@ img.draganddrop {
 .galleryViewLink a:active{
 	color: #FFEEFF;
 }
+
+// hackedWeko
+iframe.hackedWekoItem {
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
diff -uprN repository/files/css/pink/style.css hackedWEKO/repository/files/css/pink/style.css
--- repository/files/css/pink/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/pink/style.css	2015-11-24 13:38:55.000000000 +0900
@@ -2556,3 +2556,13 @@ img.draganddrop {
 .galleryViewLink a:active{
 	color: #FFEEFF;
 }
+
+// hackedWeko
+iframe.hackedWekoItem{
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
diff -uprN repository/files/css/red/style.css hackedWEKO/repository/files/css/red/style.css
--- repository/files/css/red/style.css	2015-03-05 09:45:00.000000000 +0900
+++ hackedWEKO/repository/files/css/red/style.css	2015-11-24 13:39:13.000000000 +0900
@@ -2541,3 +2541,13 @@ img.draganddrop {
 .galleryViewLink a:active{
 	color: #FFEEFF;
 }
+
+// hackedWeko
+ifame.hackedWekoItem{
+    width: 60%;
+    //height: 320px;
+}
+img.hackedWekoItem{
+    width: 60%;
+    //height: 200px;
+}
Binary files repository/files/help/en/html/img/item_setting_06.png and hackedWEKO/repository/files/help/en/html/img/item_setting_06.png differ
Binary files repository/files/help/ja/html/img/item_setting_06.png and hackedWEKO/repository/files/help/ja/html/img/item_setting_06.png differ
Binary files repository/files/images/default/blank_export.png and hackedWEKO/repository/files/images/default/blank_export.png differ
Binary files repository/files/images/default/iiif.png and hackedWEKO/repository/files/images/default/iiif.png differ
diff -uprN repository/iiif/IIIF.class.php hackedWEKO/repository/iiif/IIIF.class.php
--- repository/iiif/IIIF.class.php	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/iiif/IIIF.class.php	2016-07-25 22:59:08.000000000 +0900
@@ -0,0 +1,953 @@
+<?php
+/// --------------------------------------------------------------------
+// This program is licensed under a Creative Commons BSD Licence
+// http://creativecommons.org/licenses/BSD/
+// ref. http://iiif.io/api/presentation/2.1/
+// --------------------------------------------------------------------
+
+/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
+
+include_once MAPLE_DIR.'/includes/pear/File/Archive.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryAction.class.php';
+require_once WEBAPP_DIR. '/modules/repository/action/main/export/ExportCommon.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryItemAuthorityManager.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryOutputFilter.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryHandleManager.class.php';
+
+/**
+ * [[機能説明]]
+ *
+ * @package     [[package名]]
+ * @access      public
+ */
+class Repository_IIIF extends RepositoryAction
+{
+	// リクエストパラメータを受け取るため
+	var $verb = null;
+	var $itemId = null;
+	var $itemNo = null;
+	
+	// ダウンロード用メンバ
+	var $uploadsView = null;
+	
+	// 改行
+	var $LF = "\n";
+	// タブシフト
+	var $TAB_SHIFT = "\t";
+
+	// 出力文字列
+	var $feed = '';
+	
+	// エラーメッセージ
+	var $errorMsg = "";
+	
+	// グローバル
+	var $iiif_fields = array();
+
+
+     /**
+     * for instance of RepositoryHandleManager class
+     * 
+     * @var object
+     */
+    private $repositoryHandleManager = null;
+
+    
+    /**
+     * [[機能説明]]
+     *
+     * @access  public
+     */
+    function execute()
+    {
+    	// 初期処理
+    	$this->initAction();
+
+
+        $this->getRepositoryHandleManager();
+        
+		// フィード文字列取得
+		$feed = $this->outputIIIF();
+    	
+    	// 取得結果がfalseでなければ
+    	if ( $feed != false ) {
+    		// ヘッダ出力
+    		header("Content-Type: application/json; charset=utf-8");
+	    	// フィード出力
+			print $feed;
+       	}else{
+       		// ヘッダ出力
+    		header("Content-Type: text/html; charset=utf-8");	// レスポンスのContent-Typeを明示的に指定する("text/html")
+       		// エラー出力
+       		print $this->errorMsg;
+       	}
+		
+		// テキスト書き出し終了後にexit関数を呼び出す
+    	exit();
+
+    }
+	
+    function outputIIIF()
+    {
+    	// アイテム情報の取得
+    	$query = 'SELECT ITEMTYPE.mapping_info, '.
+    			 '		 ITEM.title, '.
+    			 '		 ITEM.title_english, '.
+    			 '		 ITEM.language, '.
+    			 '		 ITEM.item_type_id, '.
+    			 '		 ITEM.serch_key, '.
+    			 '		 ITEM.shown_status '.
+    			 'FROM '.DATABASE_PREFIX.'repository_item ITEM, '.
+    			 '     '.DATABASE_PREFIX.'repository_item_type ITEMTYPE '.
+				 'WHERE ITEM.item_type_id = ITEMTYPE.item_type_id '.
+   				 '  AND ITEM.item_id = ? '.
+    			 '  AND ITEM.item_no = ? '.
+    			 '  AND ITEM.is_delete = 0;';
+    	$params = null;
+		$params[] = $this->itemId;
+		$params[] = $this->itemNo;
+ 
+    	$retItem = $this->Db->execute($query, $params);
+		if ($retItem === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+		
+		// アイテム情報が無い場合、終了
+		if (count($retItem) < 1){
+			$this->errorMsg = 'This item data is not found.';
+			return false;
+    	}
+    	// アイテムタイプのマッピング情報がない場合終了
+    	if($retItem[0]['mapping_info'] == null){
+    		$this->errorMsg = 'This item has no mapping info.';
+    		return false;
+    	}
+    	
+
+
+        // Add check item public status 2010/01/12 Y.Nakao --start--
+        // Add tree access control list 2012/03/07 T.Koyasu -start-
+        $role_auth_id = $this->Session->getParameter('_role_auth_id');
+        $user_auth_id = $this->Session->getParameter('_user_auth_id');
+        $user_id = $this->Session->getParameter('_user_id');
+        $this->Session->removeParameter('_role_auth_id');
+        $this->Session->removeParameter('_user_auth_id');
+        $this->Session->setParameter('_user_id', '0');
+        $this->Session->setParameter('_role_auth_id', $role_auth_id);
+        $this->Session->setParameter('_user_auth_id', $user_auth_id);
+        $this->Session->setParameter('_user_id', $user_id);
+        // Add tree access control list 2012/03/07 T.Koyasu -end-
+		// アイテム公開チェック
+        // Add Advanced Search 2013/11/26 R.Matsuura --start--
+        $itemAuthorityManager = new RepositoryItemAuthorityManager($this->Session, $this->dbAccess, $this->TransStartDate);
+        // Add Advanced Search 2013/11/26 R.Matsuura --end--
+        // Mod OpenDepo 2014/01/31 S.Arata --start--
+        if(!$itemAuthorityManager->checkItemPublicFlg($this->itemId, $this->itemNo, $this->repository_admin_base, $this->repository_admin_room)){
+			// item close
+			$retItem[0]['shown_status'] = "0";
+		}
+		// Mod OpenDepo 2014/01/31 S.Arata --end--
+		// Add check item public status 2010/01/12 Y.Nakao --end--
+
+    	// アイテムが非公開の場合エラー
+    	if($retItem[0]['shown_status'] != 1){
+    		$this->errorMsg = 'This item is private.';
+    		return false;
+    	}
+
+        
+    	// メタデータ取得
+    	$query = 'SELECT attribute_id, '.
+    	    	 '		 show_order, '.
+    			 '		 attribute_name, '.
+    			 '		 input_type, '.
+    			 '		 junii2_mapping, '.
+    			 // Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+    			 '		 hidden, '.
+    			 // Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+    			//Add display lang type 2009/09/01 K.Ito --start--
+    			 '		 display_lang_type '.
+    			//Add display lang type 2009/09/01 K.Ito --end--
+    			 'FROM '.DATABASE_PREFIX.'repository_item_attr_type '.
+				 'WHERE item_type_id = ? '.
+    			 '	AND is_delete = 0 '.
+    			 'order by show_order;';
+	    $params = null;
+	    $params[] = $retItem[0]['item_type_id'];
+    	$retAttr = $this->Db->execute($query, $params);
+		if ($retAttr === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+		
+		// 入力されているメタデータのvalueを取得
+    	$query = 'SELECT attribute_id, '.
+    	    	 '		 attribute_no, '.
+    			 '		 attribute_value '.
+    			 'FROM '.DATABASE_PREFIX.'repository_item_attr '.
+				 'WHERE item_id = ? '.
+    			 '	AND item_no = ? '.
+    			 '	AND item_type_id = ? '.
+    			 '	AND is_delete = 0 '.
+    			 'order by attribute_id;';
+	    $params = null;
+	    $params[] = $this->itemId;
+	    $params[] = $this->itemNo;
+	    $params[] = $retItem[0]['item_type_id'];
+    	$retAttrValue = $this->Db->execute($query, $params);
+		if ($retAttrValue === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+    	
+    	// Add LIDO 2014/05/09 S.Suzuki --start--
+    	for ($ii = 0; $ii < count($retAttrValue); $ii++) {
+    		$retAttrValue[$ii]['attribute_value'] = RepositoryOutputFilter::exclusiveReservedWords($retAttrValue[$ii]['attribute_value']);
+    	}
+		// Add LIDO 2014/05/09 S.Suzuki --end--
+    	
+		// 複数入力の紐づけ
+    	for($ii=0;$ii<count($retAttr);$ii++){
+    		$cntValue = 0;
+    		for($jj=0;$jj<count($retAttrValue);$jj++){
+	    		if($retAttr[$ii]['attribute_id'] == $retAttrValue[$jj]['attribute_id']){
+					$retAttr[$ii]['value'][$cntValue] = $retAttrValue[$jj]['attribute_value'];
+					$cntValue++;
+				}
+    		}
+		}
+		
+    	// 書誌情報を持つ場合、各データを取得
+        $query = 'SELECT BIBLIO_INFO.biblio_name, '.
+        		 '		 BIBLIO_INFO.volume, '.
+        		 '		 BIBLIO_INFO.biblio_name_english, '.
+        		 '		 BIBLIO_INFO.issue, '.
+        		 '		 BIBLIO_INFO.start_page, '.
+        		 '		 BIBLIO_INFO.end_page, '.
+	    	     '		 BIBLIO_INFO.date_of_issued '.
+        		 'FROM '.DATABASE_PREFIX.'repository_biblio_info BIBLIO_INFO, '.
+        		 '	   '.DATABASE_PREFIX.'repository_item_attr_type ATTRTYPE '.
+        		 'WHERE ATTRTYPE.input_type = "biblio_info" '.
+        		 '	AND ATTRTYPE.item_type_id = BIBLIO_INFO.item_type_id '.
+        		 '	AND ATTRTYPE.attribute_id = BIBLIO_INFO.attribute_id '.
+        		 '	AND ATTRTYPE.item_type_id = ? '.
+        		 '	AND BIBLIO_INFO.item_id = ? '.
+        		 '	AND BIBLIO_INFO.item_no = ? '.
+        		 '	AND ATTRTYPE.is_delete = 0 '.
+        		 // Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+        		 '	AND ATTRTYPE.hidden = 0 '.
+        		 // Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+        		 '	AND BIBLIO_INFO.is_delete = 0;';
+        $params = null;
+        $params[] = $retItem[0]['item_type_id'];
+        $params[] = $this->itemId;
+        $params[] = $this->itemNo;
+    	$retBiblio_info = $this->Db->execute($query, $params);
+		if ($retBiblio_info === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+    	
+    	// Add LIDO 2014/05/09 S.Suzuki --start--
+    	for ($ii = 0; $ii < count($retBiblio_info); $ii++) {
+    		$retBiblio_info[$ii]['biblio_name']         = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['biblio_name']);
+    		$retBiblio_info[$ii]['volume']              = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['volume']);
+    		$retBiblio_info[$ii]['biblio_name_english'] = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['biblio_name_english']);
+    		$retBiblio_info[$ii]['issue']               = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['issue']);
+    		$retBiblio_info[$ii]['start_page']          = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['start_page']);
+    		$retBiblio_info[$ii]['end_page']            = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['end_page']);
+    		$retBiblio_info[$ii]['date_of_issued']      = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['date_of_issued']);
+    	}
+		// Add LIDO 2014/05/09 S.Suzuki --end--
+    	
+		// 書誌情報に含まれるデータを加工
+		if(count($retBiblio_info) > 0){
+	    	// ページ数の連結
+	    	$biblio_info_pages = null;
+	    	if($retBiblio_info[0]['start_page'] != null && $retBiblio_info[0]['end_page'] != null){
+				$biblio_info_pages = $retBiblio_info[0]['start_page'].'--'.$retBiblio_info[0]['end_page'];
+	    	}
+			
+	    	// 発行年月の取得
+	    	$biblio_info_year = null;
+	    	$biblio_info_month = null;
+	    	if($retBiblio_info[0]['date_of_issued'] != null){
+	    		$split_date = split("-", $retBiblio_info[0]['date_of_issued']);
+	    		$biblio_info_year = $split_date[0];
+	    		if($split_date[1] != null){
+	    			switch($split_date[1]){
+	    				case '01':
+	    					$biblio_info_month = 'jan';
+	    					break;
+	    				case '02':
+	    					$biblio_info_month = 'feb';
+	    					break;
+	    				case '03':
+	    					$biblio_info_month = 'mar';
+	    					break;
+	    				case '04':
+	    					$biblio_info_month = 'apr';
+	    					break;
+	    				case '05':
+	    					$biblio_info_month = 'may';
+	    					break;
+	    				case '06':
+	    					$biblio_info_month = 'jun';
+	    					break;
+	    				case '07':
+	    					$biblio_info_month = 'jul';
+	    					break;
+	    				case '08':
+	    					$biblio_info_month = 'aug';
+	    					break;
+	    				case '09':
+	    					$biblio_info_month = 'sep';
+	    					break;
+	    				case '10':
+	    					$biblio_info_month = 'oct';
+	    					break;
+	    				case '11':
+	    					$biblio_info_month = 'nov';
+	    					break;
+	    				case '12':
+	    					$biblio_info_month = 'dec';
+	    					break;
+	    				default:
+	    					$biblio_info_month = $split_date[1];
+	    			}
+	    		}
+	    	}
+		}
+
+
+		// 出力データ作成
+		//Add multiple language 2009/09/02 K.Ito --start--
+		if($this->Session->getParameter("_lang") == "japanese"){
+			if($retItem[0]['title'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title'];
+			}else if($retItem[0]['title_english'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title_english'];
+			}
+			if($retBiblio_info[0]['biblio_name'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+			}else if($retBiblio_info[0]['biblio_name_english'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name_english'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name_english'];
+			}
+		}else{
+			if($retItem[0]['title_english'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title_english'];
+			}else if($retItem[0]['title'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title'];
+			}
+			if($retBiblio_info[0]['biblio_name_english'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name_english'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name_english'];
+			}else if($retBiblio_info[0]['biblio_name'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+			}
+		}
+		//Add multiple language 2009/09/02 K.Ito --end--
+		//$this->iiif_fields['title'] = $retItem[0]['title'];
+		//$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+		//$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+		$this->iiif_fields['volume'] = $retBiblio_info[0]['volume'];
+		$this->iiif_fields['number'] = $retBiblio_info[0]['issue'];
+		$this->iiif_fields['pages'] = $biblio_info_pages;
+		$this->iiif_fields['month'] = $biblio_info_month;
+		$this->iiif_fields['year'] = $biblio_info_year;
+    	//print_r($retAttr);
+    	
+    	// init
+    	$author_sub = null;
+    	$jtitle_sub = null;
+    	$publisher_sub = null;
+    	$contributor_sub = null;
+    	
+    	
+			for($ii=0;$ii<count($retAttr);$ii++){//print_r($this->iiif_fields);
+			// Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+			if($retAttr[$ii]['hidden'] == '1')
+			{
+				continue;
+			}
+			// Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+				switch($retAttr[$ii]['junii2_mapping']){
+				case 'creator':
+					//Add multiple language for creator 2009/09/02 K.Ito --start--
+					if(!isset($this->iiif_fields['author'])){
+						if($retAttr[$ii]['input_type'] == 'name'){
+					    	// Authorを取得
+					        $query = 'SELECT family, '.
+					    			 '		 name '.
+					    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+									 'WHERE item_id = ? '.
+					    			 '  AND item_no = ? '.
+					    			 '  AND attribute_id = ? '.
+					    			 '  AND is_delete = 0;';
+						    $params = null;
+							$params[] = $this->itemId;
+							$params[] = $this->itemNo;
+							$params[] = $retAttr[$ii]['attribute_id'];
+					    	$retName = $this->Db->execute($query, $params);
+							if ($retName === false) {
+								$this->errorMsg = 'Database access error.';
+								return false;
+							}
+							
+							// Add LIDO 2014/05/22 S.Suzuki --start--
+					    	for ($jj = 0; $jj < count($retName); $jj++) {
+					    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+					    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+					    	}
+							
+							//一時保存用Name初期化
+							$Name = "";
+					
+					    	// 氏名を連結
+					    	for($jj=0;$jj<count($retName);$jj++){
+					    		if($jj != 0){
+					    			$Name .= ' and ';
+					    		}
+					    		if ($retName[$jj]['family'] !== '' && $retName[$jj]['name'] !== '') {
+					    			$Name .= $retName[$jj]['family'].','.$retName[$jj]['name'];
+					    		}
+					    		else if ($retName[$jj]['family'] !== '') {
+					    			$Name .= $retName[$jj]['family'];
+					    		}
+					    		else {
+					    			$Name .= $retName[$jj]['name'];
+					    		}
+					    	}
+							// Add LIDO 2014/05/22 S.Suzuki --end--
+							
+					    	//氏名を格納
+							if($this->Session->getParameter("_lang") == "japanese"){
+								if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+									if(!isset($this->iiif_fields['author'])){
+					    				$this->iiif_fields['author'] = $Name;
+									}
+									else{
+										$this->iiif_fields['author'] .= $Name;
+									}
+								}else{
+									if($author_sub == null){
+										$author_sub = $Name;
+									}
+								}
+					    	}else{
+					    		if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+					    		}else{
+					    			if($author_sub == null){
+					    				$author_sub = $Name;
+					    			}
+					    		}	
+					    	}
+						}else{
+							//$Name初期化
+							$Name = "";
+							for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+								if($jj != 0){
+					    			$Name .= ' and ';
+					    		}
+					    		$Name .= $retAttr[$ii]['value'][$jj];					
+							}
+							//氏名を格納
+							if($this->Session->getParameter("_lang") == "japanese"){
+								if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+								}else{
+									//上書きはしない。最初のsubを保持する
+									if($author_sub == null){
+										$author_sub = $Name;
+									}
+								}
+					    	}else{
+					    		if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+					    		}else{
+					    			if($author_sub == null){
+					    				$author_sub = $Name;
+					    			}
+					    		}	
+					    	}
+						}
+					}
+					//Add multiple language for creator 2009/09/02 K.Ito --end--
+					break;
+					
+				case 'jtitle':
+					//Add multiple language 2009/09/02 K.Ito --start--
+					if($this->iiif_fields['booktitle'] == null && $this->iiif_fields['journal'] == null){
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+									if($jj != 0){
+										$this->iiif_fields['booktitle'] .= ', ';
+										$this->iiif_fields['journal'] .= ', ';
+									}
+									$this->iiif_fields['booktitle'] .= $retAttr[$ii]['value'][$jj];
+									$this->iiif_fields['journal'] .= $retAttr[$ii]['value'][$jj];							
+								}
+							}else{
+								if($jtitle_sub == null){
+									for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+										if($jj != 0){
+											$jtitle_sub .= ', ';
+										}
+										$jtitle_sub .= $retAttr[$ii]['value'][$jj];						
+									}
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+									if($jj != 0){
+										$this->iiif_fields['booktitle'] .= ', ';
+										$this->iiif_fields['journal'] .= ', ';
+									}
+									$this->iiif_fields['booktitle'] .= $retAttr[$ii]['value'][$jj];
+									$this->iiif_fields['journal'] .= $retAttr[$ii]['value'][$jj];							
+								}
+							}else{
+								if($jtitle_sub == null){
+									for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+										if($jj != 0){
+											$jtitle_sub .= ', ';
+										}
+										$jtitle_sub .= $retAttr[$ii]['value'][$jj];	
+									}						
+								}
+							}
+						}
+					}
+					//Add multiple language 2009/09/02 K.Ito --end--
+					break;
+				
+				case 'volume':
+					if(!isset($this->iiif_fields['volume']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['volume'] .= ', ';
+							}
+							$this->iiif_fields['volume'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'issue':
+					if(!isset($this->iiif_fields['number']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['number'] .= ', ';
+							}
+							$this->iiif_fields['number'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'spage':
+					if(!isset($this->iiif_fields['spage']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							$this->iiif_fields['spage'][$jj] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'epage':
+					if(!isset($this->iiif_fields['epage']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							$this->iiif_fields['epage'][$jj] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'publisher':
+					if(!isset($this->iiif_fields['publisher'])){
+						//Add multiple language 2009/09/03 K.Ito --start--
+						//$pub 初期化;
+						$pub = null;
+							if($retAttr[$ii]['input_type'] == 'name'){
+						        $query = 'SELECT family, '.
+						    			 '		 name '.
+						    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+										 'WHERE item_id = ? '.
+						    			 '  AND item_no = ? '.
+						    			 '  AND attribute_id = ? '.
+						    			 '  AND is_delete = 0;';
+							    $params = null;
+								$params[] = $this->itemId;
+								$params[] = $this->itemNo;
+								$params[] = $retAttr[$ii]['attribute_id'];
+						    	$retName = $this->Db->execute($query, $params);
+								if ($retName === false) {
+									$this->errorMsg = 'Database access error.';
+									return false;
+								}
+								
+								// Add LIDO 2014/05/22 S.Suzuki --start--
+						    	$tmp_name = array();
+								
+								for ($jj = 0; $jj < count($retName); $jj++) {
+						    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+						    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+						    		if ($retName[$jj]['family'] !== '' || $retName[$jj]['name'] !== '') {
+						    			array_push($tmp_name, $retName[$jj]);
+						    		}
+						    	}
+								
+						    	for($jj=0;$jj<count($tmp_name);$jj++){
+						    		if($jj != 0){
+						    			$pub .= ' and ';
+						    		}
+						    		if ($tmp_name[$jj]['family'] !== '' && $tmp_name[$jj]['name'] !== '') {
+						    			$pub .= $tmp_name[$jj]['family'].','.$tmp_name[$jj]['name'];
+						    		}
+						    		else if ($tmp_name[$jj]['family'] !== '') {
+					    				$pub .= $tmp_name[$jj]['family'];
+						    		}
+						    		else {
+						    			$pub .= $tmp_name[$jj]['name'];
+						    		}
+						    	}
+								// Add LIDO 2014/05/22 S.Suzuki --end--
+							}else{
+								if(isset($retAttr[$ii]['value'])){
+									for ($jj = 0; $jj < count($retAttr[$ii]['value']); $jj++) {
+										if($jj != 0){
+											$pub .= ', ';
+										}
+										$pub .= $retAttr[$ii]['value'][$jj];
+									}
+								}
+							}
+						//最後に$pub格納
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['publisher'] = $pub;		
+							}else{
+								if($publisher_sub == null){
+									$publisher_sub = $pub;
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['publisher'] = $pub;
+							}else{
+								if($publisher_sub == null){
+									$publisher_sub = $pub;
+								}
+							}
+						}
+						//Add multiple language 2009/09/03 K.Ito --end--
+					}
+					break;
+					
+				case 'format':
+					if(!isset($this->iiif_fields['howpublished']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['howpublished'] .= ', ';
+							}
+							$this->iiif_fields['howpublished'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'contributor':
+					if(!isset($this->iiif_fields['institution'])){
+						//Add multiple language 2009/09/03 K.Ito --start--
+						//con初期化
+						$con = null;
+							if($retAttr[$ii]['input_type'] == 'name'){
+						        $query = 'SELECT family, '.
+						    			 '		 name '.
+						    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+										 'WHERE item_id = ? '.
+						    			 '  AND item_no = ? '.
+						    			 '  AND attribute_id = ? '.
+						    			 '  AND is_delete = 0;';
+							    $params = null;
+								$params[] = $this->itemId;
+								$params[] = $this->itemNo;
+								$params[] = $retAttr[$ii]['attribute_id'];
+						    	$retName = $this->Db->execute($query, $params);
+								if ($retName === false) {
+									$this->errorMsg = 'Database access error.';
+									return false;
+								}
+								
+								// Add LIDO 2014/05/22 S.Suzuki --start--
+								for ($jj = 0; $jj < count($retName); $jj++) {
+						    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+						    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+						    	}
+								
+						    	for($jj=0;$jj<count($retName);$jj++){
+						    		if($jj != 0){
+						    			$con .= ' and ';
+						    		}
+						    		if ($retName[$jj]['family'] !== '' && $retName[$jj]['name'] !== '') {
+						    			$con .= $retName[$jj]['family'].','.$retName[$jj]['name'];
+						    		}
+						    		else if ($retName[$jj]['family'] !== '') {
+						    			$con .= $retName[$jj]['family'];
+						    		}
+						    		else {
+						    			$con .= $retName[$jj]['name'];
+						    		}
+						    	}
+								// Add LIDO 2014/05/22 S.Suzuki --end--
+							}else{
+								if(isset($retAttr[$ii]['value'])){
+									for ($jj = 0; $jj < count($retAttr[$ii]['value']); $jj++) {
+										if($jj != 0){
+											$con .= ', ';
+										}
+										$con .= $retAttr[$ii]['value'][$jj];
+									}
+								}
+							}
+						//最後に$pub格納
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['institution'] = $con;		
+							}else{
+								if($contributor_sub == null){
+									$contributor_sub = $con;
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['institution'] = $con;
+							}else{
+								if($contributor_sub == null){
+									$contributor_sub = $con;
+								}
+							}
+						}
+						//Add multiple language 2009/09/03 K.Ito --start--
+					}
+					break;
+					
+				case 'type':
+					if(!isset($this->iiif_fields['type']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['type'] .= ', ';
+							}
+							$this->iiif_fields['type'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+				
+				case 'dateofissued':
+					if(!isset($this->iiif_fields['year']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['year'] .= ', ';
+							}
+							$split_date = split("-", $retAttr[$ii]['value'][$jj]);
+				    		$this->iiif_fields['year'] .= $split_date[0];
+				    		if($split_date[1] != null){
+					    		if($jj != 0){
+									$this->iiif_fields['month'] .= ', ';
+								}
+				    			switch($split_date[1]){
+				    				case '01':
+				    					$this->iiif_fields['month'] .= 'jan';
+				    					break;
+				    				case '02':
+				    					$this->iiif_fields['month'] .= 'feb';
+				    					break;
+				    				case '03':
+				    					$this->iiif_fields['month'] .= 'mar';
+				    					break;
+				    				case '04':
+				    					$this->iiif_fields['month'] .= 'apr';
+				    					break;
+				    				case '05':
+				    					$this->iiif_fields['month'] .= 'may';
+				    					break;
+				    				case '06':
+				    					$this->iiif_fields['month'] .= 'jun';
+				    					break;
+				    				case '07':
+				    					$this->iiif_fields['month'] .= 'jul';
+				    					break;
+				    				case '08':
+				    					$this->iiif_fields['month'] .= 'aug';
+				    					break;
+				    				case '09':
+				    					$this->iiif_fields['month'] .= 'sep';
+				    					break;
+				    				case '10':
+				    					$this->iiif_fields['month'] .= 'oct';
+				    					break;
+				    				case '11':
+				    					$this->iiif_fields['month'] .= 'nov';
+				    					break;
+				    				case '12':
+				    					$this->iiif_fields['month'] .= 'dec';
+				    					break;
+				    				default:
+				    					$this->iiif_fields['month'] .= $split_date[1];
+				    			}
+				    		}
+						}
+					}
+					break;
+                case 'description':
+                    if(!isset($this->iiif_fields['description']) && isset($retAttr[$ii]['value'])){
+                        for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+                            $this->iiif_fields['description'] .= $retAttr[$ii]['value'][$jj]."\n";
+                        }
+                    }
+                    break;
+                case 'fullTextURL':
+                    if(isset($retAttr[$ii]['value'])){
+                         $this->iiif_fields['fullTextURL'] = $retAttr[$ii]['value'];
+                    }
+                    break;
+				default:
+			}
+		}
+		
+		// ページのデータがなかった場合、作成
+		if(!isset($this->iiif_fields['pages']) && isset($this->iiif_fields['spage']) && isset($this->iiif_fields['epage'])){
+			for($ii=0;$ii<count($this->iiif_fields['spage']);$ii++){
+				if($this->iiif_fields['spage'][$ii] != null && $this->iiif_fields['epage'][$ii] != null){
+					if(isset($this->iiif_fields['pages'])){
+						$this->iiif_fields['pages'] .= ', ';
+					}
+					$this->iiif_fields['pages'] .= $this->iiif_fields['spage'][$ii].'--'.$this->iiif_fields['epage'][$ii];
+				}
+			}
+		}
+		
+		//Add multiple language 2009/09/03 K.Ito --start--
+		//authorがなかった場合
+		if( empty($this->iiif_fields['author']) ){
+			$this->iiif_fields['author'] = $author_sub;
+		}
+		
+		//jtitleがなかった場合
+		if( empty($this->iiif_fields['booktitle']) ){
+			$this->iiif_fields['booktitle'] = $jtitle_sub;
+			$this->iiif_fields['journal'] =  $jtitle_sub;
+		}
+		
+		//publisherがなかった場合
+    	if( empty($this->iiif_fields['publisher']) ){
+			$this->iiif_fields['publisher'] = $publisher_sub;
+		}
+		
+		//contributorがなかった場合
+    	if( empty($this->iiif_fields['institution']) ){
+			$this->iiif_fields['institution'] = $contributor_sub;
+		}
+		//Add multiple language 2009/09/03 K.Ito --end--
+
+		
+    	$feed = null;
+    	
+    	switch($retItem[0]['mapping_info']) {
+    		case 'Journal Article':
+    		case 'Departmental Bulletin Paper':
+    		case 'Article':
+    		case 'Conference Paper':
+    		case 'Presentation':
+    		case 'Preprint':
+    		case 'Book':
+    		case 'Technical Report':
+    		case 'Research Paper':
+    		case 'Thesis or Dissertation':
+    		case 'Learning Material':
+    		case 'Data or Dataset':
+    		case 'Software':
+    		case 'Others':
+    			$feed = $this->getManifest();
+    			break;
+    		default:
+    			$feed = $this->getManifest();
+    	}
+    	return $feed;
+    }
+
+    /**
+       mhaya
+     **/
+    function getManifest(){
+
+        // set Context
+        $data = array("@context"=>"http://iiif.io/api/presentation/2/context.json","@type"=>"sc:Manifest");
+        
+        //$uri = $this->repositoryHandleManager->createUri($this->itemId, $this->itemNo);
+        // get Detail Item Uri
+        // $item_detail = $this->getDetailUri($this->itemId, $this->itemNo);
+
+        // set id
+        $manifest_url = BASE_URL."?action=repository_iiif&itemId=".$this->itemId."&itemNo=".$this->itemNo;
+        $url = BASE_URL."/repository_iiif/".$this->itemId."/".$this->itemNo;
+        
+        $data = $data+array("@id"=>$manifest_url);
+
+        // set label
+        if(isset($this->iiif_fields['title'])){
+            $data += array("label"=>$this->iiif_fields['title']); 
+        }
+        // set description
+        if(isset($this->iiif_fields['description'])){
+            $data += array("description"=>$this->iiif_fields['description']); 
+        }
+
+        // set metadata
+        $metadata = [];
+        if(isset($this->iiif_fields['author'])){
+            $metadata[] = array("label"=>"Author","value"=>$this->iiif_fields['author']);
+        }
+        $data += array("metadata"=>$metadata);
+        
+        // set image url
+
+        $canvases =[];
+        if(isset($this->iiif_fields['fullTextURL'])){
+              for($jj=0;$jj<count($this->iiif_fields['fullTextURL']);$jj++){
+                  $images = [];
+                  
+                  list($img,$img_url) = split('\\|',$this->iiif_fields['fullTextURL'][$jj]);
+                  $img_info_url = preg_replace("/\\/full\\/full\\/0\\/default.jpg$/","",$img_url);
+                  $service = array("@context"=>"http://iiif.io/api/image/2/context.json","@id"=>$img_info_url,"profile"=>"http://iiif.io/api/image/2/level1.json");
+                  $resource = array("@id"=>$img_url,"@type"=>"dctypes:Image","format"=>"image/jpeg","service"=>$service);
+                  $canvas_url = $url."/canvaces/p".$jj;
+                  $images[] = array("@type"=>"oa:Annotation","motivation"=>"sc:painting","on"=>$canvas_url,"resource"=>$resource);
+                  $canvas = array("@id"=>$canvas_url,"@type"=>"sc:Canvas","images"=>$images,"label"=>"p".$jj,"width"=>100,"height"=>150);
+              $canvases[]= $canvas;
+              }
+        }
+        $sequences[]= array("@id"=>$url."/sequence/normal","@type"=>"sc:Sequence","canvases"=>$canvases);
+
+        $data +=array("sequences"=>$sequences);
+        $feed = json_encode($data);
+        return $feed;
+    }
+
+        private function getRepositoryHandleManager()
+    {
+        if(!isset($this->repositoryHandleManager)){
+            if(strlen($this->RepositoryAction->TransStartDate) == 0){
+                $date = new Date();
+                $this->RepositoryAction->TransStartDate = $date->getDate().".000
+";
+            }
+            $this->repositoryHandleManager = new RepositoryHandleManager($this->Session, $this->dbAccess, $this->RepositoryAction->TransStartDate);
+        }
+        
+    }
+        
+}
+?>
diff -uprN repository/iiif/IIIF.class.php~ hackedWEKO/repository/iiif/IIIF.class.php~
--- repository/iiif/IIIF.class.php~	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/iiif/IIIF.class.php~	2016-07-25 14:58:33.000000000 +0900
@@ -0,0 +1,1014 @@
+<?php
+/// --------------------------------------------------------------------
+// This program is licensed under a Creative Commons BSD Licence
+// http://creativecommons.org/licenses/BSD/
+// ref. http://iiif.io/api/presentation/2.1/
+// --------------------------------------------------------------------
+
+/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
+
+include_once MAPLE_DIR.'/includes/pear/File/Archive.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryAction.class.php';
+require_once WEBAPP_DIR. '/modules/repository/action/main/export/ExportCommon.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryItemAuthorityManager.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryOutputFilter.class.php';
+require_once WEBAPP_DIR. '/modules/repository/components/RepositoryHandleManager.class.php';
+
+/**
+ * [[機能説明]]
+ *
+ * @package     [[package名]]
+ * @access      public
+ */
+class Repository_IIIF extends RepositoryAction
+{
+	// リクエストパラメータを受け取るため
+	var $verb = null;
+	var $itemId = null;
+	var $itemNo = null;
+	
+	// ダウンロード用メンバ
+	var $uploadsView = null;
+	
+	// 改行
+	var $LF = "\n";
+	// タブシフト
+	var $TAB_SHIFT = "\t";
+
+	// 出力文字列
+	var $feed = '';
+	
+	// エラーメッセージ
+	var $errorMsg = "";
+	
+	// グローバル
+	var $iiif_fields = array();
+
+
+     /**
+     * for instance of RepositoryHandleManager class
+     * 
+     * @var object
+     */
+    private $repositoryHandleManager = null;
+
+    
+    /**
+     * [[機能説明]]
+     *
+     * @access  public
+     */
+    function execute()
+    {
+    	// 初期処理
+    	$this->initAction();
+
+
+        $this->getRepositoryHandleManager();
+        
+		// フィード文字列取得
+		$feed = $this->outputIIIF();
+    	
+    	// 取得結果がfalseでなければ
+    	if ( $feed != false ) {
+    		// ヘッダ出力
+    		header("Content-Type: application/json; charset=utf-8");
+	    	// フィード出力
+			print $feed;
+       	}else{
+       		// ヘッダ出力
+    		header("Content-Type: text/html; charset=utf-8");	// レスポンスのContent-Typeを明示的に指定する("text/html")
+       		// エラー出力
+       		print $this->errorMsg;
+       	}
+		
+		// テキスト書き出し終了後にexit関数を呼び出す
+    	exit();
+
+    }
+	
+    function outputIIIF()
+    {
+    	// アイテム情報の取得
+    	$query = 'SELECT ITEMTYPE.mapping_info, '.
+    			 '		 ITEM.title, '.
+    			 '		 ITEM.title_english, '.
+    			 '		 ITEM.language, '.
+    			 '		 ITEM.item_type_id, '.
+    			 '		 ITEM.serch_key, '.
+    			 '		 ITEM.shown_status '.
+    			 'FROM '.DATABASE_PREFIX.'repository_item ITEM, '.
+    			 '     '.DATABASE_PREFIX.'repository_item_type ITEMTYPE '.
+				 'WHERE ITEM.item_type_id = ITEMTYPE.item_type_id '.
+   				 '  AND ITEM.item_id = ? '.
+    			 '  AND ITEM.item_no = ? '.
+    			 '  AND ITEM.is_delete = 0;';
+    	$params = null;
+		$params[] = $this->itemId;
+		$params[] = $this->itemNo;
+ 
+    	$retItem = $this->Db->execute($query, $params);
+		if ($retItem === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+		
+		// アイテム情報が無い場合、終了
+		if (count($retItem) < 1){
+			$this->errorMsg = 'This item data is not found.';
+			return false;
+    	}
+    	// アイテムタイプのマッピング情報がない場合終了
+    	if($retItem[0]['mapping_info'] == null){
+    		$this->errorMsg = 'This item has no mapping info.';
+    		return false;
+    	}
+    	
+
+
+        // Add check item public status 2010/01/12 Y.Nakao --start--
+        // Add tree access control list 2012/03/07 T.Koyasu -start-
+        $role_auth_id = $this->Session->getParameter('_role_auth_id');
+        $user_auth_id = $this->Session->getParameter('_user_auth_id');
+        $user_id = $this->Session->getParameter('_user_id');
+        $this->Session->removeParameter('_role_auth_id');
+        $this->Session->removeParameter('_user_auth_id');
+        $this->Session->setParameter('_user_id', '0');
+        $this->Session->setParameter('_role_auth_id', $role_auth_id);
+        $this->Session->setParameter('_user_auth_id', $user_auth_id);
+        $this->Session->setParameter('_user_id', $user_id);
+        // Add tree access control list 2012/03/07 T.Koyasu -end-
+		// アイテム公開チェック
+        // Add Advanced Search 2013/11/26 R.Matsuura --start--
+        $itemAuthorityManager = new RepositoryItemAuthorityManager($this->Session, $this->dbAccess, $this->TransStartDate);
+        // Add Advanced Search 2013/11/26 R.Matsuura --end--
+        // Mod OpenDepo 2014/01/31 S.Arata --start--
+        if(!$itemAuthorityManager->checkItemPublicFlg($this->itemId, $this->itemNo, $this->repository_admin_base, $this->repository_admin_room)){
+			// item close
+			$retItem[0]['shown_status'] = "0";
+		}
+		// Mod OpenDepo 2014/01/31 S.Arata --end--
+		// Add check item public status 2010/01/12 Y.Nakao --end--
+
+    	// アイテムが非公開の場合エラー
+    	if($retItem[0]['shown_status'] != 1){
+    		$this->errorMsg = 'This item is private.';
+    		return false;
+    	}
+
+        
+    	// メタデータ取得
+    	$query = 'SELECT attribute_id, '.
+    	    	 '		 show_order, '.
+    			 '		 attribute_name, '.
+    			 '		 input_type, '.
+    			 '		 junii2_mapping, '.
+    			 // Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+    			 '		 hidden, '.
+    			 // Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+    			//Add display lang type 2009/09/01 K.Ito --start--
+    			 '		 display_lang_type '.
+    			//Add display lang type 2009/09/01 K.Ito --end--
+    			 'FROM '.DATABASE_PREFIX.'repository_item_attr_type '.
+				 'WHERE item_type_id = ? '.
+    			 '	AND is_delete = 0 '.
+    			 'order by show_order;';
+	    $params = null;
+	    $params[] = $retItem[0]['item_type_id'];
+    	$retAttr = $this->Db->execute($query, $params);
+		if ($retAttr === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+		
+		// 入力されているメタデータのvalueを取得
+    	$query = 'SELECT attribute_id, '.
+    	    	 '		 attribute_no, '.
+    			 '		 attribute_value '.
+    			 'FROM '.DATABASE_PREFIX.'repository_item_attr '.
+				 'WHERE item_id = ? '.
+    			 '	AND item_no = ? '.
+    			 '	AND item_type_id = ? '.
+    			 '	AND is_delete = 0 '.
+    			 'order by attribute_id;';
+	    $params = null;
+	    $params[] = $this->itemId;
+	    $params[] = $this->itemNo;
+	    $params[] = $retItem[0]['item_type_id'];
+    	$retAttrValue = $this->Db->execute($query, $params);
+		if ($retAttrValue === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+    	
+    	// Add LIDO 2014/05/09 S.Suzuki --start--
+    	for ($ii = 0; $ii < count($retAttrValue); $ii++) {
+    		$retAttrValue[$ii]['attribute_value'] = RepositoryOutputFilter::exclusiveReservedWords($retAttrValue[$ii]['attribute_value']);
+    	}
+		// Add LIDO 2014/05/09 S.Suzuki --end--
+    	
+		// 複数入力の紐づけ
+    	for($ii=0;$ii<count($retAttr);$ii++){
+    		$cntValue = 0;
+    		for($jj=0;$jj<count($retAttrValue);$jj++){
+	    		if($retAttr[$ii]['attribute_id'] == $retAttrValue[$jj]['attribute_id']){
+					$retAttr[$ii]['value'][$cntValue] = $retAttrValue[$jj]['attribute_value'];
+					$cntValue++;
+				}
+    		}
+		}
+		
+    	// 書誌情報を持つ場合、各データを取得
+        $query = 'SELECT BIBLIO_INFO.biblio_name, '.
+        		 '		 BIBLIO_INFO.volume, '.
+        		 '		 BIBLIO_INFO.biblio_name_english, '.
+        		 '		 BIBLIO_INFO.issue, '.
+        		 '		 BIBLIO_INFO.start_page, '.
+        		 '		 BIBLIO_INFO.end_page, '.
+	    	     '		 BIBLIO_INFO.date_of_issued '.
+        		 'FROM '.DATABASE_PREFIX.'repository_biblio_info BIBLIO_INFO, '.
+        		 '	   '.DATABASE_PREFIX.'repository_item_attr_type ATTRTYPE '.
+        		 'WHERE ATTRTYPE.input_type = "biblio_info" '.
+        		 '	AND ATTRTYPE.item_type_id = BIBLIO_INFO.item_type_id '.
+        		 '	AND ATTRTYPE.attribute_id = BIBLIO_INFO.attribute_id '.
+        		 '	AND ATTRTYPE.item_type_id = ? '.
+        		 '	AND BIBLIO_INFO.item_id = ? '.
+        		 '	AND BIBLIO_INFO.item_no = ? '.
+        		 '	AND ATTRTYPE.is_delete = 0 '.
+        		 // Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+        		 '	AND ATTRTYPE.hidden = 0 '.
+        		 // Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+        		 '	AND BIBLIO_INFO.is_delete = 0;';
+        $params = null;
+        $params[] = $retItem[0]['item_type_id'];
+        $params[] = $this->itemId;
+        $params[] = $this->itemNo;
+    	$retBiblio_info = $this->Db->execute($query, $params);
+		if ($retBiblio_info === false) {
+			$this->errorMsg = 'Database access error.';
+			return false;
+		}
+    	
+    	// Add LIDO 2014/05/09 S.Suzuki --start--
+    	for ($ii = 0; $ii < count($retBiblio_info); $ii++) {
+    		$retBiblio_info[$ii]['biblio_name']         = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['biblio_name']);
+    		$retBiblio_info[$ii]['volume']              = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['volume']);
+    		$retBiblio_info[$ii]['biblio_name_english'] = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['biblio_name_english']);
+    		$retBiblio_info[$ii]['issue']               = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['issue']);
+    		$retBiblio_info[$ii]['start_page']          = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['start_page']);
+    		$retBiblio_info[$ii]['end_page']            = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['end_page']);
+    		$retBiblio_info[$ii]['date_of_issued']      = RepositoryOutputFilter::exclusiveReservedWords($retBiblio_info[$ii]['date_of_issued']);
+    	}
+		// Add LIDO 2014/05/09 S.Suzuki --end--
+    	
+		// 書誌情報に含まれるデータを加工
+		if(count($retBiblio_info) > 0){
+	    	// ページ数の連結
+	    	$biblio_info_pages = null;
+	    	if($retBiblio_info[0]['start_page'] != null && $retBiblio_info[0]['end_page'] != null){
+				$biblio_info_pages = $retBiblio_info[0]['start_page'].'--'.$retBiblio_info[0]['end_page'];
+	    	}
+			
+	    	// 発行年月の取得
+	    	$biblio_info_year = null;
+	    	$biblio_info_month = null;
+	    	if($retBiblio_info[0]['date_of_issued'] != null){
+	    		$split_date = split("-", $retBiblio_info[0]['date_of_issued']);
+	    		$biblio_info_year = $split_date[0];
+	    		if($split_date[1] != null){
+	    			switch($split_date[1]){
+	    				case '01':
+	    					$biblio_info_month = 'jan';
+	    					break;
+	    				case '02':
+	    					$biblio_info_month = 'feb';
+	    					break;
+	    				case '03':
+	    					$biblio_info_month = 'mar';
+	    					break;
+	    				case '04':
+	    					$biblio_info_month = 'apr';
+	    					break;
+	    				case '05':
+	    					$biblio_info_month = 'may';
+	    					break;
+	    				case '06':
+	    					$biblio_info_month = 'jun';
+	    					break;
+	    				case '07':
+	    					$biblio_info_month = 'jul';
+	    					break;
+	    				case '08':
+	    					$biblio_info_month = 'aug';
+	    					break;
+	    				case '09':
+	    					$biblio_info_month = 'sep';
+	    					break;
+	    				case '10':
+	    					$biblio_info_month = 'oct';
+	    					break;
+	    				case '11':
+	    					$biblio_info_month = 'nov';
+	    					break;
+	    				case '12':
+	    					$biblio_info_month = 'dec';
+	    					break;
+	    				default:
+	    					$biblio_info_month = $split_date[1];
+	    			}
+	    		}
+	    	}
+		}
+
+
+		// 出力データ作成
+		//Add multiple language 2009/09/02 K.Ito --start--
+		if($this->Session->getParameter("_lang") == "japanese"){
+			if($retItem[0]['title'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title'];
+			}else if($retItem[0]['title_english'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title_english'];
+			}
+			if($retBiblio_info[0]['biblio_name'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+			}else if($retBiblio_info[0]['biblio_name_english'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name_english'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name_english'];
+			}
+		}else{
+			if($retItem[0]['title_english'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title_english'];
+			}else if($retItem[0]['title'] != ""){
+				$this->iiif_fields['title'] = $retItem[0]['title'];
+			}
+			if($retBiblio_info[0]['biblio_name_english'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name_english'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name_english'];
+			}else if($retBiblio_info[0]['biblio_name'] != ""){
+				$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+				$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+			}
+		}
+		//Add multiple language 2009/09/02 K.Ito --end--
+		//$this->iiif_fields['title'] = $retItem[0]['title'];
+		//$this->iiif_fields['booktitle'] = $retBiblio_info[0]['biblio_name'];
+		//$this->iiif_fields['journal'] = $retBiblio_info[0]['biblio_name'];
+		$this->iiif_fields['volume'] = $retBiblio_info[0]['volume'];
+		$this->iiif_fields['number'] = $retBiblio_info[0]['issue'];
+		$this->iiif_fields['pages'] = $biblio_info_pages;
+		$this->iiif_fields['month'] = $biblio_info_month;
+		$this->iiif_fields['year'] = $biblio_info_year;
+    	//print_r($retAttr);
+    	
+    	// init
+    	$author_sub = null;
+    	$jtitle_sub = null;
+    	$publisher_sub = null;
+    	$contributor_sub = null;
+    	
+    	
+			for($ii=0;$ii<count($retAttr);$ii++){//print_r($this->iiif_fields);
+			// Fix output hidden metadata 2011/11/28 Y.Nakao --start--
+			if($retAttr[$ii]['hidden'] == '1')
+			{
+				continue;
+			}
+			// Fix output hidden metadata 2011/11/28 Y.Nakao --end--
+				switch($retAttr[$ii]['junii2_mapping']){
+				case 'creator':
+					//Add multiple language for creator 2009/09/02 K.Ito --start--
+					if(!isset($this->iiif_fields['author'])){
+						if($retAttr[$ii]['input_type'] == 'name'){
+					    	// Authorを取得
+					        $query = 'SELECT family, '.
+					    			 '		 name '.
+					    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+									 'WHERE item_id = ? '.
+					    			 '  AND item_no = ? '.
+					    			 '  AND attribute_id = ? '.
+					    			 '  AND is_delete = 0;';
+						    $params = null;
+							$params[] = $this->itemId;
+							$params[] = $this->itemNo;
+							$params[] = $retAttr[$ii]['attribute_id'];
+					    	$retName = $this->Db->execute($query, $params);
+							if ($retName === false) {
+								$this->errorMsg = 'Database access error.';
+								return false;
+							}
+							
+							// Add LIDO 2014/05/22 S.Suzuki --start--
+					    	for ($jj = 0; $jj < count($retName); $jj++) {
+					    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+					    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+					    	}
+							
+							//一時保存用Name初期化
+							$Name = "";
+					
+					    	// 氏名を連結
+					    	for($jj=0;$jj<count($retName);$jj++){
+					    		if($jj != 0){
+					    			$Name .= ' and ';
+					    		}
+					    		if ($retName[$jj]['family'] !== '' && $retName[$jj]['name'] !== '') {
+					    			$Name .= $retName[$jj]['family'].','.$retName[$jj]['name'];
+					    		}
+					    		else if ($retName[$jj]['family'] !== '') {
+					    			$Name .= $retName[$jj]['family'];
+					    		}
+					    		else {
+					    			$Name .= $retName[$jj]['name'];
+					    		}
+					    	}
+							// Add LIDO 2014/05/22 S.Suzuki --end--
+							
+					    	//氏名を格納
+							if($this->Session->getParameter("_lang") == "japanese"){
+								if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+									if(!isset($this->iiif_fields['author'])){
+					    				$this->iiif_fields['author'] = $Name;
+									}
+									else{
+										$this->iiif_fields['author'] .= $Name;
+									}
+								}else{
+									if($author_sub == null){
+										$author_sub = $Name;
+									}
+								}
+					    	}else{
+					    		if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+					    		}else{
+					    			if($author_sub == null){
+					    				$author_sub = $Name;
+					    			}
+					    		}	
+					    	}
+						}else{
+							//$Name初期化
+							$Name = "";
+							for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+								if($jj != 0){
+					    			$Name .= ' and ';
+					    		}
+					    		$Name .= $retAttr[$ii]['value'][$jj];					
+							}
+							//氏名を格納
+							if($this->Session->getParameter("_lang") == "japanese"){
+								if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+								}else{
+									//上書きはしない。最初のsubを保持する
+									if($author_sub == null){
+										$author_sub = $Name;
+									}
+								}
+					    	}else{
+					    		if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+					    			$this->iiif_fields['author'] .= $Name;
+					    		}else{
+					    			if($author_sub == null){
+					    				$author_sub = $Name;
+					    			}
+					    		}	
+					    	}
+						}
+					}
+					//Add multiple language for creator 2009/09/02 K.Ito --end--
+					break;
+					
+				case 'jtitle':
+					//Add multiple language 2009/09/02 K.Ito --start--
+					if($this->iiif_fields['booktitle'] == null && $this->iiif_fields['journal'] == null){
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+									if($jj != 0){
+										$this->iiif_fields['booktitle'] .= ', ';
+										$this->iiif_fields['journal'] .= ', ';
+									}
+									$this->iiif_fields['booktitle'] .= $retAttr[$ii]['value'][$jj];
+									$this->iiif_fields['journal'] .= $retAttr[$ii]['value'][$jj];							
+								}
+							}else{
+								if($jtitle_sub == null){
+									for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+										if($jj != 0){
+											$jtitle_sub .= ', ';
+										}
+										$jtitle_sub .= $retAttr[$ii]['value'][$jj];						
+									}
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+									if($jj != 0){
+										$this->iiif_fields['booktitle'] .= ', ';
+										$this->iiif_fields['journal'] .= ', ';
+									}
+									$this->iiif_fields['booktitle'] .= $retAttr[$ii]['value'][$jj];
+									$this->iiif_fields['journal'] .= $retAttr[$ii]['value'][$jj];							
+								}
+							}else{
+								if($jtitle_sub == null){
+									for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+										if($jj != 0){
+											$jtitle_sub .= ', ';
+										}
+										$jtitle_sub .= $retAttr[$ii]['value'][$jj];	
+									}						
+								}
+							}
+						}
+					}
+					//Add multiple language 2009/09/02 K.Ito --end--
+					break;
+				
+				case 'volume':
+					if(!isset($this->iiif_fields['volume']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['volume'] .= ', ';
+							}
+							$this->iiif_fields['volume'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'issue':
+					if(!isset($this->iiif_fields['number']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['number'] .= ', ';
+							}
+							$this->iiif_fields['number'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'spage':
+					if(!isset($this->iiif_fields['spage']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							$this->iiif_fields['spage'][$jj] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'epage':
+					if(!isset($this->iiif_fields['epage']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							$this->iiif_fields['epage'][$jj] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'publisher':
+					if(!isset($this->iiif_fields['publisher'])){
+						//Add multiple language 2009/09/03 K.Ito --start--
+						//$pub 初期化;
+						$pub = null;
+							if($retAttr[$ii]['input_type'] == 'name'){
+						        $query = 'SELECT family, '.
+						    			 '		 name '.
+						    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+										 'WHERE item_id = ? '.
+						    			 '  AND item_no = ? '.
+						    			 '  AND attribute_id = ? '.
+						    			 '  AND is_delete = 0;';
+							    $params = null;
+								$params[] = $this->itemId;
+								$params[] = $this->itemNo;
+								$params[] = $retAttr[$ii]['attribute_id'];
+						    	$retName = $this->Db->execute($query, $params);
+								if ($retName === false) {
+									$this->errorMsg = 'Database access error.';
+									return false;
+								}
+								
+								// Add LIDO 2014/05/22 S.Suzuki --start--
+						    	$tmp_name = array();
+								
+								for ($jj = 0; $jj < count($retName); $jj++) {
+						    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+						    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+						    		if ($retName[$jj]['family'] !== '' || $retName[$jj]['name'] !== '') {
+						    			array_push($tmp_name, $retName[$jj]);
+						    		}
+						    	}
+								
+						    	for($jj=0;$jj<count($tmp_name);$jj++){
+						    		if($jj != 0){
+						    			$pub .= ' and ';
+						    		}
+						    		if ($tmp_name[$jj]['family'] !== '' && $tmp_name[$jj]['name'] !== '') {
+						    			$pub .= $tmp_name[$jj]['family'].','.$tmp_name[$jj]['name'];
+						    		}
+						    		else if ($tmp_name[$jj]['family'] !== '') {
+					    				$pub .= $tmp_name[$jj]['family'];
+						    		}
+						    		else {
+						    			$pub .= $tmp_name[$jj]['name'];
+						    		}
+						    	}
+								// Add LIDO 2014/05/22 S.Suzuki --end--
+							}else{
+								if(isset($retAttr[$ii]['value'])){
+									for ($jj = 0; $jj < count($retAttr[$ii]['value']); $jj++) {
+										if($jj != 0){
+											$pub .= ', ';
+										}
+										$pub .= $retAttr[$ii]['value'][$jj];
+									}
+								}
+							}
+						//最後に$pub格納
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['publisher'] = $pub;		
+							}else{
+								if($publisher_sub == null){
+									$publisher_sub = $pub;
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['publisher'] = $pub;
+							}else{
+								if($publisher_sub == null){
+									$publisher_sub = $pub;
+								}
+							}
+						}
+						//Add multiple language 2009/09/03 K.Ito --end--
+					}
+					break;
+					
+				case 'format':
+					if(!isset($this->iiif_fields['howpublished']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['howpublished'] .= ', ';
+							}
+							$this->iiif_fields['howpublished'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+					
+				case 'contributor':
+					if(!isset($this->iiif_fields['institution'])){
+						//Add multiple language 2009/09/03 K.Ito --start--
+						//con初期化
+						$con = null;
+							if($retAttr[$ii]['input_type'] == 'name'){
+						        $query = 'SELECT family, '.
+						    			 '		 name '.
+						    			 'FROM '.DATABASE_PREFIX.'repository_personal_name '.
+										 'WHERE item_id = ? '.
+						    			 '  AND item_no = ? '.
+						    			 '  AND attribute_id = ? '.
+						    			 '  AND is_delete = 0;';
+							    $params = null;
+								$params[] = $this->itemId;
+								$params[] = $this->itemNo;
+								$params[] = $retAttr[$ii]['attribute_id'];
+						    	$retName = $this->Db->execute($query, $params);
+								if ($retName === false) {
+									$this->errorMsg = 'Database access error.';
+									return false;
+								}
+								
+								// Add LIDO 2014/05/22 S.Suzuki --start--
+								for ($jj = 0; $jj < count($retName); $jj++) {
+						    		$retName[$jj]['family'] = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['family']);
+						    		$retName[$jj]['name']   = RepositoryOutputFilter::exclusiveReservedWords($retName[$jj]['name']);
+						    	}
+								
+						    	for($jj=0;$jj<count($retName);$jj++){
+						    		if($jj != 0){
+						    			$con .= ' and ';
+						    		}
+						    		if ($retName[$jj]['family'] !== '' && $retName[$jj]['name'] !== '') {
+						    			$con .= $retName[$jj]['family'].','.$retName[$jj]['name'];
+						    		}
+						    		else if ($retName[$jj]['family'] !== '') {
+						    			$con .= $retName[$jj]['family'];
+						    		}
+						    		else {
+						    			$con .= $retName[$jj]['name'];
+						    		}
+						    	}
+								// Add LIDO 2014/05/22 S.Suzuki --end--
+							}else{
+								if(isset($retAttr[$ii]['value'])){
+									for ($jj = 0; $jj < count($retAttr[$ii]['value']); $jj++) {
+										if($jj != 0){
+											$con .= ', ';
+										}
+										$con .= $retAttr[$ii]['value'][$jj];
+									}
+								}
+							}
+						//最後に$pub格納
+						if($this->Session->getParameter("_lang") == "japanese"){
+							if($retAttr[$ii]['display_lang_type'] == "japanese" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['institution'] = $con;		
+							}else{
+								if($contributor_sub == null){
+									$contributor_sub = $con;
+								}
+							}
+						}else{
+							if($retAttr[$ii]['display_lang_type'] == "english" || $retAttr[$ii]['display_lang_type'] == ""){
+								$this->iiif_fields['institution'] = $con;
+							}else{
+								if($contributor_sub == null){
+									$contributor_sub = $con;
+								}
+							}
+						}
+						//Add multiple language 2009/09/03 K.Ito --start--
+					}
+					break;
+					
+				case 'type':
+					if(!isset($this->iiif_fields['type']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['type'] .= ', ';
+							}
+							$this->iiif_fields['type'] .= $retAttr[$ii]['value'][$jj];					
+						}
+					}
+					break;
+				
+				case 'dateofissued':
+					if(!isset($this->iiif_fields['year']) && isset($retAttr[$ii]['value'])){
+						for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+							if($jj != 0){
+								$this->iiif_fields['year'] .= ', ';
+							}
+							$split_date = split("-", $retAttr[$ii]['value'][$jj]);
+				    		$this->iiif_fields['year'] .= $split_date[0];
+				    		if($split_date[1] != null){
+					    		if($jj != 0){
+									$this->iiif_fields['month'] .= ', ';
+								}
+				    			switch($split_date[1]){
+				    				case '01':
+				    					$this->iiif_fields['month'] .= 'jan';
+				    					break;
+				    				case '02':
+				    					$this->iiif_fields['month'] .= 'feb';
+				    					break;
+				    				case '03':
+				    					$this->iiif_fields['month'] .= 'mar';
+				    					break;
+				    				case '04':
+				    					$this->iiif_fields['month'] .= 'apr';
+				    					break;
+				    				case '05':
+				    					$this->iiif_fields['month'] .= 'may';
+				    					break;
+				    				case '06':
+				    					$this->iiif_fields['month'] .= 'jun';
+				    					break;
+				    				case '07':
+				    					$this->iiif_fields['month'] .= 'jul';
+				    					break;
+				    				case '08':
+				    					$this->iiif_fields['month'] .= 'aug';
+				    					break;
+				    				case '09':
+				    					$this->iiif_fields['month'] .= 'sep';
+				    					break;
+				    				case '10':
+				    					$this->iiif_fields['month'] .= 'oct';
+				    					break;
+				    				case '11':
+				    					$this->iiif_fields['month'] .= 'nov';
+				    					break;
+				    				case '12':
+				    					$this->iiif_fields['month'] .= 'dec';
+				    					break;
+				    				default:
+				    					$this->iiif_fields['month'] .= $split_date[1];
+				    			}
+				    		}
+						}
+					}
+					break;
+                case 'description':
+                    if(!isset($this->iiif_fields['description']) && isset($retAttr[$ii]['value'])){
+                        for($jj=0;$jj<count($retAttr[$ii]['value']);$jj++){
+                            $this->iiif_fields['description'] .= $retAttr[$ii]['value'][$jj]."\n";
+                        }
+                    }
+                    break;
+                case 'fullTextURL':
+                    if(isset($retAttr[$ii]['value'])){
+                         $this->iiif_fields['fullTextURL'] = $retAttr[$ii]['value'];
+                    }
+                    break;
+				default:
+			}
+		}
+		
+		// ページのデータがなかった場合、作成
+		if(!isset($this->iiif_fields['pages']) && isset($this->iiif_fields['spage']) && isset($this->iiif_fields['epage'])){
+			for($ii=0;$ii<count($this->iiif_fields['spage']);$ii++){
+				if($this->iiif_fields['spage'][$ii] != null && $this->iiif_fields['epage'][$ii] != null){
+					if(isset($this->iiif_fields['pages'])){
+						$this->iiif_fields['pages'] .= ', ';
+					}
+					$this->iiif_fields['pages'] .= $this->iiif_fields['spage'][$ii].'--'.$this->iiif_fields['epage'][$ii];
+				}
+			}
+		}
+		
+		//Add multiple language 2009/09/03 K.Ito --start--
+		//authorがなかった場合
+		if( empty($this->iiif_fields['author']) ){
+			$this->iiif_fields['author'] = $author_sub;
+		}
+		
+		//jtitleがなかった場合
+		if( empty($this->iiif_fields['booktitle']) ){
+			$this->iiif_fields['booktitle'] = $jtitle_sub;
+			$this->iiif_fields['journal'] =  $jtitle_sub;
+		}
+		
+		//publisherがなかった場合
+    	if( empty($this->iiif_fields['publisher']) ){
+			$this->iiif_fields['publisher'] = $publisher_sub;
+		}
+		
+		//contributorがなかった場合
+    	if( empty($this->iiif_fields['institution']) ){
+			$this->iiif_fields['institution'] = $contributor_sub;
+		}
+		//Add multiple language 2009/09/03 K.Ito --end--
+
+		
+    	$feed = null;
+    	
+    	switch($retItem[0]['mapping_info']) {
+    		case 'Journal Article':
+    		case 'Departmental Bulletin Paper':
+    		case 'Article':
+    		case 'Conference Paper':
+    		case 'Presentation':
+    		case 'Preprint':
+    		case 'Book':
+    		case 'Technical Report':
+    		case 'Research Paper':
+    		case 'Thesis or Dissertation':
+    		case 'Learning Material':
+    		case 'Data or Dataset':
+    		case 'Software':
+    		case 'Others':
+    			$feed = $this->getManifest();
+    			break;
+    		default:
+    			$feed = $this->getManifest();
+    	}
+    	return $feed;
+    }
+
+    /**
+       mhaya
+     **/
+    function getManifest(){
+
+        // set Context
+        $data = array("@context"=>"http://iiif.io/api/presentation/2/context.json","@type"=>"sc:Manifest");
+        
+        //$uri = $this->repositoryHandleManager->createUri($this->itemId, $this->itemNo);
+        // get Detail Item Uri
+        // $item_detail = $this->getDetailUri($this->itemId, $this->itemNo);
+
+        // set id
+        $manifest_url = BASE_URL."?action=repository_iiif&itemId=".$this->itemId."&itemNo=".$this->itemNo;
+        $url = BASE_URL."/repository_iiif/".$this->itemId."/".$this->itemNo;
+        
+        $data = $data+array("@id"=>$manifest_url);
+
+        // set label
+        if(isset($this->iiif_fields['title'])){
+            $data += array("label"=>$this->iiif_fields['title']); 
+        }
+        // set description
+        if(isset($this->iiif_fields['description'])){
+            $data += array("description"=>$this->iiif_fields['description']); 
+        }
+        // set image url
+
+        $canvases =[];
+        if(isset($this->iiif_fields['fullTextURL'])){
+              for($jj=0;$jj<count($this->iiif_fields['fullTextURL']);$jj++){
+                  list($img,$img_url) = split('\\|',$this->iiif_fields['fullTextURL'][$jj]);
+
+
+		  $img_info_url = preg_replace("/\\/full\\/full\\/0\\/default.jpg$/","",$img_url);
+                  
+                  $service = array("@context"=>"http://iiif.io/api/image/2/context.json","@id"=>$img_info_url,"profile"=>"http://iiif.io/api/image/2/level1.json");
+                  $resource = array("@id"=>$img_url,"@type"=>"dctypes:Image","format"=>"image/jpeg","service"=>$service);
+                  $canvas_url = $url."/canvaces/p".$jj;
+                  $images[] = array("@type"=>"oa:Annotation","motivation"=>"sc:painting","on"=>$canvas_url,"resource"=>$resource);
+                  $canvas = array("@id"=>$canvas_url,"@type"=>"sc:Canvas","images"=>$images,"label"=>"p".$jj,"width"=>100,"height"=>150);
+
+                  $canvases[] = $canvas;
+              }
+        }
+        $sequences[]= array("@id"=>$url."/sequence/normal","@type"=>"sc:Sequence","canvases"=>$canvases);
+        //$sequnces +=array("canvases"=>$canvases);
+         $data +=array("sequences"=>$sequences);
+
+
+       
+        $feed = json_encode($data);
+        /**
+    	// 文献種類、引用キー
+    	$feed = '@misc{weko_'.$this->itemId.'_'.$this->itemNo.','.$this->LF;
+    	
+    	// author(OPT)
+    	if(isset($this->iiif_fields['author'])){
+    		$feed .= '   author'.$this->TAB_SHIFT.' = "'.$this->iiif_fields['author'].'"';
+    	}
+    	
+    	// title(OPT)
+    	if(isset($this->iiif_fields['title'])){
+    		if($this->iiif_fields['author'] != null){
+    			$feed .= ','.$this->LF;
+    		}
+    		$feed .= '   title'.$this->TAB_SHIFT.' = "'.$this->iiif_fields['title'].'"';
+    	}
+    	// howpublished(OPT)
+    	if(isset($this->iiif_fields['howpublished'])){
+    		if($this->iiif_fields['author'] != null 
+    		|| $this->iiif_fields['title']){
+    			$feed .= ','.$this->LF;
+    		}
+    		$feed .= '   howpublished'.$this->TAB_SHIFT.' = "'.$this->iiif_fields['howpublished'].'"';
+    	}
+    	// month(OPT)
+    	if(isset($this->iiif_fields['month'])){
+    		if($this->iiif_fields['author'] != null 
+    		|| $this->iiif_fields['title'] 
+    		|| $this->iiif_fields['howpublished']){
+    			$feed .= ','.$this->LF;
+    		}
+    		$feed .= '   month'.$this->TAB_SHIFT.' = "'.$this->iiif_fields['month'].'"';
+    	}
+    	// year(OPT)
+    	if(isset($this->iiif_fields['year'])){
+    		if($this->iiif_fields['author'] != null 
+    		|| $this->iiif_fields['title'] 
+    		|| $this->iiif_fields['howpublished']
+    		|| $this->iiif_fields['month']){
+    			$feed .= ','.$this->LF;
+    		}
+    		$feed .= '   year '.$this->TAB_SHIFT.' = "'.$this->iiif_fields['year'].'"';
+    	}
+    	// note(OPT)
+    	if(isset($this->iiif_fields['note'])){
+    		if($this->iiif_fields['author'] != null 
+    		|| $this->iiif_fields['title'] 
+    		|| $this->iiif_fields['howpublished']
+    		|| $this->iiif_fields['month']
+    		|| $this->iiif_fields['year']){
+    			$feed .= ','.$this->LF;
+    		}
+    		$feed .= '   note '.$this->TAB_SHIFT.' = "';
+    		for($ii=0;$ii<count($this->iiif_fields['note']);$ii++){
+    			if($ii != 0){
+    				$feed .= ','.$this->LF.$this->TAB_SHIFT.$this->TAB_SHIFT.'    ';
+    			}
+    			$feed .= $this->iiif_fields['note'][$ii]['attribute_name'].':'.$this->iiif_fields['note'][$ii]['attribute_value'];
+    		}
+    		$feed .= '"';
+    	}
+    	$feed .= $this->LF.'}'.$this->LF;
+    	return $feed;
+        */
+        return $feed;
+    }
+
+        private function getRepositoryHandleManager()
+    {
+        if(!isset($this->repositoryHandleManager)){
+            if(strlen($this->RepositoryAction->TransStartDate) == 0){
+                $date = new Date();
+                $this->RepositoryAction->TransStartDate = $date->getDate().".000
+";
+            }
+            $this->repositoryHandleManager = new RepositoryHandleManager($this->Session, $this->dbAccess, $this->RepositoryAction->TransStartDate);
+        }
+        
+    }
+        
+}
+?>
diff -uprN repository/iiif/dicon.ini hackedWEKO/repository/iiif/dicon.ini
--- repository/iiif/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/iiif/dicon.ini	2016-07-25 10:19:08.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+uploadsView = "uploads.view"
\ No newline at end of file
diff -uprN repository/iiif/maple.ini hackedWEKO/repository/iiif/maple.ini
--- repository/iiif/maple.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/iiif/maple.ini	2016-07-25 10:19:08.000000000 +0900
@@ -0,0 +1,15 @@
+[Action]
+Session = "ref:Session"
+Db = "ref:DbObject"
+uploadsView = "ref:uploadsView"
+
+[View]
+
+[TokenExtra]
+mode="nobuild"
+
+[DIContainer]
+filename = "dicon.ini"
+
+[RequestCheck]
+request = GET
\ No newline at end of file
diff -uprN repository/logreport/dicon.ini hackedWEKO/repository/logreport/dicon.ini
--- repository/logreport/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/logreport/dicon.ini	2015-11-13 17:25:07.000000000 +0900
@@ -0,0 +1,3 @@
+[DIContainer]
+uploadsView = "uploads.view"
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/oaipmh/format/JuNii2.class.php hackedWEKO/repository/oaipmh/format/JuNii2.class.php
--- repository/oaipmh/format/JuNii2.class.php	2015-03-03 21:15:32.000000000 +0900
+++ hackedWEKO/repository/oaipmh/format/JuNii2.class.php	2015-11-30 09:05:45.000000000 +0900
@@ -250,7 +250,6 @@ class Repository_Oaipmh_JuNii2 extends R
     private function outputMetadta($itemAttrType, $itemAttr)
     {
         $xml = '';
-        
         $value = '';
         for($ii=0; $ii<count($itemAttrType); $ii++)
         {
@@ -328,8 +327,15 @@ class Repository_Oaipmh_JuNii2 extends R
                     // Add for Bug No.1 Fixes R.Matsuura 2013/09/24 --end--
                     else
                     {
-                        // when is value, output. 値があれば出力
-                        $xml .= $this->outputAttributeValue($junii2Map, $value, $lang);
+                        if(_REPOSITORY_REPON_JUNII2_EXDESCRIPTION==true){
+                        // Add description tag mhaya 2015/11/30 --start--
+                            $attr_name = $itemAttrType[$ii][RepositoryConst::DBCOL_REPOSITORY_ITEM_ATTR_TYPE_ATTRIBUTE_NAME];
+                            $xml .= $this->outputAttributeValue($junii2Map, $value, $lang,array(),$attr_name);
+                        }else{
+                            // when is value, output. 値があれば出力
+                            $xml .= $this->outputAttributeValue($junii2Map, $value, $lang,array());
+                        }
+                        // Add description tag mhaya 2015/11/30 --end--
                     }
                 }
             }
@@ -345,9 +351,10 @@ class Repository_Oaipmh_JuNii2 extends R
      * @param string $value
      * @param string $lang
      * @param array $authorIdArray
+     * @param string $attr_name
      * @return string
      */
-    private function outputAttributeValue($mapping, $value, $lang="", $authorIdArray=array())
+    private function outputAttributeValue($mapping, $value, $lang="", $authorIdArray=array(),$attr_name="")
     {
         $xml = '';
         // Add JuNii2 ver3 R.Matsuura 2013/09/24 --start--
@@ -401,7 +408,13 @@ class Repository_Oaipmh_JuNii2 extends R
                 $xml = $this->outputLCSH($value);
                 break;
             case RepositoryConst::JUNII2_DESCRIPTION:
-                $xml = $this->outputDescription($value);
+                // Add description tag  mhaya 2015/11/30 --start--
+                if(_REPOSITORY_REPON_JUNII2_EXDESCRIPTION==true){
+                    $xml = $this->outputDescription($value,$attr_name);
+                }else{
+                    $xml = $this->outputDescription($value);
+                }
+                // Add description tag mhaya 2015/11/30 --end--
                 break;
                 // Update JuNii2 ver3 R.Matsuura 2013/09/24 --start--
             case RepositoryConst::JUNII2_PUBLISHER:
@@ -862,11 +875,17 @@ class Repository_Oaipmh_JuNii2 extends R
      *   minOccurs = 0, maxOccurs = unbounded
      * 
      * @param string $description
+     $ @param string $attr_name
      * @return string
      */
-    private function outputDescription($description)
+    private function outputDescription($description,$attr_name="")
     {
         $tag = RepositoryConst::JUNII2_DESCRIPTION;
+        // Add description tag mhaya 2015/11/30 --start --
+        if(_REPOSITORY_REPON_JUNII2_EXDESCRIPTION==true){
+            return $this->outputElement($tag,$attr_name.":".$description);
+        }
+        // Add description tag mhaya 2015/11/30 --end--
         return $this->outputElement($tag, $description);
     }
     
diff -uprN repository/oaipmh/format/Lido.class.php hackedWEKO/repository/oaipmh/format/Lido.class.php
--- repository/oaipmh/format/Lido.class.php	2014-05-28 13:03:47.000000000 +0900
+++ hackedWEKO/repository/oaipmh/format/Lido.class.php	2015-11-13 17:26:56.000000000 +0900
@@ -129,6 +129,9 @@ class Repository_Oaipmh_Lido extends Rep
         {
             return '';
         }
+
+        // mhaya
+        $this->fixOutputFormat();
         
         // convert DOMDocument to XML string
         $xml = $this->domDocument->saveXML();
@@ -1157,4 +1160,231 @@ class Repository_Oaipmh_Lido extends Rep
         }
     }
 }
+
+
+//mhaya
+     /**
+     *
+     * LODO Schemaの妥当性検証パスするための暫定対応
+     *
+     **/
+    private function fixOutputFormat(){
+        $this->domDocument->normalizeDocument();
+
+        // sequence暫定対応(lido:descriptiveMetadata)
+        $descmeta = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_DESCRIPTIVE_METADATA);
+        if($descmeta->length===1){
+            $descmeta = $descmeta->item(0);
+
+            $obj_cls_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_CLASSIFICATION_WRAP)->item(0);
+            $obj_ident_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_IDENTIFICATION_WRAP)->item(0);
+            $event_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_WRAP)->item(0);
+            $obj_rel_wrap = $descmeta->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_RELATION_WRAP)->item(0);
+
+            $descmeta->removeChild($obj_cls_wrap);
+            $descmeta->removeChild($obj_ident_wrap);
+            $descmeta->removeChild($event_wrap);
+            $descmeta->removeChild($obj_rel_wrap);
+
+            $descmeta->appendChild($obj_cls_wrap);
+            $descmeta->appendChild($obj_ident_wrap);
+            $descmeta->appendChild($event_wrap);
+            $descmeta->appendChild($obj_rel_wrap);
+        }
+
+        // sequence暫定対応(lido:objectIdentificationWrap)
+        $obj_ident_wrap = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_IDENTIFICATION_WRAP);
+        if($obj_ident_wrap->length ===1 ){
+            $obj_ident_wrap = $obj_ident_wrap->item(0);
+
+            $title_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_TITLE_WRAP)->item(0);
+            $repo_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_REPOSITORY_WRAP)->item(0);
+            $obj_desc_wrap =  $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_DESCRIPTION_WRAP)->item(0);
+            $obj_mesure_wrap = $obj_ident_wrap->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_MEASUREMENTS_WRAP)->item(0);
+            /*
+            $obj_ident_wrap->removeChild($title_wrap);
+            $obj_ident_wrap->removeChild($repo_wrap);
+            $obj_ident_wrap->removeChild($obj_desc_wrap);
+            $obj_ident_wrap->removeChild($obj_mesure_wrap);
+            */
+            $obj_ident_wrap->appendChild($title_wrap);
+            $obj_ident_wrap->appendChild($repo_wrap);
+            $obj_ident_wrap->appendChild($obj_desc_wrap);
+            $obj_ident_wrap->appendChild($obj_mesure_wrap);
+        }
+
+        // sequence暫定対応(lido:objectWorkType)
+        $obj_work_type = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_OBJECT_WORK_TYPE);
+        foreach($obj_work_type as $node){
+            //$id = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_CONCEPT_ID);
+            $term = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_TERM);
+            if($term->length >0 ){
+                foreach($term as $node2){
+                    //       $node->removeChild($node2);
+                    $node->appendChild($node2);
+                }
+            }
+        }
+
+
+        //eventID 0..*            
+        //eventType 
+        //roleInEvent 0..*
+        //eventName 0..*
+        //eventActor 0..*
+        //culture 0..*
+        //eventDate 0..*
+        //periodName 0..*
+        //eventPlace 0..*
+        //eventMethod 0..*
+        //eventMaterialsTech 0..*
+        //thingPresent 0..*
+        //relatedEventSet 0..*
+        //eventDescriptionSet 0..*
+        $eventTag = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT);
+        if($eventTag->length === 1){
+            $tmp = $eventTag->item(0);
+            //            $event_id = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_ID);
+            $event_type = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_TYPE);
+            $event_actorTag = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_ACTOR);
+            $event_date = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_DATE);
+            $period_name = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_PERIOD_NAME);
+            $event_place = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_PLACE); 
+            $event_materialstech = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_MATERIALS_TECH);
+            
+            /*
+            foreach($event_id as $node) {
+                $tmp->appendChild($node);
+            }
+            */
+            // lido:event_type は lido:eventでは必須
+            if($event_type->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_EVENT_TYPE);
+                $tmp->appendChild($node);
+            }
+            foreach($event_type as $node) {
+                $tmp->appendChild($node);
+            }           
+            foreach($event_actorTag as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_date as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($period_name as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_place as $node) {
+                $tmp->appendChild($node);
+            }
+            foreach($event_materialstech as $node) {
+                $tmp->appendChild($node);
+            }
+        }
+        
+        // RecordWrap
+        $record_wrap = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_WRAP);
+        if($record_wrap->length === 1 ){
+            $tmp = $record_wrap->item(0);
+            // recordID 1..*            
+            $rec_id = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_ID);
+            // recordType            
+            $rec_type = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_TYPE);
+            // recordSource 1..*
+            $rec_src = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_SOURCE);
+            // recordRights 0..*
+            //$rec_right = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_);
+
+            // recordInfoSet 0..*
+            $rec_infoset = $tmp->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_INFO_SET);
+
+            if($rec_id->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_ID);
+                $tmp->appendChild($node);
+            }
+
+            if($rec_type->length === 0){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_TYPE);
+                $tmp->appendChild($node);
+            }
+
+            if($rec_src->length === 0 ){
+                $node = $this->domDocument->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_SOURCE);
+                $tmp->appendChild($node);
+            }
+            
+            $newDoc = new DOMDocument();
+            $root = $newDoc->createElement(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RECORD_WRAP);
+            $newDoc->appendChild($root);
+            foreach($rec_id as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            foreach($rec_type as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            foreach($rec_src as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            
+            foreach($rec_infoset as $node){
+                $root->appendChild($newDoc->importNode($node,true));
+            }
+            $this->deleteChildren($record_wrap->item(0));
+            $newNode = $this->domDocument->importNode($root,true);
+            $record_wrap->item(0)->parentNode->replaceChild($newNode,$record_wrap->item(0));
+            
+            
+        }
+
+        //resourceSet
+        //resourceID 0..1
+        //resourceRepresentation 0..*
+        //resourceType 0..1
+        //resourceRelType 0..*
+        //resourcePerspective 0..*
+        //resourceDescription 0..*
+        //resourceDateTaken 0..1
+        //resourceSource 0..*
+        //rightsResource 0..*
+        $resourceSet = $this->domDocument->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_SET);
+        foreach($resourceSet as $node){
+            $res_rep = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_REPRESENTATION);
+            $res_desc = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_DESCRIPTION);
+            $res_src = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RESOURCE_SOURCE);
+            $res_right = $node->getElementsByTagName(RepositoryConst::LIDO_TAG_NAMESPACE.RepositoryConst::LIDO_TAG_RIGHT_RESOURCE);
+            
+            foreach($res_rep as $n) {
+                $node->appendChild($n);
+            }
+            foreach($res_desc as $n){
+                $node->appendChild($n);
+            }
+            foreach($res_src as $n){
+                $node->appendChild($n);
+            }
+            foreach($res_right as $n){
+                $node->appendChild($n);
+            }
+        }
+        
+              
+    }
+
+    private function deleteNode($node) { 
+        $this->deleteChildren($node); 
+        $parent = $node->parentNode; 
+        $oldnode = $parent->removeChild($node); 
+    } 
+
+    private function deleteChildren($node) {
+        while (isset($node->firstChild)) { 
+            $this->deleteChildren($node->firstChild); 
+            $node->removeChild($node->firstChild); 
+        } 
+    } 
+
+// end mhaya 
+
+
+
 ?>
\ No newline at end of file
diff -uprN repository/opensearch/Opensearch.class.php hackedWEKO/repository/opensearch/Opensearch.class.php
--- repository/opensearch/Opensearch.class.php	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/opensearch/Opensearch.class.php	2015-12-01 10:36:36.000000000 +0900
@@ -29,7 +29,8 @@ class Repository_Opensearch extends Repo
     
     const REQUEST_OUTPUT_FORMAT="format";
     const REQUEST_RECURSIVE="recursive";
-    
+    // add 2015/12/1 mhaya
+    const REQUEST_COUNT = "count";
     /**
      * outuput type
      * when isset this parameter, return "text"
@@ -81,7 +82,7 @@ class Repository_Opensearch extends Repo
         
         // validate request parameter.
         $this->setRequestParameter();
-        
+
         // Add index recursive search. 2014/08/12 Y.Nakao --start--
         // When recursive and index not set, recursive is not run.再帰検索でもインデックス未指定の場合は再帰検索をしない
         if($this->recursive == 1 && isset($this->search_term[self::REQUEST_IDX]) && strlen($this->search_term[self::REQUEST_IDX]) > 0)
@@ -141,6 +142,11 @@ class Repository_Opensearch extends Repo
         // switch format.
         $outputXml = "";
         $redirectUrl = "";
+
+        // Fix count paramter bug 2015/12/1 mhaya ---start
+        $this->list_view_num = isset($this->_request[self::REQUEST_COUNT]) ? $this->_request[self::REQUEST_COUNT] : $this->list_view_num;
+        // Fix count paramter bug 2015/12/1 mhaya ---end
+
         switch($this->format)
         {
             case RepositorySearchRequestParameter::FORMAT_DESCRIPTION:
@@ -164,7 +170,11 @@ class Repository_Opensearch extends Repo
             case RepositorySearchRequestParameter::FORMAT_ATOM:
                 // output ATOM
                 require_once WEBAPP_DIR.'/modules/repository/opensearch/format/Atom.class.php';
-                $outputClass = new Repository_OpenSearch_Atom($this->Session, $this->Db);
+                /* start Repository_OpenSearch_Atomにblockidを渡す mhaya  */
+                //$outputClass = new Repository_OpenSearch_Atom($this->Session, $this->Db);
+                $blockid = $this->RepositoryAction->getBlockPageId();
+                $outputClass = new Repository_OpenSearch_Atom($this->Session, $this->Db,$blockid);
+                /* end mhaya*/
                 $searchResult = $this->search();
                 $requestParam = $this->getRequestParameter();
                 $requestParam[self::REQUEST_LOG_TERM] = $this->log_term;
diff -uprN repository/opensearch/format/Atom.class.php hackedWEKO/repository/opensearch/format/Atom.class.php
--- repository/opensearch/format/Atom.class.php	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/opensearch/format/Atom.class.php	2015-11-30 15:06:21.000000000 +0900
@@ -23,14 +23,26 @@ class Repository_OpenSearch_Atom extends
     const XMLNS_PRISM       = "http://prismstandard.org/namespaces/basic/2.0/";
     const XMLNS_OPEN_SEARCH = "http://a9.com/-/spec/opensearch/1.1/";
     const XMLNS_WEKO_LOG    = "/wekolog/";
-    
+
+    /** blockid保持用 mhaya **/
+    private $blockid = array();
+
+    // start blockidを引数として受け取るように変更 mhaya
     /**
      * コンストラクタ
      */
+    /*
     public function __construct($session, $db)
     {
         parent::__construct($session, $db);
     }
+    */
+    public function __construct($session, $db,$blockid)
+    {
+        parent::__construct($session, $db);
+        $this->blockid = $blockid;
+     }
+    // end mhaya
     
     /**
      * make ATOM XML for open search 
@@ -245,8 +257,24 @@ class Repository_OpenSearch_Atom extends
             for($jj=0; $jj<count($itemData[self::DATA_FILE_URI]); $jj++)
             {
                 $xml .= '       <dc:identifier>'.$this->RepositoryAction->forXmlChange("file_id:".$itemData[self::DATA_FILE_URI][$jj]).'</dc:identifier>'.self::LF;
+
+                //start enclosure file link を追加する変更 mhaya
+                
+                //リダイレクト後のURLを作成する
+                $url = $itemData[self::DATA_FILE_URI][$jj];
+                $url = str_replace("/?","/index.php?",$url);
+                $url = str_replace("action=repository_uri","action=pages_view_main&active_action=repository_action_common_download",$url);
+                $url = str_replace("file_id","attribute_id",$url);
+                if(stristr($url,"repository_action_common_download")){
+                        $url .= '&item_no='.$searchResult[0]['item_no'];
+                        $url .= '&page_id='.$this->blockid['page_id'].'&block_id='.$this->blockid['block_id'];
+                }
+                //enclosure要素の作成
+                $xml .= '       <link rel="enclosure" title="'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_FILE_NAME][$jj]).'" type="'.$this->RepositoryAction->forXmlChange($itemData[self::DATA_MIME_TYPE][$jj]).'" href="'.$this->RepositoryAction->forXmlChange($url).'" />'.self::LF;
+
+                //end mhaya
             }
-            
+
             // creator
             for($jj=0;$jj<count($itemData[self::DATA_CREATOR]);$jj++)
             {
diff -uprN repository/opensearch/format/FormatAbstract.class.php hackedWEKO/repository/opensearch/format/FormatAbstract.class.php
--- repository/opensearch/format/FormatAbstract.class.php	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/opensearch/format/FormatAbstract.class.php	2015-11-30 15:37:39.000000000 +0900
@@ -31,6 +31,9 @@ class Repository_Opensearch_FormatAbstra
     const DATA_ITEM_TYPE_NAME = "item_type_name";
     const DATA_MIME_TYPE = "mime_type";
     const DATA_FILE_URI = "file_uri";
+    // start mhaya
+    const DATA_FILE_NAME = "file_name";
+    // end mhaya
     const DATA_CREATOR = "creator";
     const DATA_PUBLISHER = "publisher";
     const DATA_INDEX_PATH = "index_path";
@@ -242,6 +245,9 @@ class Repository_Opensearch_FormatAbstra
                         self::DATA_ITEM_TYPE_NAME => "",
                         self::DATA_MIME_TYPE => array(),
                         self::DATA_FILE_URI => array(),
+                        // start mhaya
+                        self::DATA_FILE_NAME => array(),
+                        // end mhaya
                         self::DATA_URL => array(),
                         self::DATA_CREATOR => array(),
                         self::DATA_CREATOR_LANG => array(),
@@ -306,7 +312,7 @@ class Repository_Opensearch_FormatAbstra
                 $itemData[self::DATA_TITLE] = $item[RepositoryConst::DBCOL_REPOSITORY_ITEM_TITLE_ENGLISH];
             }
         }
-        
+
         ///// setting uri /////
         //if(strlen($item[RepositoryConst::DBCOL_REPOSITORY_ITEM_URI]) > 0)
         //{
@@ -396,6 +402,9 @@ class Repository_Opensearch_FormatAbstra
                                    "&file_id=".$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_ATTRIBUTE_ID].
                                    "&file_no=".$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NO];
                         array_push($itemData[self::DATA_FILE_URI], $fileUri);
+                        // start ファイル名を取得 mhaya
+                        array_push($itemData[self::DATA_FILE_NAME],$itemAttr[$ii][$jj][RepositoryConst::DBCOL_REPOSITORY_FILE_FILE_NAME]);
+                        // end mhaya
                     }
                 }
                 
@@ -477,6 +486,39 @@ class Repository_Opensearch_FormatAbstra
                     array_push($itemData[self::DATA_DESCRIPTION], $value);
                     array_push($itemData[self::DATA_DESCRIPTION_LANG], $itemAttrType[$ii]["display_lang_type"]);
                 }
+                // Add link rel="enclosure" element 2015/11/30 mhaya start
+                else if($mapping == RepositoryConst::JUNII2_FULL_TEXT_URL)
+                {
+                    if(array_search($value,$itemData)===FALSE){
+                        if(preg_match('/.*\/((.+)\.(.+))$/',$value,$match)){
+                            if(preg_match('/jpg$/i',$match[3]))
+                            {
+                                array_push($itemData[self::DATA_FILE_URI],$value);
+                                array_push($itemData[self::DATA_FILE_NAME],basename($value));
+                                array_push($itemData[self::DATA_MIME_TYPE],"image/jpeg");
+                            }
+                            else if(preg_match('/png$/i',$match[3]))
+                            {
+                                array_push($itemData[self::DATA_FILE_URI],$value);
+                                array_push($itemData[self::DATA_FILE_NAME],basename($value));
+                                array_push($itemData[self::DATA_MIME_TYPE],"image/png");
+                            }
+                            else if(preg_match('/[tiff|tif]$/i',$match[3]))
+                            {
+                                array_push($itemData[self::DATA_FILE_URI],$value);
+                                array_push($itemData[self::DATA_FILE_NAME],basename($value));
+                                array_push($itemData[self::DATA_MIME_TYPE],"image/tiff");
+                            }
+                            else if(preg_match('/bmp$/i',$match[3]))
+                            {
+                                array_push($itemData[self::DATA_FILE_URI],$value);
+                                array_push($itemData[self::DATA_FILE_NAME],basename($value));
+                                array_push($itemData[self::DATA_MIME_TYPE],"image/bmp");
+                            }
+                        }
+                    }
+                }
+                // Add link rel="enclosure" element 2015/11/30 mhaya end
             }
         }
 
diff -uprN repository/templates/default/repository_item_detail.html hackedWEKO/repository/templates/default/repository_item_detail.html
--- repository/templates/default/repository_item_detail.html	2015-08-20 10:16:27.000000000 +0900
+++ hackedWEKO/repository/templates/default/repository_item_detail.html	2016-07-25 15:40:15.000000000 +0900
@@ -1,6 +1,6 @@
 <!--// ---------------------------------------------------------------------->
 <!--//                                                                     -->
-<!--// $Id: repository_item_detail.html 56721 2015-08-20 01:16:27Z tatsuya_koyasu $          -->
+<!--// $Id: repository_item_detail.html 53594 2015-05-28 05:25:53Z kaede_matsushita $          -->
 <!--//                                                                     -->
 <!--// Copyright (c) 2007 - 2008, National Institute of Informatics,        -->
 <!--// Research and Development Center for Scientific Information Resources -->
@@ -292,8 +292,6 @@
 														<{$lang.repository_item_file_license_notation_by_nc_sa}>
 													<{elseif $item_attr[i][j].license_id == 106}>
 														<{$lang.repository_item_file_license_notation_by_nc_nd}>
-													<{else}>
-														<{$item_attr[i][j].license_notation_array[k]}>
 													<{/if}>
 													<{if count($item_attr[i][j].license_notation_array)!=0}>
 														<br />
@@ -525,8 +523,6 @@
 															<{$lang.repository_item_file_license_notation_by_nc_sa}>
 														<{elseif $item_attr[i][j].license_id == 106}>
 															<{$lang.repository_item_file_license_notation_by_nc_nd}>
-														<{else}>
-															<{$item_attr[i][j].license_notation_array[k]}>
 														<{/if}>
 														<{if count($item_attr[i][j].license_notation_array)!=0}>
 															<br />
@@ -793,8 +789,6 @@
 														<{$lang.repository_item_file_license_notation_by_nc_sa}>
 													<{elseif $item_attr[i][j].license_id == 106}>
 														<{$lang.repository_item_file_license_notation_by_nc_nd}>
-													<{else}>
-														<{$item_attr[i][j].license_notation_array[k]}>
 													<{/if}>
 													<{if count($item_attr[i][j].license_notation_array)!=0}>
 														<br />
@@ -1094,6 +1088,11 @@
 					<td><a href="<{$smarty.session.bibtex_uri}>" target="_blank"><img src="<{$smarty.const.CORE_BASE_URL}>/images/repository/default/bibtex.png" alt="BIBTEX" /></a></td>
 					<td><a href="<{$smarty.session.swrc_uri}>" target="_blank"><img src="<{$smarty.const.CORE_BASE_URL}>/images/repository/default/swrc.png" alt="SWRC"/></a></td>
 					<td><a href="#" onclick="repositoryCls['<{$id}>'].repositoryGoMainExportDetailConfirm('<{$smarty.session.prev_page_uri}>'); return false;"><img src="<{$smarty.const.CORE_BASE_URL}>/images/repository/default/export.png" alt="WEKO EXPORT"/></a></td>
+<!--add 2016/07/25 mhaya-->
+<{if _REPOSITORY_REPON_IIIF_SUPPORT==true}>
+<td><a href="<{$smarty.session.iiif_uri}>" target="_blank"><img src="<{$smarty.const.CORE_BASE_URL}>/images/repository/default/iiif.png" alt="IIIF" /></a></td>
+<{/if}>
+<!--2016/07/25 mhaya end  -->
 					<td><a href="#" onclick="repositoryCls['<{$id}>'].repositoryGoDetailPrint('<{$smarty.const.BASE_URL}>/index.php?action=repository_action_main_print'); return false;"><img src="<{$smarty.const.CORE_BASE_URL}>/images/repository/default/print.png" alt="PRINT PREVIEW"/></a></td>
 				</tr>
 				<{* Modify Directory specification BASE_URL K.Matsuo 2011/9/5 --end-- *}>
@@ -1315,15 +1314,28 @@
 											<tr class="tr_detail_line_repos" <{ if $attr_type[i].hidden == '1' }>style="color: #808080;"<{/if}>>
 												<th class="th_detail_line_repos vt al w20 ws"><{$attr_type[i].attribute_name}></th>
 												<td class="td_detail_line_repos w80">
-													<{section name=j loop=$item_attr[i]}>
-														<a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
-															<{if $item_attr[i][j].attribute_value[1] != ""}>
-																<{$item_attr[i][j].attribute_value[1]}>
-															<{else}>
-																<{$item_attr[i][j].attribute_value[0]}>
-															<{/if}>
-														</a><br>
-													<{/section}>
+												  <{section name=j loop=$item_attr[i]}>
+
+<!-- using iframe/img tag 2016/07/25 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+       <iframe src="<{$item_attr[i][j].attribute_value[0]}>" class="hackedWekoItem" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+       <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+       <img src="<{$item_attr[i][j].attribute_value[0]}>" class="hackedWekoItem" alt="<{$item_attr[i][j].attribute_value[1]}>"/></a>
+<br/>
+<{else}>
+       <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+       <{if $item_attr[i][j].attribute_value[1] != ""}>
+               <{$item_attr[i][j].attribute_value[1]}>
+       <{else}>
+               <{$item_attr[i][j].attribute_value[0]}>
+       <{/if}>
+        </a><br/>
+<{/if}>
+<!-- using iframe/img tag 2016/07/25 by mhaya end -->
+        
+
+                                                                                                  <{/section}>
 												</td>
 											</tr>
 										<{/if}>
@@ -1722,21 +1734,7 @@
 							<{section name=i loop=$smarty.session.reference}>
 								<{assign var="reference" value=$smarty.session.reference}>
 								<{* Modify Directory specification BASE_URL K.Matsuo 2011/9/5 *}>
-								<a href="<{$smarty.const.BASE_URL}>/?action=repository_uri&item_id=<{$reference[i].item_id}>">
-									<{if $smarty.session._lang=="japanese"}>
-										<{if $reference[i].title != ""}>
-											<{$reference[i].title}>
-										<{else}>
-											<{$reference[i].title_english}>
-										<{/if}>
-									<{else}>
-										<{if $reference[i].title_english != ""}>
-											<{$reference[i].title_english}>
-										<{else}>
-											<{$reference[i].title}>
-										<{/if}>
-									<{/if}>
-								</a>
+								<a href="<{$smarty.const.BASE_URL}>/?action=repository_uri&item_id=<{$reference[i].item_id}>"><{$reference[i].title}></a>
 								<br>
 							<{/section}>
 						</td>
diff -uprN repository/templates/default/repository_mobile_item_detail.html hackedWEKO/repository/templates/default/repository_mobile_item_detail.html
--- repository/templates/default/repository_mobile_item_detail.html	2015-02-02 16:33:54.000000000 +0900
+++ hackedWEKO/repository/templates/default/repository_mobile_item_detail.html	2016-07-25 15:39:35.000000000 +0900
@@ -626,15 +626,27 @@
                         <{$attr_type[i].attribute_name}>
                     </div>
                     <div style="text-align:left; padding-left:20px;">
-                        <{if count($item_attr[i])==1}>
-                             <a target="_blank" href="<{$item_attr[i][0].attribute_value[0]}>">
-                                 <{if $item_attr[i][0].attribute_value[1] != ""}>
+                      <{if count($item_attr[i])==1}>
+<!-- using iframe/img tag 2016/07/25 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+       <iframe class="hackedWekoItem" src="<{$item_attr[i][j].attribute_value[0]}>" scrolling="auto">Sorry. This content use IFrame</iframe>
+
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+                              <a target="_blank" href="<{$item_attr[i][0].attribute_value[0]}>">
+       <img class="hackedWekoItem" src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>"/>
+</a>
+<{else}>
+                              <a target="_blank" href="<{$item_attr[i][0].attribute_value[0]}>">
+                                  <{if $item_attr[i][0].attribute_value[1] != ""}>
                                      <{$item_attr[i][0].attribute_value[1]}>
-                                 <{else}>
-                                     <{$item_attr[i][0].attribute_value[0]}>
-                                 <{/if}>
-                             </a>
-                        <{else}>
+                                <{else}>
+                                <{$item_attr[i][0].attribute_value[0]}>
+                                  <{/if}>
+                              </a>
+<{/if}>
+<!-- using iframe/img tag 2016/07/25 by mhaya end -->
+                              
+                             <{else}>
                             <table width="100%">
                                 <{section name=j loop=$item_attr[i]}>
                                     <tr>
@@ -642,13 +654,24 @@
                                             <{$smarty.section.j.index_next}>.
                                         </td>
                                         <td style="width:100%; padding-top: 5px;">
-                                            <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
-                                                <{if $item_attr[i][j].attribute_value[1] != ""}>
-                                                    <{$item_attr[i][j].attribute_value[1]}>
-                                                <{else}>
-                                                    <{$item_attr[i][j].attribute_value[0]}>
-                                                <{/if}>
-                                            </a>
+<!-- using iframe/img tag 2012/09/20 by mhaya start -->
+<{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+       <iframe style="width: 60%;" src="<{$item_attr[i][j].attribute_value[0]}>" height="700" width="100%" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+       <img style="width: 60%;" src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>"/>
+<{else}>
+
+
+                                             <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+                                                 <{if $item_attr[i][j].attribute_value[1] != ""}>
+                                                     <{$item_attr[i][j].attribute_value[1]}>
+                                               <{else}>
+                                                     <{$item_attr[i][j].attribute_value[0]}>
+                                                 <{/if}>
+                                             </a>
+
+<{/if}>
+<!-- using iframe/img tag 2012/09/20 by mhaya end -->
                                         </td>
                                     </tr>
                                 <{/section}>
diff -uprN repository/templates/default/smartphone/repository_item_detail.html hackedWEKO/repository/templates/default/smartphone/repository_item_detail.html
--- repository/templates/default/smartphone/repository_item_detail.html	2015-05-28 14:25:53.000000000 +0900
+++ hackedWEKO/repository/templates/default/smartphone/repository_item_detail.html	2016-07-25 15:39:13.000000000 +0900
@@ -894,14 +894,25 @@
                                             <tr class="tr_detail_line_repos" <{ if $attr_type[i].hidden == '1' }>style="color: #808080;"<{/if}>>
                                                 <th class="th_detail_line_repos vt al w20 ws"><{$attr_type[i].attribute_name}></th>
                                                 <td class="td_detail_line_repos w80">
-                                                    <{section name=j loop=$item_attr[i]}>
-                                                        <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
-                                                            <{if $item_attr[i][j].attribute_value[1] != ""}>
-                                                                <{$item_attr[i][j].attribute_value[1]}>
-                                                            <{else}>
-                                                                <{$item_attr[i][j].attribute_value[0]}>
-                                                            <{/if}>
-                                                        </a><br>
+                                                  <{section name=j loop=$item_attr[i]}>
+<!-- using iframe/img tag 2016/07/25 by mhaya start -->
+                                                    <{if $item_attr[i][j].attribute_value[1] != "" && (strstr(strtolower($item_attr[i][0].attribute_value[1]),"iframe"))==true}>
+       <iframe style="width: 60%;" src="<{$item_attr[i][j].attribute_value[0]}>" scrolling="auto">Sorry. This content use IFrame</iframe>
+<{elseif strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true||strstr(strtolower($item_attr[i][j].attribute_value[0]),".jpg")==true}>
+       <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+       <img style="width: 60%;" src="<{$item_attr[i][j].attribute_value[0]}>" alt="<{$item_attr[i][j].attribute_value[1]}>"/>
+</a>
+<{else}>
+       <a target="_blank" href="<{$item_attr[i][j].attribute_value[0]}>">
+       <{if $item_attr[i][j].attribute_value[1] != ""}>
+               <{$item_attr[i][j].attribute_value[1]}>
+       <{else}>
+               <{$item_attr[i][j].attribute_value[0]}>
+       <{/if}>
+       </a><br>
+<{/if}>
+       <!-- using iframe/img tag 2016/07/25 by mhaya end -->
+       
                                                     <{/section}>
                                                 </td>
                                             </tr>
@@ -1503,4 +1514,4 @@ showMetadata = function(type){
 <script type="text/javascript">
     function getUserID() { return "<{$action.annoteaUser}>"; }
 </script>
-<{* for Flash Annotation --end-- *}>
\ No newline at end of file
+<{* for Flash Annotation --end-- *}>
diff -uprN repository/view/common/item/detail/Detail.class.php hackedWEKO/repository/view/common/item/detail/Detail.class.php
--- repository/view/common/item/detail/Detail.class.php	2013-10-29 19:01:04.000000000 +0900
+++ hackedWEKO/repository/view/common/item/detail/Detail.class.php	2016-07-25 10:13:20.000000000 +0900
@@ -117,6 +117,8 @@ class Repository_View_Common_Item_Detail
             $this->Session->removeParameter("oaipmh_uri");
             $this->Session->removeParameter("bibtex_uri");
             $this->Session->removeParameter("swrc_uri");
+            // Add iiif presentation api support mhaya 2016/08/25
+            $this->Session->removeParameter("iiif_uri");
             
             // Add smartPhone support T.Koyasu 2012/04/09 -start-
             $mainDetail = new Repository_View_Main_Item_Detail($this->Session, $this->Db, $this->item_id, $this->item_no, $this->getData, $this->languagesView, $this->block_id, $this->commonMain, true);
diff -uprN repository/view/common/item/supple/redirect/dicon.ini hackedWEKO/repository/view/common/item/supple/redirect/dicon.ini
--- repository/view/common/item/supple/redirect/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/view/common/item/supple/redirect/dicon.ini	2015-11-13 17:25:10.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+mailMain = "mail.main"
\ No newline at end of file
diff -uprN repository/view/main/item/detail/Detail.class.php hackedWEKO/repository/view/main/item/detail/Detail.class.php
--- repository/view/main/item/detail/Detail.class.php	2015-10-09 20:16:04.000000000 +0900
+++ hackedWEKO/repository/view/main/item/detail/Detail.class.php	2016-07-25 10:24:05.000000000 +0900
@@ -406,7 +406,12 @@ class Repository_View_Main_Item_Detail e
             // Add Output SWRC feed on detail page 2008/11/12 A.Suzuki --start--
             $this->Session->setParameter("swrc_uri", BASE_URL."/?action=repository_swrc&itemId=".$this->item_id."&itemNo=".$this->item_no);
             // Add Output SWRC feed on detail page 2008/11/12 A.Suzuki --end--
-             
+
+            // Add Output IIIF manifest on detail page 2016/07/25 mhaya --start--
+            $this->Session->setParameter("iiif_uri", BASE_URL."/?action=repository_iiif&itemId=".$this->item_id."&itemNo=".$this->item_no);
+            // Add Output IIIF manifest on detail page 2016/07/25 mhaya --end--
+            
+            
             // 通貨単位設定
             $money_units = null;
             $money_units = $this->getMoneyUnit();
diff -uprN repository/view/main/item/detail/dicon.ini hackedWEKO/repository/view/main/item/detail/dicon.ini
--- repository/view/main/item/detail/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/view/main/item/detail/dicon.ini	2015-11-13 17:25:11.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+languagesView = "languages.view"
\ No newline at end of file
diff -uprN repository/view/main/item/snippet/dicon.ini hackedWEKO/repository/view/main/item/snippet/dicon.ini
--- repository/view/main/item/snippet/dicon.ini	1970-01-01 09:00:00.000000000 +0900
+++ hackedWEKO/repository/view/main/item/snippet/dicon.ini	2015-11-13 17:25:11.000000000 +0900
@@ -0,0 +1,2 @@
+[DIContainer]
+languagesView = "languages.view"
\ No newline at end of file
